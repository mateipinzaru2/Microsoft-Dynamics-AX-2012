Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: DBT

; Microsoft Dynamics AX Table : BankAccountTable unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #BankAccountTable
    EnforceFKRelation 0
    PROPERTIES
      Name                #BankAccountTable
      Label               #@SYS21829
      FormRef             #BankAccountTable
      TitleField1         #AccountID
      TitleField2         #Name
      ConfigurationKey    #Bank
      SecurityKey         #BankTables
      AOSAuthorization    #CreateReadUpdateDelete
      CacheLookup         #Found
      CreateRecIdIndex    #Yes
      TableGroup          #Main
      PrimaryIndex        #AccountIdx
      ClusterIndex        #AccountIdx
      DeveloperDocumentation  #@SYS328970
      Origin              #{2C100007-0000-1000-99DA-89106397CEA4}
      LegacyId            #7
    ENDPROPERTIES
    
    FIELDS
      FIELD #AccountID
        STRING
        PROPERTIES
          Name                #AccountID
          Mandatory           #Yes
          AllowEdit           #No
          Table               #BankAccountTable
          Origin              #{B1435AEF-7101-415E-B89B-E209D571E44A}
          LegacyId            #1
          ExtendedDataType    #CompanyBankAccountId
        ENDPROPERTIES
        
      FIELD #AccountNameKana_JP
        STRING
        PROPERTIES
          Name                #AccountNameKana_JP
          Table               #BankAccountTable
          Origin              #{2A121F4C-0007-1000-4A71-03E334E58B35}
          LegacyId            #8012
          ExtendedDataType    #BankAccountNameKana_JP
          StringSize          #40
        ENDPROPERTIES
        
      FIELD #AccountNum
        STRING
        PROPERTIES
          Name                #AccountNum
          AOSAuthorization    #Yes
          Table               #BankAccountTable
          Origin              #{4D70A658-DAC5-45A6-BF0F-152D90F0C588}
          LegacyId            #10
          ExtendedDataType    #BankAccount
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #ActiveFrom
        DATETIME
        PROPERTIES
          Name                #ActiveFrom
          Label               #@SYS129004
          HelpText            #@SYS300179
          Table               #BankAccountTable
          Origin              #{948029EA-CE16-499D-B310-282FC651971C}
          LegacyId            #110
          ExtendedDataType    #UTCTimestamp
        ENDPROPERTIES
        
      FIELD #ActiveTo
        DATETIME
        PROPERTIES
          Name                #ActiveTo
          Label               #@SYS129005
          HelpText            #@SYS300180
          Table               #BankAccountTable
          Origin              #{2D1A4078-F779-4283-9D1F-5685E548BECF}
          LegacyId            #111
          ExtendedDataType    #UTCTimestamp
        ENDPROPERTIES
        
      FIELD #BankAccountStatus
        ENUM
        PROPERTIES
          Name                #BankAccountStatus
          HelpText            #@SYS300181
          Table               #BankAccountTable
          Origin              #{7B3C4C18-3C10-4BCF-9BBD-658F1AEC1832}
          LegacyId            #112
          EnumType            #BankAccountHoldStatus
        ENDPROPERTIES
        
      FIELD #BankCIN
        STRING
        PROPERTIES
          Name                #BankCIN
          Table               #BankAccountTable
          CountryRegionContextField     #Location
          Origin              #{C7770A38-E45A-4E4F-AD8B-D0E8E81CEEBA}
          LegacyId            #14
          ExtendedDataType    #BankCIN
          StringSize          #1
        ENDPROPERTIES
        
      FIELD #BankClearingCode
        STRING
        PROPERTIES
          Name                #BankClearingCode
          Table               #BankAccountTable
          Origin              #{E267DAE7-1232-4212-816A-88FB4587DB86}
          LegacyId            #31
          ExtendedDataType    #BankClearingCode
        ENDPROPERTIES
        
      FIELD #BankCodeType
        ENUM
        PROPERTIES
          Name                #BankCodeType
          Table               #BankAccountTable
          Origin              #{F08284CE-9B2D-4A42-A406-F29E155FCA53}
          LegacyId            #54
          EnumType            #BankCodeType
        ENDPROPERTIES
        
      FIELD #BankCompanyStatementName
        STRING
        PROPERTIES
          Name                #BankCompanyStatementName
          Table               #BankAccountTable
          CountryRegionContextField     #Location
          Origin              #{360ED7F0-78B1-41FC-97A0-54BBCFA5AEE8}
          LegacyId            #13
          ExtendedDataType    #BankCompanyStatementName
          StringSize          #16
        ENDPROPERTIES
        
      FIELD #BankConstantSymbol
        INT64
        PROPERTIES
          Name                #BankConstantSymbol
          Label               #@GLS108021
          HelpText            #@GLS108074
          Table               #BankAccountTable
          CountryRegionCodes  #CZ
          Origin              #{8C7B577C-A7DC-4B91-BDCD-81CD8ED21624}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #BankContractAccount
        STRING
        PROPERTIES
          Name                #BankContractAccount
          Label               #@SYS70490
          HelpText            #@SYS68960
          Table               #BankAccountTable
          Origin              #{0BD7A237-A37B-465E-9606-BFBD5895E0DE}
          LegacyId            #32
          ExtendedDataType    #GiroContractAccount
          StringSize          #11
        ENDPROPERTIES
        
      FIELD #BankDestinationName
        STRING
        PROPERTIES
          Name                #BankDestinationName
          Table               #BankAccountTable
          CountryRegionContextField     #Location
          Origin              #{5963B14F-B54E-43C1-BAB6-80B97E9CBF9B}
          LegacyId            #12
          ExtendedDataType    #BankDestinationName
          StringSize          #23
        ENDPROPERTIES
        
      FIELD #BankGroupId
        STRING
        PROPERTIES
          Name                #BankGroupId
          Table               #BankAccountTable
          Origin              #{027AC384-B6AA-4F5F-B520-040F460E2B86}
          LegacyId            #3
          ExtendedDataType    #BankGroupId
        ENDPROPERTIES
        
      FIELD #BankInterbankClearingCode_BE
        ENUM
        PROPERTIES
          Name                #BankInterbankClearingCode_BE
          Table               #BankAccountTable
          CountryRegionContextField     #Location
          Origin              #{191EE2B2-BAE2-4E5D-BC2E-8BC68CA055F4}
          LegacyId            #15
          EnumType            #BankInterbankClearingCode_BE
        ENDPROPERTIES
        
      FIELD #BankMultiCurrency
        ENUM
        PROPERTIES
          Name                #BankMultiCurrency
          Table               #BankAccountTable
          Origin              #{8423BA13-57EC-435D-9155-A0DEBDB702AB}
          LegacyId            #28
          ExtendedDataType    #BankMultiCurrency
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #BankPositivePayFormat
        INT64
        PROPERTIES
          Name                #BankPositivePayFormat
          Label               #@SYS4004473
          HelpText            #@SYS4004483
          Table               #BankAccountTable
          Origin              #{637F1BAC-3886-4E04-AB54-1365CE209743}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #BankPositivePayStartDate
        DATE
        PROPERTIES
          Name                #BankPositivePayStartDate
          Label               #@SYS4004504
          HelpText            #@SYS4004511
          Table               #BankAccountTable
          Origin              #{AC99C43C-50CC-437A-94B8-E8B5357FD314}
          ExtendedDataType    #StartDate
        ENDPROPERTIES
        
      FIELD #BankReconAllowedPennyDifference
        REAL
        PROPERTIES
          Name                #BankReconAllowedPennyDifference
          Table               #BankAccountTable
          Origin              #{A0826FD3-5188-4ACD-AE05-86E9557FFFBA}
          ExtendedDataType    #BankReconAllowedPennyDifference
        ENDPROPERTIES
        
      FIELD #BankReconciliationEnabled
        ENUM
        PROPERTIES
          Name                #BankReconciliationEnabled
          Table               #BankAccountTable
          Origin              #{2A190000-0007-1000-1D75-E61D08F3EB7E}
          ExtendedDataType    #BankReconciliationEnabled
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #BankReconciliationMatchRuleSet
        INT64
        PROPERTIES
          Name                #BankReconciliationMatchRuleSet
          Label               #@GLS222249
          HelpText            #@GLS222288
          Table               #BankAccountTable
          Origin              #{C8F9AA63-12F2-4750-B17E-3022312FBDCF}
          ExtendedDataType    #BankReconciliationMatchRuleSetRefRecId
        ENDPROPERTIES
        
      FIELD #BankReconciliationStmtAsPaymConfirm
        ENUM
        PROPERTIES
          Name                #BankReconciliationStmtAsPaymConfirm
          Table               #BankAccountTable
          Origin              #{D8F96BDA-B787-4254-8718-A436D9CA1DC6}
          ExtendedDataType    #BankReconciliationStmtAsPaymConfirm
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #BankReconMatchAutoAfterImport
        ENUM
        PROPERTIES
          Name                #BankReconMatchAutoAfterImport
          Table               #BankAccountTable
          Origin              #{DA88A40F-737C-4197-9B0C-D8BCA0272E65}
          ExtendedDataType    #BankReconciliationMatchAutoAfterImport
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #BankReconMatchRuleManualMatch
        INT64
        PROPERTIES
          Name                #BankReconMatchRuleManualMatch
          Label               #@GLS222603
          HelpText            #@GLS222604
          Table               #BankAccountTable
          Origin              #{25F941BC-B210-48CE-A03C-8253ED406B54}
          ExtendedDataType    #BankReconciliationMatchRuleRefRecId
        ENDPROPERTIES
        
      FIELD #BankReconMatchRuleManualReversal
        INT64
        PROPERTIES
          Name                #BankReconMatchRuleManualReversal
          Label               #@GLS222605
          HelpText            #@GLS222606
          Table               #BankAccountTable
          Origin              #{3AB0DCCC-0C4A-4859-9345-4DE517113E4D}
          ExtendedDataType    #BankReconciliationMatchRuleRefRecId
        ENDPROPERTIES
        
      FIELD #BankSortCode
        STRING
        PROPERTIES
          Name                #BankSortCode
          Table               #BankAccountTable
          Origin              #{2D2C3DB2-2B37-428C-9748-EA545C4235ED}
          LegacyId            #29
          ExtendedDataType    #BankSortCode
        ENDPROPERTIES
        
      FIELD #BankStatementFormat
        INT64
        PROPERTIES
          Name                #BankStatementFormat
          Table               #BankAccountTable
          Origin              #{2A130000-0007-1000-682F-E94A7E9FD979}
          ExtendedDataType    #BankStatementFormatRefRecId
        ENDPROPERTIES
        
      FIELD #BankStatementName
        STRING
        PROPERTIES
          Name                #BankStatementName
          Table               #BankAccountTable
          Origin              #{2A110000-0007-1000-90BB-DA836C7798D0}
          ExtendedDataType    #BankStatementName
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #BankSuffix
        STRING
        PROPERTIES
          Name                #BankSuffix
          Table               #BankAccountTable
          Origin              #{E7E1EC4C-D012-45DF-9596-8B18B7FDF5EE}
          LegacyId            #44
          ExtendedDataType    #BankSuffix
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #BankTransferCode
        STRING
        PROPERTIES
          Name                #BankTransferCode
          Table               #BankAccountTable
          Origin              #{112F15B9-A189-4C8C-A2E3-62C15A38CEC9}
          LegacyId            #45
          ExtendedDataType    #BankTransferCode
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #CellularPhone
        STRING
        PROPERTIES
          Name                #CellularPhone
          Table               #BankAccountTable
          Origin              #{BEEA121A-5751-4DDA-B12E-3A7591900827}
          LegacyId            #25
          ExtendedDataType    #PhoneMobile
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #CompanyPaymId
        STRING
        PROPERTIES
          Name                #CompanyPaymId
          Table               #BankAccountTable
          Origin              #{63CDA8A0-8A14-47CC-9563-0D18331953B5}
          LegacyId            #36
          ExtendedDataType    #CompanyPaymId
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #ContactPerson
        STRING
        PROPERTIES
          Name                #ContactPerson
          HelpText            #@SYS13368
          Table               #BankAccountTable
          Origin              #{4EA46BE5-1D07-4972-877D-656F289E6DCA}
          LegacyId            #39
          ExtendedDataType    #PersonName
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CorrAccount_W
        STRING
        PROPERTIES
          Name                #CorrAccount_W
          AOSAuthorization    #Yes
          Table               #BankAccountTable
          Origin              #{2A0D3E81-0007-1000-9AE8-8D4003BC706F}
          LegacyId            #16001
          ExtendedDataType    #BankCorrAccount_W
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          Mandatory           #Yes
          Table               #BankAccountTable
          Origin              #{96CA343F-6EEB-4492-91AD-5070896BB4E9}
          LegacyId            #4
          ExtendedDataType    #CurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #CurrencyOrder_TemplateName_RU
        STRING
        PROPERTIES
          Name                #CurrencyOrder_TemplateName_RU
          Label               #@GLS114369
          HelpText            #@GLS102988
          Table               #BankAccountTable
          CountryRegionCodes  #RU
          Origin              #{2A1D3E84-0007-1000-9650-887592639A38}
          LegacyId            #16004
          ExtendedDataType    #Filename
          StringSize          #259
        ENDPROPERTIES
        
      FIELD #CurrencySellOrder_TemplateName_RU
        STRING
        PROPERTIES
          Name                #CurrencySellOrder_TemplateName_RU
          Label               #@GLS114367
          HelpText            #@GLS114368
          Table               #BankAccountTable
          CountryRegionCodes  #RU
          Origin              #{2A211F5A-0007-1000-3D94-8724A078797C}
          LegacyId            #8026
          ExtendedDataType    #Filename
          StringSize          #259
        ENDPROPERTIES
        
      FIELD #CustomerPaymentFeeLedgerDimension
        INT64
        PROPERTIES
          Name                #CustomerPaymentFeeLedgerDimension
          Label               #@SYS16999
          HelpText            #@SYS67121
          Table               #BankAccountTable
          CountryRegionCodes  #CH
          CountryRegionContextField     #Location
          Origin              #{E190EE44-55B9-48FA-A837-ECBAF921D051}
          LegacyId            #76
          ExtendedDataType    #LedgerDimensionDefaultAccount
        ENDPROPERTIES
        
      FIELD #CustPaymFeePost
        ENUM
        PROPERTIES
          Name                #CustPaymFeePost
          Label               #@SYS67173
          HelpText            #@SYS67174
          Table               #BankAccountTable
          CountryRegionCodes  #CH
          CountryRegionContextField     #Location
          Origin              #{BA8DD80B-408B-478E-8708-8FCCB71867AB}
          LegacyId            #37
          ExtendedDataType    #NoYesId
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #DebitDirectId
        STRING
        PROPERTIES
          Name                #DebitDirectId
          Table               #BankAccountTable
          Origin              #{F30400FD-B6C3-4683-932F-71F977F6BC60}
          LegacyId            #41
          ExtendedDataType    #BankDebitDirectId
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #DefaultDimension
        INT64
        PROPERTIES
          Name                #DefaultDimension
          Table               #BankAccountTable
          Origin              #{CC29DC19-F252-4BCF-A95F-D7FBA0930897}
          LegacyId            #116
          ExtendedDataType    #DimensionDefault
        ENDPROPERTIES
        
      FIELD #DiscCreditMaxMST
        REAL
        PROPERTIES
          Name                #DiscCreditMaxMST
          Table               #BankAccountTable
          Origin              #{37ED0C46-C592-4CD0-841B-EDD675168930}
          LegacyId            #30
          ExtendedDataType    #BankDiscCreditMaxMST
        ENDPROPERTIES
        
      FIELD #DiscDelayNoticeDays
        INT
        PROPERTIES
          Name                #DiscDelayNoticeDays
          Table               #BankAccountTable
          Origin              #{F6E7F8DB-31E5-4636-ACD4-3DF63010956D}
          LegacyId            #43
          ExtendedDataType    #BankDiscNoticeDelayDays
        ENDPROPERTIES
        
      FIELD #DivisionPaymId
        STRING
        PROPERTIES
          Name                #DivisionPaymId
          Table               #BankAccountTable
          CountryRegionContextField     #Location
          Origin              #{DA019195-EE89-4E6B-9A8C-EEAD4DF14C16}
          LegacyId            #20
          ExtendedDataType    #BankDivisionPaymId
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #Email
        STRING
        PROPERTIES
          Name                #Email
          Table               #BankAccountTable
          Origin              #{EBC98D66-000B-4ED6-9D48-31CEFB51E368}
          LegacyId            #21
          ExtendedDataType    #Email
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #FeeContractAccount
        STRING
        PROPERTIES
          Name                #FeeContractAccount
          Table               #BankAccountTable
          Origin              #{C5F04C01-8F68-44A8-B2E7-8C7B732FB0AE}
          LegacyId            #35
          ExtendedDataType    #FeeContractAccount
          StringSize          #11
        ENDPROPERTIES
        
      FIELD #GiroContract
        STRING
        PROPERTIES
          Name                #GiroContract
          Table               #BankAccountTable
          Origin              #{936B658D-E7C9-43EA-A561-743648414527}
          LegacyId            #33
          ExtendedDataType    #GiroContractNum
        ENDPROPERTIES
        
      FIELD #GiroContractAccount
        STRING
        PROPERTIES
          Name                #GiroContractAccount
          Table               #BankAccountTable
          Origin              #{32A62369-6295-4409-8671-3EEAEE64FA13}
          LegacyId            #34
          ExtendedDataType    #GiroContractAccount
          StringSize          #11
        ENDPROPERTIES
        
      FIELD #IBAN
        STRING
        PROPERTIES
          Name                #IBAN
          AOSAuthorization    #Yes
          Table               #BankAccountTable
          Origin              #{7D8C5A6C-F9D0-4AB5-85B1-08A066EA9896}
          LegacyId            #55
          ExtendedDataType    #BankIBAN
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #IncludeBankBarCode_FI
        ENUM
        PROPERTIES
          Name                #IncludeBankBarCode_FI
          Table               #BankAccountTable
          CountryRegionContextField     #Location
          Origin              #{F1BBA517-8017-45C5-B123-FF0F5BE83305}
          LegacyId            #64
          ExtendedDataType    #IncludeBankBarCode_FI
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InvoiceRemitAmount
        REAL
        PROPERTIES
          Name                #InvoiceRemitAmount
          Label               #@SYS76482
          ConfigurationKey    #VendPromissoryNote
          Table               #BankAccountTable
          Origin              #{A0363DB3-43FC-42D2-917E-28223FD7F40D}
          LegacyId            #61
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #InvoiceRemittanceLedgerDimension
        INT64
        PROPERTIES
          Name                #InvoiceRemittanceLedgerDimension
          Label               #@SYS76483
          ConfigurationKey    #VendPromissoryNote
          Table               #BankAccountTable
          Origin              #{4861FDD0-70C7-4E40-97CC-57E8BAFC0172}
          LegacyId            #77
          ExtendedDataType    #LedgerDimensionDefaultAccount
        ENDPROPERTIES
        
      FIELD #isBankPrenote
        ENUM
        PROPERTIES
          Name                #isBankPrenote
          Label               #@SYS128571
          HelpText            #@SYS128507
          Table               #BankAccountTable
          Origin              #{2AA16D3A-E0AB-4D2A-A60F-94EC168528D3}
          LegacyId            #65
          ExtendedDataType    #BankPrenote
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #LedgerDimension
        INT64
        PROPERTIES
          Name                #LedgerDimension
          Mandatory           #Yes
          Table               #BankAccountTable
          Origin              #{2C793A90-2858-4736-9C0F-BDE7DE9F9A42}
          LegacyId            #78
          ExtendedDataType    #LedgerDimensionDefaultAccount
        ENDPROPERTIES
        
      FIELD #LedgerJournalNameId
        STRING
        PROPERTIES
          Name                #LedgerJournalNameId
          Label               #@SYS73715
          HelpText            #@SYS73716
          ConfigurationKey    #CustBillOfExchange
          Table               #BankAccountTable
          Origin              #{FCEBB631-07F6-4BAA-8B1A-FFB283C8F2D9}
          LegacyId            #56
          ExtendedDataType    #LedgerJournalNameId
        ENDPROPERTIES
        
      FIELD #Location
        INT64
        PROPERTIES
          Name                #Location
          Visible             #No
          Table               #BankAccountTable
          Origin              #{0D7DF511-2B56-47D6-BA35-6611C1634C52}
          LegacyId            #68
          ExtendedDataType    #LogisticsLocationRecId
        ENDPROPERTIES
        
      FIELD #LvDefaultBank
        ENUM
        PROPERTIES
          Name                #LvDefaultBank
          Table               #BankAccountTable
          Origin              #{2A0D0000-0007-1000-8824-A6DA8BCA856C}
          ExtendedDataType    #LVDefaultBank
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #LvPayOrderType
        ENUM
        PROPERTIES
          Name                #LvPayOrderType
          Table               #BankAccountTable
          Origin              #{098FE785-2D32-4F34-8DC6-264D9FB07986}
          LegacyId            #16018
          EnumType            #LvPaymentOrderType
        ENDPROPERTIES
        
      FIELD #Name
        STRING
        PROPERTIES
          Name                #Name
          HelpText            #@SYS24871
          Table               #BankAccountTable
          Origin              #{FFE316E0-F56D-4F2C-93A7-5AC412DFF7D5}
          LegacyId            #5
          ExtendedDataType    #Name
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #NsfFeeMarkupGroupId
        STRING
        PROPERTIES
          Name                #NsfFeeMarkupGroupId
          Table               #BankAccountTable
          Origin              #{07D30DF7-790E-4691-A1B4-C7DEE074592C}
          LegacyId            #63
          ExtendedDataType    #CustNsfFeeMarkupGroupId
        ENDPROPERTIES
        
      FIELD #NsfFeeMarkupGroupModule
        ENUM
        PROPERTIES
          Name                #NsfFeeMarkupGroupModule
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #BankAccountTable
          Origin              #{6CF48B90-C890-49FD-951E-86BEF362156D}
          LegacyId            #53
          ExtendedDataType    #CustNsfFeeMarkupGroupModule
          EnumType            #MarkupModuleType
        ENDPROPERTIES
        
      FIELD #NsfLedgerJournalName
        STRING
        PROPERTIES
          Name                #NsfLedgerJournalName
          Table               #BankAccountTable
          Origin              #{04677DB5-B4DA-4332-9327-524E9AB63F9E}
          LegacyId            #16
          ExtendedDataType    #CustNsfJournalName
        ENDPROPERTIES
        
      FIELD #OverDraftLimit
        REAL
        PROPERTIES
          Name                #OverDraftLimit
          Table               #BankAccountTable
          Origin              #{4A0AB5D6-8E93-4D0D-81DF-C91FF85CE95E}
          LegacyId            #122
          ExtendedDataType    #BankOverDraftLimit
        ENDPROPERTIES
        
      FIELD #Pager
        STRING
        PROPERTIES
          Name                #Pager
          Table               #BankAccountTable
          Origin              #{0F136C7A-DF96-4474-9E58-CD813B2A8B84}
          LegacyId            #49
          ExtendedDataType    #Pager
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PaymForeignExportPath_LT
        STRING
        PROPERTIES
          Name                #PaymForeignExportPath_LT
          Label               #@GLS113333
          HelpText            #@GLS113334
          Table               #BankAccountTable
          CountryRegionCodes  #LT
          Origin              #{2A181F46-0007-1000-9F70-64AB4898ECF7}
          LegacyId            #8006
          ExtendedDataType    #FilePath
          StringSize          #259
        ENDPROPERTIES
        
      FIELD #PaymLocalExportPath_LT
        STRING
        PROPERTIES
          Name                #PaymLocalExportPath_LT
          Label               #@GLS113331
          HelpText            #@GLS113332
          Table               #BankAccountTable
          CountryRegionCodes  #LT
          Origin              #{2A161F45-0007-1000-EF34-7B96C601FBA7}
          LegacyId            #8005
          ExtendedDataType    #FilePath
          StringSize          #259
        ENDPROPERTIES
        
      FIELD #PaymManKeepIfRemovedFromBatch
        ENUM
        PROPERTIES
          Name                #PaymManKeepIfRemovedFromBatch
          Label               #@SYS60867
          HelpText            #@SYS70073
          ConfigurationKey    #PaymMan
          Table               #BankAccountTable
          Origin              #{A5E0ABA3-9C74-47BF-9D3A-66390E36C253}
          LegacyId            #48
          ExtendedDataType    #NoYesId
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #PaymOrderNumSeqId_W
        STRING
        PROPERTIES
          Name                #PaymOrderNumSeqId_W
          Label               #@GLS103473
          HelpText            #@GLS103474
          Table               #BankAccountTable
          CountryRegionCodes  #RU,LV
          Origin              #{2A133E86-0007-1000-E250-8B30D6D7C96A}
          LegacyId            #16006
          ExtendedDataType    #NumberSequenceCode
        ENDPROPERTIES
        
      FIELD #Phone
        STRING
        PROPERTIES
          Name                #Phone
          HelpText            #@SYS24869
          Table               #BankAccountTable
          Origin              #{1E37FD83-DEA8-4C68-A7E8-F286CFAA721D}
          LegacyId            #18
          ExtendedDataType    #Phone
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PhoneLocal
        STRING
        PROPERTIES
          Name                #PhoneLocal
          Table               #BankAccountTable
          Origin              #{9D097483-2454-43B8-B786-6F9FABB8544B}
          LegacyId            #26
          ExtendedDataType    #PhoneLocal
        ENDPROPERTIES
        
      FIELD #PrenoteResponseDays
        INT
        PROPERTIES
          Name                #PrenoteResponseDays
          HelpText            #@SYS128520
          Table               #BankAccountTable
          Origin              #{FE5167E8-D0C7-4871-8952-92CCF86679C6}
          LegacyId            #67
          ExtendedDataType    #PrenoteResponseDays
        ENDPROPERTIES
        
      FIELD #PrintGiro_FI
        ENUM
        PROPERTIES
          Name                #PrintGiro_FI
          Table               #BankAccountTable
          CountryRegionContextField     #Location
          Origin              #{2CD1F780-E17E-4082-B375-794F9E4F8B1A}
          LegacyId            #66
          ExtendedDataType    #PrintGiro_FI
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #RegistrationNum
        STRING
        PROPERTIES
          Name                #RegistrationNum
          Table               #BankAccountTable
          Origin              #{A8761B14-6595-4DB3-9CE9-3C071E5AF15D}
          LegacyId            #17
          ExtendedDataType    #BankRegNum
          StringSize          #12
        ENDPROPERTIES
        
      FIELD #RemitCollectionAmount
        REAL
        PROPERTIES
          Name                #RemitCollectionAmount
          Label               #@SYS73717
          ConfigurationKey    #CustBillOfExchange
          Table               #BankAccountTable
          Origin              #{A2C79F05-6AC7-45DB-8C92-D5ED18C1051B}
          LegacyId            #57
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #RemitDiscountAmount
        REAL
        PROPERTIES
          Name                #RemitDiscountAmount
          Label               #@SYS73718
          ConfigurationKey    #CustBillOfExchange
          Table               #BankAccountTable
          Origin              #{6A30D706-6812-4D94-9958-8F0215E417B0}
          LegacyId            #58
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #RemittanceCollectionLedgerDimension
        INT64
        PROPERTIES
          Name                #RemittanceCollectionLedgerDimension
          Label               #@SYS75660
          ConfigurationKey    #CustBillOfExchange
          Table               #BankAccountTable
          Origin              #{9AD7FE53-6A9C-49A0-AB10-C89619AEB8E5}
          LegacyId            #79
          ExtendedDataType    #LedgerDimensionDefaultAccount
        ENDPROPERTIES
        
      FIELD #RemittanceDiscountLedgerDimension
        INT64
        PROPERTIES
          Name                #RemittanceDiscountLedgerDimension
          Label               #@SYS75661
          ConfigurationKey    #CustBillOfExchange
          Table               #BankAccountTable
          Origin              #{9BAFCB44-4FE9-4B5A-8ACE-9D746FFB9AD9}
          LegacyId            #80
          ExtendedDataType    #LedgerDimensionDefaultAccount
        ENDPROPERTIES
        
      FIELD #Rfc_MX
        STRING
        PROPERTIES
          Name                #Rfc_MX
          Table               #BankAccountTable
          CountryRegionContextField     #Location
          Origin              #{DA109630-8668-46F7-9D87-95E7E1B612A3}
          LegacyId            #118
          ExtendedDataType    #Rfc_MX
          StringSize          #13
        ENDPROPERTIES
        
      FIELD #SMS
        STRING
        PROPERTIES
          Name                #SMS
          Table               #BankAccountTable
          Origin              #{B2C70938-B3EE-49D6-8976-8C67CBC61BC8}
          LegacyId            #50
          ExtendedDataType    #SMS
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #SpecificSymbol
        STRING
        PROPERTIES
          Name                #SpecificSymbol
          Table               #BankAccountTable
          CountryRegionCodes  #CZ
          Origin              #{A2E751E2-57F5-4C96-8A3C-EF4DEAA25ADC}
          ExtendedDataType    #SpecificSymbol
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #SWIFTNo
        STRING
        PROPERTIES
          Name                #SWIFTNo
          Table               #BankAccountTable
          Origin              #{25C1F81D-B226-469C-A7FA-2B80C1AE86CB}
          LegacyId            #42
          ExtendedDataType    #SWIFTNo
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #TeleFax
        STRING
        PROPERTIES
          Name                #TeleFax
          HelpText            #@SYS24866
          Table               #BankAccountTable
          Origin              #{F3FEF4F2-0253-4384-B738-644A5862D17E}
          LegacyId            #19
          ExtendedDataType    #TeleFax
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Telex
        STRING
        PROPERTIES
          Name                #Telex
          HelpText            #@SYS25202
          Table               #BankAccountTable
          Origin              #{4D7C175B-2382-4C08-80CC-673558F8961A}
          LegacyId            #24
          ExtendedDataType    #Telex
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #TemplateFileName_RU
        STRING
        PROPERTIES
          Name                #TemplateFileName_RU
          Label               #@GLS102339
          HelpText            #@GLS102340
          Table               #BankAccountTable
          CountryRegionCodes  #RU
          Origin              #{2A133E83-0007-1000-BB52-72AF3196D0C1}
          LegacyId            #16003
          ExtendedDataType    #Filename
          StringSize          #259
        ENDPROPERTIES
        
      FIELD #TransType_JP
        ENUM
        PROPERTIES
          Name                #TransType_JP
          Table               #BankAccountTable
          Origin              #{2A0C1F4D-0007-1000-FBE4-C13AB7607970}
          LegacyId            #8013
          EnumType            #BankTransType_JP
        ENDPROPERTIES
        
      FIELD #URL
        STRING
        PROPERTIES
          Name                #URL
          Table               #BankAccountTable
          Origin              #{D41FFFDC-E6F2-4F8B-889A-4E519ED64A76}
          LegacyId            #23
          ExtendedDataType    #URL
          StringSize          #255
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoSummary
        PROPERTIES
          Name                #AutoSummary
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankCodeType
          #SWIFTNo
          #BankClearingCode
          #DivisionPaymId
          #BankAccountStatus
          #LedgerJournalNameId
          #ContactPerson
          #Phone
          #RegistrationNum
          #AccountNum
          #CurrencyCode
          #BankCIN
          #BankInterbankClearingCode_BE
          #NsfLedgerJournalName
          #IBAN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #AccountID
          #Name
          #LedgerDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoLookup
        PROPERTIES
          Name                #AutoLookup
        ENDPROPERTIES
        
        GROUPFIELDS
          #AccountID
          #Name
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Activation
        PROPERTIES
          Name                #Activation
          Label               #@SYS106756
        ENDPROPERTIES
        
        GROUPFIELDS
          #ActiveFrom
          #ActiveTo
          #BankAccountStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Administration
        PROPERTIES
          Name                #Administration
          Label               #@SYS9853
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BankAccountDetails
        PROPERTIES
          Name                #BankAccountDetails
          Label               #@GLS60009
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransType_JP
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BankConstantSymbol
        PROPERTIES
          Name                #BankConstantSymbol
          Label               #@GLS107997
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankConstantSymbol
          #SpecificSymbol
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BankPositivePayFormat
        PROPERTIES
          Name                #BankPositivePayFormat
          Label               #@SYS4004473
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankPositivePayFormat
          #BankPositivePayStartDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BankReconciliation
        PROPERTIES
          Name                #BankReconciliation
          Label               #@SYS69067
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankReconciliationEnabled
          #BankStatementName
          #BankStatementFormat
          #BankReconciliationStmtAsPaymConfirm
          #BankReconAllowedPennyDifference
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BankReconciliationAutomation
        PROPERTIES
          Name                #BankReconciliationAutomation
          Label               #@GLS222317
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankReconMatchAutoAfterImport
          #BankReconciliationMatchRuleSet
          #BankReconMatchRuleManualMatch
          #BankReconMatchRuleManualReversal
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BillOfExchange
        PROPERTIES
          Name                #BillOfExchange
          Label               #@SYS69795
        ENDPROPERTIES
        
        GROUPFIELDS
          #RemitCollectionAmount
          #RemittanceCollectionLedgerDimension
          #RemitDiscountAmount
          #RemittanceDiscountLedgerDimension
          #LedgerJournalNameId
          #InvoiceRemitAmount
          #InvoiceRemittanceLedgerDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ContactInfo
        PROPERTIES
          Name                #ContactInfo
          Label               #@SYS21663
        ENDPROPERTIES
        
        GROUPFIELDS
          #ContactPerson
          #Phone
          #PhoneLocal
          #CellularPhone
          #Pager
          #TeleFax
          #Email
          #SMS
          #URL
          #Telex
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Credit
        PROPERTIES
          Name                #Credit
          Label               #@sys7084
        ENDPROPERTIES
        
        GROUPFIELDS
          #OverDraftLimit
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Currency
        PROPERTIES
          Name                #Currency
          Label               #@SYS7572
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankMultiCurrency
          #CurrencyCode
          #LvDefaultBank
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Description
        PROPERTIES
          Name                #Description
          Label               #@SYS7576
        ENDPROPERTIES
        
        GROUPFIELDS
          #Name
          #AccountNameKana_JP
          #BankCompanyStatementName
          #BankDestinationName
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Dimensions
        PROPERTIES
          Name                #Dimensions
          Label               #@SYS342338
        ENDPROPERTIES
        
        GROUPFIELDS
          #DefaultDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ExportPath_LT
        PROPERTIES
          Name                #ExportPath_LT
          Label               #@SYS95311
        ENDPROPERTIES
        
        GROUPFIELDS
          #PaymLocalExportPath_LT
          #PaymForeignExportPath_LT
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #GiroSlip_FI
        PROPERTIES
          Name                #GiroSlip_FI
          Label               #@SYS5231
        ENDPROPERTIES
        
        GROUPFIELDS
          #PrintGiro_FI
          #IncludeBankBarCode_FI
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #AccountID
          #BankCodeType
          #RegistrationNum
          #AccountNum
          #BankCIN
          #SWIFTNo
          #IBAN
          #CompanyPaymId
          #DivisionPaymId
          #bankBIC_RU
          #CorrAccount_W
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Ledger
        PROPERTIES
          Name                #Ledger
          Label               #@SYS13356
        ENDPROPERTIES
        
        GROUPFIELDS
          #LedgerDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #NonSufficientFunds
        PROPERTIES
          Name                #NonSufficientFunds
          Label               #@SYS133998
        ENDPROPERTIES
        
        GROUPFIELDS
          #NsfLedgerJournalName
          #NsfFeeMarkupGroupModule
          #NsfFeeMarkupGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Overview
        PROPERTIES
          Name                #Overview
          Label               #@SYS9039
        ENDPROPERTIES
        
        GROUPFIELDS
          #AccountID
          #Name
          #BankGroupId
          #bankName_RU
          #RegistrationNum
          #AccountNum
          #BankCIN
          #bankBIC_RU
          #CorrAccount_W
          #bankAccountOpenedIn_RU
          #LedgerDimension
          #CurrencyCode
          #LvDefaultBank
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PaymentManagement
        PROPERTIES
          Name                #PaymentManagement
          Label               #@SYS57540
        ENDPROPERTIES
        
        GROUPFIELDS
          #DiscCreditMaxMST
          #DiscDelayNoticeDays
          #BankSuffix
          #BankTransferCode
          #PaymManKeepIfRemovedFromBatch
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PaymentOrder_W
        PROPERTIES
          Name                #PaymentOrder_W
          Label               #@GLS108610
        ENDPROPERTIES
        
        GROUPFIELDS
          #LvPayOrderType
          #PaymOrderNumSeqId_W
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PaymentOrderInCurrency_RU
        PROPERTIES
          Name                #PaymentOrderInCurrency_RU
          Label               #@GLS102327
        ENDPROPERTIES
        
        GROUPFIELDS
          #TemplateFileName_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Prenotes
        PROPERTIES
          Name                #Prenotes
          Label               #@SYS128504
        ENDPROPERTIES
        
        GROUPFIELDS
          #isBankPrenote
          #PrenoteResponseDays
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchaseOfFundsInHardCurrency_RU
        PROPERTIES
          Name                #PurchaseOfFundsInHardCurrency_RU
          Label               #@GLS102989
        ENDPROPERTIES
        
        GROUPFIELDS
          #CurrencyOrder_TemplateName_RU
          #CurrencySellOrder_TemplateName_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Setup
        PROPERTIES
          Name                #Setup
          Label               #@SYS2186
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankSortCode
          #BankContractAccount
          #GiroContractAccount
          #FeeContractAccount
          #GiroContract
          #CustomerPaymentFeeLedgerDimension
          #CustPaymFeePost
          #DebitDirectId
          #BankClearingCode
          #BankInterbankClearingCode_BE
          #LvDefaultBank
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SWIFT
        PROPERTIES
          Name                #SWIFT
          Label               #@SYS9360
        ENDPROPERTIES
        
        GROUPFIELDS
          #SWIFTNo
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TaxRegistration_MX
        PROPERTIES
          Name                #TaxRegistration_MX
          Label               #@SYS312490
        ENDPROPERTIES
        
        GROUPFIELDS
          #Rfc_MX
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #AccountIdx
      PROPERTIES
        Name                #AccountIdx
        AllowDuplicates     #No
        Origin              #{2B0A0001-0007-1000-CD51-C781756E7449}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #AccountID
      ENDINDEXFIELDS
      
      #RemittanceDiscountLedgerDimensionIdx
      PROPERTIES
        Name                #RemittanceDiscountLedgerDimensionIdx
        Origin              #{2B240003-0007-1000-232C-3A9B2BCA6E1D}
        LegacyId            #3
      ENDPROPERTIES
      
      INDEXFIELDS
        #RemittanceDiscountLedgerDimension
      ENDINDEXFIELDS
      
      #RemittanceCollectionLedgerDimensionIdx
      PROPERTIES
        Name                #RemittanceCollectionLedgerDimensionIdx
        Origin              #{2B260004-0007-1000-B929-102211141AA1}
        LegacyId            #4
      ENDPROPERTIES
      
      INDEXFIELDS
        #RemittanceCollectionLedgerDimension
      ENDINDEXFIELDS
      
      #LedgerDimensionIdx
      PROPERTIES
        Name                #LedgerDimensionIdx
        Origin              #{2B120005-0007-1000-57A1-E0771A43E3FA}
        LegacyId            #5
      ENDPROPERTIES
      
      INDEXFIELDS
        #LedgerDimension
      ENDINDEXFIELDS
      
      #InvoiceRemittanceLedgerDimensionIdx
      PROPERTIES
        Name                #InvoiceRemittanceLedgerDimensionIdx
        Origin              #{2B230006-0007-1000-5D08-E947B18F36E4}
        LegacyId            #6
      ENDPROPERTIES
      
      INDEXFIELDS
        #InvoiceRemittanceLedgerDimension
      ENDINDEXFIELDS
      
      #CustomerPaymentFeeLedgerDimensionIdx
      PROPERTIES
        Name                #CustomerPaymentFeeLedgerDimensionIdx
        Origin              #{2B240007-0007-1000-20F4-EB2751C9A5F1}
        LegacyId            #7
      ENDPROPERTIES
      
      INDEXFIELDS
        #CustomerPaymentFeeLedgerDimension
      ENDINDEXFIELDS
      
      #DefaultDimensionIdx
      PROPERTIES
        Name                #DefaultDimensionIdx
        Origin              #{3E53BF2E-7312-4FCE-A370-B6D1440EB77E}
        LegacyId            #16
      ENDPROPERTIES
      
      INDEXFIELDS
        #DefaultDimension
      ENDINDEXFIELDS
      
      #BankStatementFormatIdx
      PROPERTIES
        Name                #BankStatementFormatIdx
        Origin              #{2B160000-0007-1000-682F-E9FD30993D8C}
      ENDPROPERTIES
      
      INDEXFIELDS
        #BankStatementFormat
      ENDINDEXFIELDS
      
      #BankConstantSymbolIdx
      PROPERTIES
        Name                #BankConstantSymbolIdx
        Origin              #{A5B81F13-11F9-4EEF-A5B6-DBA6BF618CCE}
      ENDPROPERTIES
      
      INDEXFIELDS
        #BankConstantSymbol
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #BankConstantSymbol
        PROPERTIES
          Name                #BankConstantSymbol
          Table               #BankConstantSymbol
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankConstantSymbol
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankGroup
        PROPERTIES
          Name                #BankGroup
          Table               #BankGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankGroupId
            RelatedField        #BankGroupId
            SourceEDT           #BankGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankReconciliationMatchRuleManualMatch
        PROPERTIES
          Name                #BankReconciliationMatchRuleManualMatch
          Table               #BankReconciliationMatchRule
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankReconMatchRuleManualMatch
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankReconciliationMatchRuleManuaReversal
        PROPERTIES
          Name                #BankReconciliationMatchRuleManuaReversal
          Table               #BankReconciliationMatchRule
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #BankReconciliationMatchRuleReversal
          Role                #BankReconciliationMatchRuleReversal_BankAccountTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankReconMatchRuleManualReversal
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankReconciliationMatchRuleSet
        PROPERTIES
          Name                #BankReconciliationMatchRuleSet
          Table               #BankReconciliationMatchRuleSet
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankReconciliationMatchRuleSet
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankStatementFormat
        PROPERTIES
          Name                #BankStatementFormat
          Table               #BankStatementFormat
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankStatementFormat
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
            SourceEDT           #CurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustomerPaymentFeeLedgerDimension
        PROPERTIES
          Name                #CustomerPaymentFeeLedgerDimension
          Table               #DimensionAttributeValueCombination
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustomerPaymentFeeLedgerDimension
          Role                #BankAccountTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CustomerPaymentFeeLedgerDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustVendAifPaymTable
        PROPERTIES
          Name                #CustVendAifPaymTable
          Table               #CustVendAifPaymTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #CustVendAifPaymTable
          Role                #BankAccountTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #BankPositivePayFormat
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DefaultDimension
        PROPERTIES
          Name                #DefaultDimension
          Table               #DimensionAttributeValueSet
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DefaultDimension
          Role                #BankAccountTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #DefaultDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InvoiceRemittanceLedgerDimension
        PROPERTIES
          Name                #InvoiceRemittanceLedgerDimension
          Table               #DimensionAttributeValueCombination
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InvoiceRemittanceLedgerDimension
          Role                #BankAccountTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InvoiceRemittanceLedgerDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LedgerDimension
        PROPERTIES
          Name                #LedgerDimension
          Table               #DimensionAttributeValueCombination
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LedgerDimension
          Role                #BankAccountTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #LedgerDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LedgerJournalName_LedJourNameId
        PROPERTIES
          Name                #LedgerJournalName_LedJourNameId
          Table               #LedgerJournalName
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #LedgerJournalName_LedJourNameId
          Role                #BankAccountTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #LedgerJournalNameId
            RelatedField        #JournalName
            SourceEDT           #LedgerJournalNameId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LedgerJournalName_NsfLedJourName
        PROPERTIES
          Name                #LedgerJournalName_NsfLedJourName
          Table               #LedgerJournalName
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #LedgerJournalName_NsfLedJourName
          Role                #BankAccountTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #NsfLedgerJournalName
            RelatedField        #JournalName
            SourceEDT           #CustNsfJournalName
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #7
            Table               #LedgerJournalName
            RelatedField        #JournalType
            SourceEDT           #CustNsfJournalName
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Location_FK
        PROPERTIES
          Name                #Location_FK
          Table               #LogisticsLocation
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Location_FK
          Role                #BankAccountTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Location
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MarkupGroup
        PROPERTIES
          Name                #MarkupGroup
          Table               #MarkupGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #NsfFeeMarkupGroupId
            RelatedField        #GroupId
            SourceEDT           #CustNsfFeeMarkupGroupId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #MarkupGroup
            RelatedField        #Module
            SourceEDT           #CustNsfFeeMarkupGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #NumberSequenceTable
        PROPERTIES
          Name                #NumberSequenceTable
          Table               #NumberSequenceTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PaymOrderNumSeqId_W
            RelatedField        #NumberSequence
            SourceEDT           #NumberSequenceCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RemittanceCollectionLedgerDimension
        PROPERTIES
          Name                #RemittanceCollectionLedgerDimension
          Table               #DimensionAttributeValueCombination
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #RemittanceCollectionLedgerDimension
          Role                #BankAccountTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #RemittanceCollectionLedgerDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RemittanceDiscountLedgerDimension
        PROPERTIES
          Name                #RemittanceDiscountLedgerDimension
          Table               #DimensionAttributeValueCombination
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #RemittanceDiscountLedgerDimension
          Role                #BankAccountTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #RemittanceDiscountLedgerDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #BankAccountStatement
      PROPERTIES
        Table               #BankAccountStatement
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #BankAccountTrans
      PROPERTIES
        Table               #BankAccountTrans
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #BankChequeLayout
      PROPERTIES
        Table               #BankChequeLayout
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #BankChequeTable
      PROPERTIES
        Table               #BankChequeTable
        DeleteAction        #Cascade + Restricted
      ENDPROPERTIES
      
      #BankClientAccountFormat_RU
      PROPERTIES
        Table               #BankClientAccountFormat_RU
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #BankDeposit
      PROPERTIES
        Table               #BankDeposit
        DeleteAction        #Cascade + Restricted
      ENDPROPERTIES
      
      #BankDocumentFacilityAgreement
      PROPERTIES
        Table               #BankDocumentFacilityAgreement
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #CustPrenote
      PROPERTIES
        Table               #CustPrenote
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #VendPrenote
      PROPERTIES
        Table               #VendPrenote
        DeleteAction        #Cascade
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #balanceCur
        #public display AmountCur balanceCur(container _balances = conNull())
        #{
        #    container   balances;
        #    ;
        #
        #    if (_balances != conNull())
        #    {
        #        balances = _balances;
        #    }
        #    else
        #    {
        #        balances = this.balances();
        #    }
        #
        #    return conPeek(balances, 1);
        #}
      ENDSOURCE
      SOURCE #balanceMST
        #public display AmountMST balanceMST(container _balances = conNull())
        #{
        #    #define.balanceMSTPos(2)
        #
        #    container   balances;
        #    ;
        #
        #    if (_balances != conNull())
        #    {
        #        balances = _balances;
        #    }
        #    else
        #    {
        #        balances = this.balances();
        #    }
        #
        #    return conPeek(balances, #balanceMSTPos);
        #}
      ENDSOURCE
      SOURCE #balances
        #public server container balances()
        #{
        #    AmountCur           balanceCur;
        #    AmountMST           balanceMST;
        #    CurrencyCode        companyCurrencyCode;
        #    BankAccountTrans    bankAccountTrans;
        #    ;
        #
        #    companyCurrencyCode = CompanyInfo::standardCurrency();
        #
        #    while select sum(AmountCur), sum(AmountCorrect) from bankAccountTrans
        #        group by CurrencyCode
        #        where bankAccountTrans.AccountId == this.AccountID
        #    {
        #        balanceCur = bankAccountTrans.AmountCur + bankAccountTrans.AmountCorrect;
        #
        #        if (bankAccountTrans.CurrencyCode != companyCurrencyCode)
        #        {
        #            balanceMST += Currency::mstAmount(balanceCur, bankAccountTrans.CurrencyCode);
        #        }
        #        else
        #        {
        #            balanceMST += balanceCur;
        #        }
        #    }
        #
        #    return [balanceCur, balanceMST];
        #}
      ENDSOURCE
      SOURCE #bankAccountOpenedIn_RU
        #//BP deviation documented
        #public display BankAccountOpenedIn_RU bankAccountOpenedIn_RU()
        #{
        #    return this.BankAccountMap::bankAccountOpenedIn_RU();
        #}
      ENDSOURCE
      SOURCE #bankAccountValidation
        #public Bank bankAccountValidation()
        #{
        #    return this.BankAccountMap::bankAccountValidation();
        #}
      ENDSOURCE
      SOURCE #bankBIC_RU
        #//BP deviation documented
        #public display BankBIC_RU bankBIC_RU()
        #{
        #    return this.BankAccountMap::bankBIC_RU();
        #}
      ENDSOURCE
      SOURCE #bankIsBranch_RU
        #public boolean bankIsBranch_RU()
        #{
        #    return this.BankAccountMap::bankIsBranch_RU();
        #}
      ENDSOURCE
      SOURCE #bankName_RU
        #//BP deviation documented
        #public display BankName_RU bankName_RU()
        #{
        #    return this.BankAccountMap::bankName_RU();
        #}
      ENDSOURCE
      SOURCE #bankShortAddressing_RU
        #public BankShortAddressing_RU bankShortAddressing_RU()
        #{
        #    return this.BankAccountMap::bankShortAddressing_RU();
        #}
      ENDSOURCE
      SOURCE #baseBankName_RU
        #public Description baseBankName_RU()
        #{
        #    return this.BankAccountMap::baseBankName_RU();
        #}
      ENDSOURCE
      SOURCE #baseBankShortAddressing_RU
        #public BankShortAddressing_RU baseBankShortAddressing_RU()
        #{
        #    return this.BankAccountMap::baseBankShortAddressing_RU();
        #}
      ENDSOURCE
      SOURCE #checkActiveDates
        #/// <summary>
        #/// Indicates whether the date in the <c>ActiveFrom</c> field is after the date in the <c>ActiveTo</c>
        #/// field.
        #/// </summary>
        #/// <returns>
        #/// true if the date in the <c>ActiveFrom</c> field is before the date in the <c>ActiveTo</c> field;
        #/// otherwise, false.
        #/// </returns>
        #boolean checkActiveDates()
        #{
        #    boolean  isValid = true;
        #
        #    if (this.ActiveFrom != Global::utcDateTimeNull()
        #        && this.ActiveTo != Global::utcDateTimeNull()
        #        && this.ActiveFrom > this.ActiveTo)
        #    {
        #        isValid = checkFailed(strFmt("@SYS300571", "@SYS129005", "@SYS129004"));
        #    }
        #
        #    return isValid;
        #}
      ENDSOURCE
      SOURCE #checkBankNegInstExist
        #/// <summary>
        #/// Indicates whether a bill of exchange or promissory note exists.
        #/// </summary>
        #/// <returns>
        #/// true if the <c>BankAccountHoldStatus</c> status has the <c>InactiveForAllTransaction</c>
        #/// enumeration value and the bill of exchange or promissory note exists; otherwise, false.
        #/// </returns>
        #public boolean checkBankNegInstExist()
        #{
        #    boolean isExist;
        #
        #    if (this.BankAccountStatus == BankAccountHoldStatus::InactiveForAllTransactions)
        #    {
        #        if (BankBillOfExchangeTable::findNextFree(this.AccountID))
        #        {
        #            info(strFmt("@SYS300184", this.AccountID));
        #            isExist = true;
        #        }
        #
        #        if (BankPromissoryNoteTable::findNextFree(this.AccountID))
        #        {
        #            info(strFmt("@SYS300183", this.AccountID));
        #            isExist = true;
        #        }
        #    }
        #    else
        #    {
        #        isExist = false;
        #    }
        #
        #    return isExist;
        #}
      ENDSOURCE
      SOURCE #checkCanEnableAdvancedReconciliation
        #/// <summary>
        #/// Checks whether the advanced reconciliation can be enabled.
        #/// </summary>
        #/// <returns>
        #/// true if the advanced reconciliation can be enabled; otherwise, false.
        #/// </returns>
        #public boolean checkCanEnableAdvancedReconciliation()
        #{
        #    boolean                 ret = true;
        #
        #    ret = this.existUnreconciledStatement();
        #    ret = ret && this.existUnreconciledBankTransInClosedPeriod();
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkCurrency
        #public boolean checkCurrency(CurrencyCode _currency)
        #{
        #    boolean ret = true;
        #    ;
        #
        #    if (this.CurrencyCode       != _currency &&
        #        this.BankMultiCurrency  == NoYes::No)
        #    {
        #        ret = checkFailed(strFmt("@SYS25211", _currency, this.AccountID));
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkDefault_LV
        #server private boolean checkDefault_LV()
        #{
        #    BankAccountTable bankAccountTable;
        #
        #    if(this.LvDefaultBank)
        #    {
        #        select firstonly RecId from bankAccountTable
        #            where bankAccountTable.CurrencyCode == this.CurrencyCode &&
        #                  bankAccountTable.LvDefaultBank == NoYes::Yes &&
        #                  bankAccountTable.RecId != this.RecId;
        #    }
        #
        #    return bankAccountTable.RecId ? checkFailed("@GLS108523") : true;
        #}
      ENDSOURCE
      SOURCE #checkIsActiveForAllTransactions
        #/// <summary>
        #/// Indicates whether the <c>BankAccountHoldStatus</c> enumeration value is set to
        #/// <c>InactiveForAllTransactions</c>.
        #/// </summary>
        #/// <returns>
        #/// true if the <c>BankAccountHoldStatus</c> enumeration value is set to
        #/// <c>ActiveForAllTransactions</c> or <c>InactiveForNewTransactions</c>; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Displays the warning message.
        #/// </remarks>
        #public boolean checkIsActiveForAllTransactions()
        #{
        #    boolean isActive = true;
        #
        #    if (this.BankAccountStatus == BankAccountHoldStatus::InactiveForAllTransactions)
        #    {
        #        isActive = BankAccountTable::isActiveForAllTransactions(this.AccountID, this.DataAreaId);
        #    }
        #
        #    if (!isActive)
        #    {
        #        isActive = checkFailed(strFmt("@SYS300182", this.AccountID));
        #    }
        #
        #    return isActive;
        #}
      ENDSOURCE
      SOURCE #checkLedgerDimension
        #/// <summary>
        #/// Indicates whether the main account from the <c>LedgerDimension</c> class has been used on a
        #/// different bank account.
        #/// </summary>
        #/// <returns>
        #/// true if the main account from the <c>LedgerDimension</c> table is unique; otherwise, false.
        #/// </returns>
        #boolean checkLedgerDimension()
        #{
        #    boolean             isValid = true;
        #    BankAccountTable    bankAccountTable;
        #    MainAccountNum      myMainAccount;
        #    MainAccountNum      mainAccount;
        #
        #    if (this.LedgerDimension)
        #    {
        #        myMainAccount = DimensionAttributeValueCombination::getMainAccountFromLedgerDimension(this.LedgerDimension);
        #        if (myMainAccount)
        #        {
        #            while select LedgerDimension, AccountID from bankAccountTable where bankAccountTable.RecId != this.RecId
        #            {
        #                if (bankAccountTable.LedgerDimension)
        #                {
        #                    mainAccount = DimensionAttributeValueCombination::getMainAccountFromLedgerDimension(bankAccountTable.LedgerDimension);
        #                    if (myMainAccount == mainAccount)
        #                    {
        #                        checkFailed(strFmt("@SYS313776", myMainAccount, bankAccountTable.AccountID));
        #                        break;
        #                    }
        #                }
        #            }
        #        }
        #    }
        #
        #    return isValid;
        #}
      ENDSOURCE
      SOURCE #countryRegionId
        #/// <summary>
        #/// Retrieves the bank account postal address country region ID value.
        #/// </summary>
        #/// <returns>
        #/// The bank account country region ID value.
        #/// </returns>
        #LogisticsAddressCountryRegionId countryRegionId()
        #{
        #    return LogisticsLocationEntity::location2PostalAddress(this.Location).CountryRegionId;
        #}
      ENDSOURCE
      SOURCE #dateLastReconciled
        #display TransDate dateLastReconciled()
        #{
        #    return (select
        #            maxof(ReconcileDate)
        #            from bankAccountStatement
        #            where bankAccountStatement.AccountId == this.AccountID).ReconcileDate;
        #}
      ENDSOURCE
      SOURCE #delete
        #public void delete()
        #{
        #
        #    if (CustPrenote::existCompanyBankPrenotes(this.AccountID) || VendPrenote::existCompanyBankPrenotes(this.AccountID))
        #        warning(strFmt("@SYS128512",this.AccountID));
        #
        #    // Check to see if the associated dimension attribute value has been used
        #    // in a way that would prevent deletion.
        #    if (!DimensionValidation::canDeleteEntityValue(this))
        #    {
        #        throw error(strFmt("@SYS134392", this.AccountID));
        #    }
        #
        #    ttsbegin;
        #
        #    // Update the associated dimension attribute value.
        #    DimensionAttributeValue::updateForEntityValueDelete(this);
        #
        #    super();
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #enableAdvancedBankReconciliation
        #/// <summary>
        #/// Peforms operation after enabling the advanced bank reconciliation.
        #/// </summary>
        #private void enableAdvancedBankReconciliation()
        #{
        #    ttsBegin;
        #    if (this.checkCanEnableAdvancedReconciliation())
        #    {
        #        BankAccountTable::createExistingBankDocForAdvancedRecon(this.AccountID);
        #
        #        BankAccountTable::deployBankStatementService();
        #    }
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #existUnreconciledBankTransInClosedPeriod
        #/// <summary>
        #/// Indicates whether there are any existing not reconciled bank transactions in the closing period.
        #/// </summary>
        #/// <returns>
        #/// true if there are any existing not reconciled bank transactions in the closing period; otherwise,
        #/// false.
        #/// </returns>
        #private boolean existUnreconciledBankTransInClosedPeriod()
        #{
        #    BankAccountTrans                bankAccountTrans;
        #    FiscalCalendarPeriod            fiscalCalendarPeriod;
        #    LedgerFiscalCalendarPeriod      ledgerFiscalCalendarPeriod;
        #    LedgerPeriodModuleAccessControl ledgerPeriodModuleAccessControl;
        #
        #    boolean                         ret = true;
        #
        #    select firstonly RecId from bankAccountTrans
        #        where bankAccountTrans.AccountId == this.AccountID
        #            && bankAccountTrans.Reconciled == NoYes::No
        #        exists join fiscalCalendarPeriod
        #            where fiscalCalendarPeriod.Type       == FiscalPeriodType::Operating
        #                && fiscalCalendarPeriod.StartDate <= bankAccountTrans.TransDate
        #                && fiscalCalendarPeriod.EndDate   >= bankAccountTrans.TransDate
        #        exists join ledgerFiscalCalendarPeriod
        #            where ledgerFiscalCalendarPeriod.FiscalCalendarPeriod == fiscalCalendarPeriod.RecId
        #                && ledgerFiscalCalendarPeriod.Ledger              == Ledger::current()
        #                && ledgerFiscalCalendarPeriod.Status              != FiscalPeriodStatus::Open
        #        exists join ledgerPeriodModuleAccessControl
        #            where   ledgerPeriodModuleAccessControl.LedgerFiscalCalendarPeriod  == ledgerFiscalCalendarPeriod.RecId
        #                 && ledgerPeriodModuleAccessControl.ModuleName                  == SysModule::Ledger
        #                 && ledgerPeriodModuleAccessControl.AccessLevel                 == ModulePeriodStat::All;
        #
        #    if (bankAccountTrans.RecId)
        #    {
        #        ret = checkFailed("@GLS221676");
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #existUnreconciledStatement
        #/// <summary>
        #/// Indicates whether there are any reconciled statements.
        #/// </summary>
        #/// <returns>
        #/// true if there are any reconciled statements; otherwise, false.
        #/// </returns>
        #private boolean existUnreconciledStatement()
        #{
        #    boolean                 ret = true;
        #    BankAccountStatement    bankAccountStatement;
        #
        #    select firstonly RecId from bankAccountStatement
        #        where bankAccountStatement.AccountId == this.AccountID
        #            && bankAccountStatement.ReconcileDate == dateNull();
        #    if (bankAccountStatement.RecId)
        #    {
        #        ret = checkFailed("@GLS221677");
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #getBalanceByDate
        #/// <summary>
        #/// Gets the balance on the cutoff date.
        #/// </summary>
        #/// <param name="_cutoffDate">
        #/// The cutoff date.
        #/// </param>
        #/// <returns>
        #/// The balance.
        #/// </returns>
        #public AmountCur getBalanceByDate(TransDate _cutoffDate)
        #{
        #    BankAccountTrans    bankAccountTrans;
        #
        #    select sum(AmountCur), sum(AmountCorrect) from bankAccountTrans
        #        where bankAccountTrans.AccountId == this.AccountID
        #            && bankAccountTrans.CurrencyCode == this.CurrencyCode
        #            && bankAccountTrans.TransDate <= _cutoffDate;
        #
        #    return bankAccountTrans.AmountCur + bankAccountTrans.AmountCorrect;
        #}
      ENDSOURCE
      SOURCE #getBankAccountBalanceCur
        #/// <summary>
        #///    Gets the bank account balance in currency of the bank account.
        #/// </summary>
        #/// <returns>
        #///    The bank account balance.
        #/// </returns>
        #//BP Deviation Documented
        #display AmountCur getBankAccountBalanceCur()
        #{
        #    AmountCur           balanceCur;
        #    BankAccountTrans    bankAccountTrans;
        #    ;
        #
        #
        #    if (hasFieldAccess(tableNum(BankAccountTrans),fieldNum(BankAccountTrans,AmountCur),AccessType::View) &&
        #       hasFieldAccess(tableNum(BankAccountTrans),fieldNum(BankAccountTrans,AmountCorrect),AccessType::View))
        #
        #    {
        #        bankAccountTrans.recordLevelSecurity(true);
        #        // Group by currencyCode so sum is will perform better
        #        while select sum(AmountCur), sum(AmountCorrect) from bankAccountTrans
        #            group by CurrencyCode
        #            where bankAccountTrans.AccountId == this.AccountID
        #        {
        #            balanceCur = balanceCur + bankAccountTrans.AmountCur + bankAccountTrans.AmountCorrect;
        #        }
        #    }
        #    return balanceCur;
        #}
      ENDSOURCE
      SOURCE #getBankAccountBalanceMST
        #/// <summary>
        #///    Returns bank account balance in the currency of the company.
        #/// </summary>
        #/// <returns>
        #///    The bank account balance.
        #/// </returns>
        #//BP Deviation Documented
        #display AmountMST getBankAccountBalanceMST()
        #{
        #    AmountMST           balanceMST;
        #    AmountCur           balanceCur;
        #    BankAccountTrans    bankAccountTrans;
        #    CurrencyCode        companyCurrencyCode;
        #    ;
        #
        #
        #    if (hasFieldAccess(tableNum(BankAccountTrans),fieldNum(BankAccountTrans,AmountCur),AccessType::View) &&
        #        hasFieldAccess(tableNum(BankAccountTrans),fieldNum(BankAccountTrans,AmountCorrect),AccessType::View))
        #    {
        #        bankAccountTrans.recordLevelSecurity(true);
        #        companyCurrencyCode = CompanyInfo::standardCurrency();
        #
        #        // Group by currencyCode so sum is will perform better
        #        while select sum(AmountCur), sum(AmountCorrect) from bankAccountTrans
        #            group by CurrencyCode
        #            where bankAccountTrans.AccountId == this.AccountID
        #        {
        #
        #            balanceCur = bankAccountTrans.AmountCur + bankAccountTrans.AmountCorrect;
        #
        #            if (bankAccountTrans.CurrencyCode != companyCurrencyCode)
        #            {
        #                balanceMST += Currency::mstAmount(balanceCur, bankAccountTrans.CurrencyCode);
        #            }
        #            else
        #            {
        #                balanceMST += balanceCur;
        #            }
        #
        #        }
        #    }
        #    return balanceMST;
        #}
      ENDSOURCE
      SOURCE #initFromBankGroup
        #public void initFromBankGroup(BankGroup _bankGroup)
        #{
        #    // <GJP>
        #    #isoCountryRegionCodes
        #    // </GJP>
        #
        #    this.BankAccountMap::initFromBankGroup(_bankGroup);
        #
        #    this.CurrencyCode           = _bankGroup.CurrencyCode;
        #    this.DiscDelayNoticeDays    = _bankGroup.DiscNoticeDelayDays;
        #    this.BankSuffix             = _bankGroup.BankSuffix;
        #    this.BankTransferCode       = _bankGroup.BankTransferCode;
        #    this.BankContractAccount    = _bankGroup.BankContractAccount;
        #    this.CompanyPaymId          = _bankGroup.CompanyPaymId;
        #    this.BankStatementFormat    = _bankGroup.BankStatementFormat;
        #    this.BankStatementName      = _bankGroup.BankStatementName;
        #    // <GJP>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
        #    {
        #        this.AccountNameKana_JP = _bankGroup.NameKana_JP;
        #    }
        #    // </GJP>
        #}
      ENDSOURCE
      SOURCE #initValue
        #void initValue()
        #{
        #    // <GJP>
        #    #isoCountryRegionCodes
        #    // </GJP>
        #
        #    super();
        #
        #    this.CurrencyCode = CompanyInfo::standardCurrency();
        #
        #    this.NsfFeeMarkupGroupModule =
        #                            MarkupModuleType::Cust;
        #
        #    // <GJP>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
        #    {
        #        this.TransType_JP = BankTransType_JP::OrdinarySavings;
        #    }
        #    // </GJP>
        #}
      ENDSOURCE
      SOURCE #insert
        #/// <summary>
        #/// Inserts <c>BankAccountTable</c> record.
        #/// </summary>
        #public void insert()
        #{
        #    super();
        #
        #    if (this.BankReconciliationEnabled)
        #    {
        #        this.enableAdvancedBankReconciliation();
        #
        #        if (this.BankReconciliationStmtAsPaymConfirm)
        #        {
        #            this.updateBankStatementAsPaymConfirm(this.BankReconciliationStmtAsPaymConfirm);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #isBankReconciliationEnabled
        #/// <summary>
        #/// Indicates whether the bank reconciliation feature is enabled.
        #/// </summary>
        #/// <returns>
        #/// true if the bank reconciliation is enabled; otherwise, false.
        #/// </returns>
        #public boolean isBankReconciliationEnabled()
        #{
        #    return this.BankReconciliationEnabled;
        #}
      ENDSOURCE
      SOURCE #isBankStatementUsedAsPaymentConfirmation
        #/// <summary>
        #///     Indicates whether the function of bank statement used as payment confirmation is enabled.
        #/// </summary>
        #/// <returns>
        #///     True if the function is enabled; otherwise, false.
        #/// </returns>
        #public boolean isBankStatementUsedAsPaymentConfirmation()
        #{
        #    return this.BankReconciliationStmtAsPaymConfirm;
        #}
      ENDSOURCE
      SOURCE #isMatchAutoAfterImport
        #/// <summary>
        #/// Indicates whether to match automatically after a bank statement is imported.
        #/// </summary>
        #/// <returns>
        #/// true if you must to match automatically after the bank statement is imported; otherwise, false.
        #/// </returns>
        #public BankReconciliationMatchAutoAfterImport isMatchAutoAfterImport()
        #{
        #    return this.isBankReconciliationEnabled() && this.BankReconMatchAutoAfterImport;
        #}
      ENDSOURCE
      SOURCE #isPTTBankAccount
        #public boolean isPTTBankAccount()
        #{
        #    return (this.RegistrationNum == '');
        #}
        #
      ENDSOURCE
      SOURCE #lastCreatedNegInst
        #public BankNegInstNum lastCreatedNegInst(BankNegInst _negInst)
        #{
        #    BankNegInstNum          negInstNum;
        #
        #    switch (_negInst)
        #    {
        #        case BankNegInst::Check :
        #            negInstNum = BankChequeTable::findLastChequeNum(this.AccountID);
        #            break;
        #
        #        case BankNegInst::BillOfExchange :
        #            negInstNum = BankBillOfExchangeTable::findLastBillOfExchangeNum(this.AccountID);
        #            break;
        #
        #        case BankNegInst::PromissoryNote :
        #            negInstNum = BankPromissoryNoteTable::findLastPromissoryNum(this.AccountID);
        #            break;
        #
        #        default :
        #            throw error(Error::wrongUseOfFunction(funcName()));
        #    }
        #
        #    return negInstNum;
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #public void modifiedField(FieldId _fieldId)
        #{
        #    super(_fieldId);
        #
        #    this.BankAccountMap::modifiedField(_fieldId);
        #
        #    switch (_fieldId)
        #    {
        #        case fieldNum(BankAccountTable, BankPositivePayFormat) :
        #            if (this.BankPositivePayFormat != 0)
        #            {
        #                if (this.orig().BankPositivePayFormat == 0)
        #                {
        #                    this.BankPositivePayStartDate = systemDateGet();
        #                }
        #            }
        #            else
        #            {
        #                this.BankPositivePayStartDate = dateNull();
        #            }
        #            break;
        #    }
        #}
        #
        #
      ENDSOURCE
      SOURCE #postalAddress
        #LogisticsPostalAddress postalAddress()
        #{
        #    ;
        #    return LogisticsLocationEntity::location2PostalAddress(this.Location);
        #}
      ENDSOURCE
      SOURCE #remittedAmount
        #display Amount remittedAmount()
        #{
        #    return this.remittedAmountMST(this.RemitCollectionAmount);
        #
        #}
      ENDSOURCE
      SOURCE #remittedAmountMST
        #public AmountMST remittedAmountMST(AmountMST    _remainAmountMSTLocal)
        #{
        #    AmountMST remittedAmountMST;
        #    ;
        #
        #    if (this.AccountID)
        #    {
        #        if (!this.DiscCreditMaxMST)
        #        {
        #            remittedAmountMST = maxInt() - _remainAmountMSTLocal;
        #        }
        #        else
        #        {
        #            remittedAmountMST = this.DiscCreditMaxMST - _remainAmountMSTLocal;
        #        }
        #    }
        #    return remittedAmountMST;
        #}
      ENDSOURCE
      SOURCE #renamePrimaryKey
        #public void renamePrimaryKey()
        #{
        #    Common originalRecord = this.orig();
        #
        #    super();
        #
        #    DimensionStorage::syncRenamedValue(this, originalRecord);
        #}
      ENDSOURCE
      SOURCE #update
        #/// <summary>
        #/// Updates <c>BankAccountTable</c> record.
        #/// </summary>
        #public void update()
        #{
        #    BankAccountTable bankAccountTableOrig;
        #
        #    bankAccountTableOrig = this.orig();
        #
        #    super();
        #
        #    if (this.BankReconciliationEnabled && !bankAccountTableOrig.BankReconciliationEnabled)
        #    {
        #        this.enableAdvancedBankReconciliation();
        #    }
        #
        #    if (this.BankReconciliationStmtAsPaymConfirm != bankAccountTableOrig.BankReconciliationStmtAsPaymConfirm)
        #    {
        #        this.updateBankStatementAsPaymConfirm(this.BankReconciliationStmtAsPaymConfirm);
        #    }
        #}
      ENDSOURCE
      SOURCE #updateBankStatementAsPaymConfirm
        #/// <summary>
        #/// Performs operation after turnning on or turnning off the function of using bank statement as payment confirmation.
        #/// </summary>
        #/// <param name="_enabled">
        #/// A boolean value indicating whether to enable the function.
        #/// </param>
        #private void updateBankStatementAsPaymConfirm(BankReconciliationStmtAsPaymConfirm _enabled)
        #{
        #    if (this.isBankReconciliationEnabled())
        #    {
        #        ttsBegin;
        #        BankAccountTable::updateExistingBankDocForPaymentSent(this.AccountID, _enabled);
        #        ttsCommit;
        #    }
        #}
      ENDSOURCE
      SOURCE #validateBankDocumentWhenInActiveBank
        #/// <summary>
        #/// Validates the bank document agreement status to make sure that if the bank account is closed, the
        #/// related bank document agreement is not still open.
        #/// </summary>
        #/// <param name="_status">
        #/// The new bank account status.
        #/// </param>
        #/// <param name="_validFromDateTime">
        #/// The starting date of the new active period of the bank account.
        #/// </param>
        #/// <param name="_validToDateTime">
        #/// The ending date of the new ative period of the bank account.
        #/// </param>
        #/// <returns>
        #/// true if there is no issue;otherwise, false.
        #/// </returns>
        #private boolean validateBankDocumentWhenInActiveBank(
        #    BankAccountHoldStatus _status,
        #    ValidFromDateTime     _validFromDateTime,
        #    ValidToDateTime       _validToDateTime)
        #{
        #    boolean ret = true;
        #
        #    ret = !BankDocumentFacilityAgreement::checkImpactedAgreementsByBankInActived(
        #            this.AccountID,
        #            _status,
        #            _validFromDateTime,
        #            _validToDateTime);
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateField
        #boolean validateField(FieldId _fieldId)
        #{
        #    LedgerDimensionDefaultAccount   ledgerDimension;
        #    boolean                         ret;
        #    TaxRegistrationValidator_MX     taxRegistrationValidator;
        #    #isoCountryRegionCodes
        #    // <GEERU>
        #    BankGroup                       bankGroup;
        #    // </GEERU>
        #
        #    ret = super(_fieldId);
        #
        #    if (ret)
        #    {
        #        switch (_fieldId)
        #        {
        #            case fieldNum(BankAccountTable, CustomerPaymentFeeLedgerDimension),
        #                 fieldNum(BankAccountTable, RemittanceCollectionLedgerDimension),
        #                 fieldNum(BankAccountTable, RemittanceDiscountLedgerDimension),
        #                 fieldNum(BankAccountTable, InvoiceRemittanceLedgerDimension) :
        #                ledgerDimension = this.(_fieldId);
        #                ret = MainAccount::checkAllowPosting(DimensionStorage::getMainAccountFromLedgerDimension(ledgerDimension).MainAccountId);
        #                break;
        #
        #            case fieldNum(BankAccountTable, ActiveFrom),
        #                 fieldNum(BankAccountTable, ActiveTo):
        #                ret = this.checkActiveDates();
        #                break;
        #
        #            case fieldNum(BankAccountTable, LedgerDimension) :
        #                ret = this.checkLedgerDimension();
        #                if (ret)
        #                {
        #                    ret = MainAccount::checkAllowPosting(DimensionStorage::getMainAccountFromLedgerDimension(ledgerDimension).MainAccountId);
        #                }
        #                break;
        #
        #            case fieldNum(BankAccountTable, AccountNum) :
        #                ret = this.BankAccountMap::bankAccountValidation().checkBankAccountNum(this.AccountNum);
        #                break;
        #
        #            case fieldNum(BankAccountTable, iban) :
        #                if (Bank::checkBankIBAN(this.iban))
        #                {
        #                    this.iban = strUpr(this.iban);
        #                    ret = true;
        #                }
        #                else
        #                {
        #                    ret = false;
        #                }
        #                break;
        #
        #            case fieldNum(BankAccountTable, RegistrationNum) :
        #                ret = this.BankAccountMap::bankAccountValidation().checkBankRegNum(this.RegistrationNum, this.BankCodeType);
        #                break;
        #
        #            case fieldNum(BankAccountTable, OverDraftLimit) :
        #                if (this.OverDraftLimit > 0)
        #                {
        #                    ret = checkFailed("@SYS313990");
        #                }
        #                break;
        #
        #            case fieldNum(BankAccountTable, Rfc_MX) :
        #                taxRegistrationValidator = TaxRegistrationValidator_MX::construct(this);
        #                ret = taxRegistrationValidator.validateRFC(this.Rfc_MX, CompanyType_MX::LegalEntity);
        #                break;
        #            // <GEERU>
        #            case fieldNum(BankAccountTable, BankGroupId) :
        #                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #                {
        #                    bankGroup = BankGroup::find(this.orig().BankGroupId);
        #                    ret = ret && bankGroup.checkVendAccountNum_RU(bankGroup.VendAccountNum_RU);
        #                }
        #                break;
        #            // </GEERU>
        #            // <GEEU>
        #            case fieldNum(BankAccountTable, LvDefaultBank) :
        #                ret = this.checkDefault_LV();
        #                break;
        #            // </GEEU>
        #            case fieldNum(BankAccountTable, BankStatementName) :
        #            case fieldNum(BankAccountTable, BankStatementFormat) :
        #            case fieldNum(BankAccountTable, BankReconciliationMatchRuleSet) :
        #            case fieldNum(BankAccountTable, BankReconMatchAutoAfterImport)  :
        #            case fieldNum(BankAccountTable, BankReconMatchRuleManualMatch)  :
        #            case fieldNum(BankAccountTable, BankReconMatchRuleManualReversal) :
        #                if (this.orig().(_fieldId) != this.(_fieldId) && !this.BankReconciliationEnabled)
        #                {
        #                    ret = checkFailed(strFmt("@GLS221348", this.AccountID, "@GLS221350"));
        #                }
        #                break;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #/// <summary>
        #///    Validates the current bank record before it is written to the database.
        #/// </summary>
        #/// <returns>
        #///    true if the bank record is valid; otherwise, false
        #/// </returns>
        #public boolean validateWrite()
        #{
        #    boolean                         ok;
        #    Bank                            bank = new Bank();
        #    TaxRegistrationValidator_MX     taxRegistrationValidator;
        #    #isoCountryRegionCodes
        #
        #    ok = super();
        #
        #    if (ok)
        #    {
        #        ok = this.BankAccountMap::validateWrite();
        #    }
        #
        #    if (ok)
        #    {
        #        ok = bank.checkBankContractAccount(this);
        #    }
        #
        #    if (ok)
        #    {
        #        ok = bank.checkGiroContractAccount(this);
        #    }
        #
        #    if (SysCountryRegionCode::isLocationInCountryRegion(this.Location, [#isoFI])
        #        && this.IncludeBankBarCode_FI == NoYes::Yes)
        #    {
        #        ok = Bank_FI::isBankBarCodeAllowed(this.AccountID);
        #    }
        #
        #    if(this.PrenoteResponseDays < 0 || this.PrenoteResponseDays > 99)
        #    {
        #        ok = checkFailed(strFmt("@SYS127696","@SYS128503",'0','99'));
        #    }
        #
        #    if (ok && BankLCImportFeatureChecker::checkBankLCImportEnabled())
        #    {
        #        ok = this.validateBankDocumentWhenInActiveBank(this.BankAccountStatus, this.ActiveFrom, this.ActiveTo);
        #
        #        if (ok)
        #        {
        #            if(BankDocumentFacilityAgreement::isBankCurrencyCodeConflicted(this.AccountID, this.CurrencyCode))
        #            {
        #               // The bank account is being used by active Letter of Credits or Letter of Guarantees.
        #               // The currency code could not be changed.
        #               ok = checkFailed("@SYS316254");
        #            }
        #        }
        #    }
        #
        #    if(this.IsBankPrenote == NoYes::Yes && this.PrenoteResponseDays == 0)
        #    {
        #        warning(strFmt("@SYS128513", fieldPName(BankAccountTable,PrenoteResponseDays)));
        #    }
        #
        #    if (SysCountryRegionCode::isLocationInCountryRegion(this.Location, [#isoMX]))
        #    {
        #        taxRegistrationValidator = TaxRegistrationValidator_MX::construct(this);
        #        ok = taxRegistrationValidator.validateBankAccountTaxRegistration() && ok;
        #    }
        #
        #    // <GEEU>
        #    ok = ok && this.checkDefault_LV();
        #    // </GEEU>
        #
        #    if (ok)
        #    {
        #        if (!this.BankReconciliationEnabled && this.orig().BankReconciliationEnabled)
        #        {
        #            ok = checkFailed("@GLS221673");
        #        }
        #        else if (this.BankReconciliationEnabled && !this.orig().BankReconciliationEnabled)
        #        {
        #            ok = this.checkCanEnableAdvancedReconciliation();
        #        }
        #    }
        #
        #    if (ok)
        #    {
        #        if (this.BankReconciliationStmtAsPaymConfirm != this.orig().BankReconciliationStmtAsPaymConfirm)
        #        {
        #            ok = this.isBankReconciliationEnabled();
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #vendAccount_RU
        #public VendAccount vendAccount_RU()
        #{
        #    return BankGroup::find(this.BankGroupId).VendAccountNum_RU;
        #}
        #
      ENDSOURCE
      SOURCE #accountNum
        #public static BankAccount accountNum(CompanyBankAccountId _accountID)
        #{
        #    return (select bankAccountTable where bankAccountTable.AccountID == _accountID).AccountNum;
        #}
      ENDSOURCE
      SOURCE #checkDefaultGiroBank_W
        #static void checkDefaultGiroBank_W(CurrencyCode currencyCode = CompanyInfo::standardCurrency())
        #{
        ##isoCountryRegionCodes
        #    if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoEE, #isoHU, #isoLT, #isoLV, #isoPL]) &&
        #            BankParameters::find().GiroAccountValidationEnabled_W &&
        #            !BankAccountTable::findDefault_LV(currencyCode).AccountID)
        #    {
        #        warning(strFmt("@GLS112540", currencyCode));
        #    }
        #}
      ENDSOURCE
      SOURCE #checkExist
        #public static boolean checkExist(CompanyBankAccountId _companyBankAccountId )
        #{
        #    boolean ret = true;
        #    ;
        #
        #    if (!BankAccountTable::exist(_companyBankAccountId))
        #    {
        #        ret = checkFailed(strFmt(BankAccountTable::txtNotExist(), _companyBankAccountId));
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkIsActive
        #/// <summary>
        #/// Indicates whether the specified bank account is active.
        #/// </summary>
        #/// <param name="_bankAccount">
        #/// The company bank account for which to check the status.
        #/// </param>
        #/// <param name="_comparisonDate">
        #/// The transaction date.
        #/// </param>
        #/// <param name="_company">
        #/// The company for which the transaction is performed.
        #/// </param>
        #/// <returns>
        #/// true if the bank account is active; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Dates in the <c>ActiveFrom</c> and the <c>ActiveTo</c> fields are inclusive.
        #/// </remarks>
        #public static boolean checkIsActive(
        #    CompanyBankAccount _bankAccount,
        #    TransDate _comparisonDate = DateTimeUtil::date(DateTimeUtil::utcNow()),
        #    CompanyId _company = curext())
        #{
        #    return BankAccountTableLookup::checkIsActive(_bankAccount, _comparisonDate, _company);
        #}
      ENDSOURCE
      SOURCE #checkIsAdvancedBankReconEnabled
        #/// <summary>
        #/// Validates whether a specified bank account is an enabled advanced bank reconciliation.
        #/// </summary>
        #/// <param name="_companyBankAccountId">
        #/// The specified bank account.
        #/// </param>
        #/// <returns>
        #/// true if the advanced bank reconciliation is enabled; otherwise, false.
        #/// </returns>
        #public static boolean checkIsAdvancedBankReconEnabled(CompanyBankAccountId _companyBankAccountId)
        #{
        #    boolean             ret = true;
        #
        #    if (_companyBankAccountId)
        #    {
        #        if (!BankAccountTable::isAdvancedBankReconciliationEnabled(_companyBankAccountId))
        #        {
        #            ret = checkFailed(strFmt("@GLS221348", _companyBankAccountId, "@GLS221350"));
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #createExistingBankDocForAdvancedRecon
        #/// <summary>
        #/// Creates the existing bank documents when an advanced bank reconciliation is enabled.
        #/// </summary>
        #/// <param name="_accountId">
        #/// A bank account ID.
        #/// </param>
        #private server static void createExistingBankDocForAdvancedRecon(CompanyBankAccountId _accountId)
        #{
        #    BankChequeTable                     bankChequeTable;
        #    BankDeposit                         bankDeposit;
        #    BankDepositDocument                 bankDepositDocument;
        #    BankAccountTrans                    bankAccountTrans;
        #    LedgerJournalTrans                  ledgerJournalTrans;
        #    LedgerJournalTable                  ledgerJournalTable;
        #    BankDocumentTable                   bankDocumentTable;
        #
        #    SysOperationProgress    progress;
        #
        #    #Macrolib.AviFiles
        #    #define.TotalTypes(4)
        #    //Label: Generating bank document for %1...%2
        #    #define.GeneratingText("@GLS221780")
        #
        #    progress = SysOperationProgress::newGeneral(#AviUpdate, "@GLS221675", #TotalTypes);
        #
        #    ttsbegin;
        #    // Generate bank document for posted check.
        #    while select bankChequeTable
        #        where bankChequeTable.AccountID == _accountId
        #            && (bankChequeTable.ChequeStatus == ChequeStatus::Payment
        #            || bankChequeTable.ChequeStatus  == ChequeStatus::Cancelled
        #            || bankChequeTable.ChequeStatus  == ChequeStatus::CancelPending)
        #        exists join bankAccountTrans
        #            where bankAccountTrans.SourceTableId == tablenum(BankChequeTable)
        #                && bankAccountTrans.SourceRecId  == bankChequeTable.RecId
        #                && bankAccountTrans.Reconciled   == NoYes::No
        #    {
        #        progress.setText(strFmt(#GeneratingText, enum2str(BankDocumentBookType::Cheque), bankChequeTable.ChequeNum));
        #        if (bankChequeTable.ChequeStatus == ChequeStatus::Payment)
        #        {
        #            BankDocumentProcessor::submitBankDocumentTable(bankChequeTable);
        #        }
        #        else
        #        {
        #            BankDocumentProcessor::submitBankDocumentTable(bankChequeTable, BankDocumentStatusChangeType::Cancel);
        #        }
        #    }
        #
        #    // Generate bank document for not posted check.
        #    while select bankChequeTable
        #        where bankChequeTable.AccountID         == _accountId
        #            && bankChequeTable.ChequeStatus     == ChequeStatus::Payment
        #            && bankChequeTable.SourceTableId    == tablenum(LedgerJournalTrans)
        #        exists join ledgerJournalTrans
        #            where bankChequeTable.SourceRecId   == LedgerJournalTrans.RecId
        #        exists join ledgerJournalTable
        #            where ledgerJournalTrans.JournalNum == ledgerJournalTable.JournalNum
        #                && ledgerJournalTable.Posted    == NoYes::No
        #    {
        #        progress.setText(strFmt(#GeneratingText, enum2str(BankDocumentBookType::Cheque), bankChequeTable.ChequeNum));
        #        BankDocumentProcessor::submitBankDocumentTable(bankChequeTable);
        #    }
        #
        #    // Generate bank document for deposit slip table.
        #    progress.incCount();
        #    while select bankDepositDocument
        #        where bankDepositDocument.AccountId == _accountId
        #        exists join bankAccountTrans
        #            where bankAccountTrans.SourceTableId == tablenum(BankDepositDocument)
        #                && bankAccountTrans.SourceRecId  == bankDepositDocument.RecId
        #                && bankAccountTrans.Reconciled   == NoYes::No
        #    {
        #        progress.setText(strFmt(#GeneratingText, enum2str(BankDocumentBookType::DepositSlip), bankDeposit.DepositNum));
        #        BankDocumentProcessor::submitBankDocumentTable(bankDepositDocument);
        #    }
        #
        #    // Generate bank document for deposit slip cancel.
        #    progress.incCount();
        #    while select bankDeposit
        #        where bankDeposit.AccountId == _accountId
        #            && bankDeposit.Canceled == NoYes::Yes
        #        exists join bankAccountTrans
        #            where bankAccountTrans.SourceTableId == tablenum(BankDeposit)
        #                && bankAccountTrans.SourceRecId  == bankDeposit.RecId
        #                && bankAccountTrans.Reconciled   == NoYes::No
        #    {
        #        progress.setText(strFmt(#GeneratingText, enum2str(BankDocumentBookType::DepositSlipCancel), bankDeposit.DepositNum));
        #        BankDocumentProcessor::submitBankDocumentTable(bankDeposit);
        #    }
        #    // Generate bank document for pending deposit slip cancel.
        #    progress.incCount();
        #    while select bankDeposit
        #        where bankDeposit.AccountId         == _accountId
        #            && bankDeposit.CancelPending    == NoYes::Yes
        #    {
        #        progress.setText(strFmt(#GeneratingText, enum2str(BankDocumentBookType::DepositSlipCancel), bankDeposit.DepositNum));
        #        BankDocumentProcessor::submitBankDocumentTable(bankDeposit);
        #    }
        #
        #    // Generate bank document for other bank transaction.
        #    progress.incCount();
        #    while select bankAccountTrans
        #        where bankAccountTrans.AccountId        == _accountId
        #            && bankAccountTrans.Reconciled      == NoYes::No
        #        notexists join bankDocumentTable
        #            where   bankDocumentTable.SourceRelationType    == bankAccountTrans.SourceTableId
        #                &&  bankDocumentTable.SourceRecId           == bankAccountTrans.SourceRecId
        #    {
        #        progress.setText(strFmt(#GeneratingText, enum2str(BankDocumentBookType::Others), bankAccountTrans.Voucher));
        #        BankDocumentProcessor::submitBankDocumentTable(bankAccountTrans);
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #deployBankStatementService
        #/// <summary>
        #/// Deploys the bank statement service.
        #/// </summary>
        #private server static void deployBankStatementService()
        #{
        #    startLengthyOperation();
        #
        #    //delpoy service
        #    if (!AifService::find(identifierStr(BankStmtService)))
        #    {
        #        AifServiceGenerationManager::registerService(identifierStr(BankStmtService));
        #        //Bank statement service is deployed. Please create inbound port using the service.
        #        info("@GLS221867");
        #    }
        #
        #    endLengthyOperation();
        #}
      ENDSOURCE
      SOURCE #exist
        #public static boolean exist(CompanyBankAccountId _companyBankAccountId )
        #{
        #    boolean found;
        #    ;
        #
        #    found = (select firstonly
        #                 RecId
        #            from
        #                 bankAccountTable
        #             where
        #                 bankAccountTable.AccountID == _companyBankAccountId).RecId != 0;
        #
        #    return found;
        #}
      ENDSOURCE
      SOURCE #existByCompany
        #/// <summary>
        #///    Determines whether the specified record exists in the <c>BankAccountTable</c> table.
        #/// </summary>
        #/// <param name="_company">
        #///    The company of the bank account to check for existence.
        #/// </param>
        #/// <param name="_accountId">
        #///    The account ID of the bank account to check for existence.
        #/// </param>
        #/// <returns>
        #///    true if the specified record exists; otherwise, false.
        #/// </returns>
        #public static boolean existByCompany(DataAreaId _company, CompanyBankAccountId _accountId)
        #{
        #    boolean ret = false;
        #
        #    changecompany(_company)
        #    {
        #        ret = BankAccountTable::exist(_accountId);
        #    }
        #
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #find
        #public static BankAccountTable find(
        #    CompanyBankAccountId _companyBankAccountId,
        #    boolean              _forupdate        = false,
        #    ConcurrencyModel     _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    BankAccountTable bankAccountTable;
        #
        #    bankAccountTable.selectForUpdate(_forupdate);
        #    if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        #    {
        #        bankAccountTable.concurrencyModel(_concurrencyModel);
        #    }
        #
        #    if (_companyBankAccountId)
        #    {
        #        select firstonly bankAccountTable
        #            where bankAccountTable.AccountID == _companyBankAccountId;
        #    }
        #
        #    return bankAccountTable;
        #}
      ENDSOURCE
      SOURCE #findBankDocumentOfPaymentSent
        #/// <summary>
        #/// Finds <c>LedgerJournalTrans</c> which is possible electronic payment in sent status.
        #/// </summary>
        #/// <param name="_accountId">
        #/// The bank account id.
        #/// </param>
        #/// <param name="_forUpdate">
        #/// A boolean value indicating whether to update the record.
        #/// </param>
        #/// <returns>
        #/// The result set of <c>LedgerJournalTrans</c>.
        #/// </returns>
        #private static LedgerJournalTrans findBankDocumentOfPaymentSent(CompanyBankAccountId _accountId, boolean _forUpdate = true)
        #{
        #    LedgerJournalTrans                  ledgerJournalTrans;
        #    LedgerJournalTable                  ledgerJournalTable;
        #    DimensionAttributeValueCombination  ledgerDimension;
        #
        #    select ledgerJournalTrans
        #        where ledgerJournalTrans.PaymentStatus      == CustVendPaymStatus::Sent
        #            && (((ledgerJournalTrans.AccountType                == LedgerJournalACType::Vend
        #                        || ledgerJournalTrans.AccountType       == LedgerJournalACType::Cust)
        #                    && ledgerJournalTrans.OffsetAccountType     == LedgerJournalACType::Bank)
        #                || ((ledgerJournalTrans.OffsetAccountType       == LedgerJournalACType::Vend
        #                        || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust)
        #                    && ledgerJournalTrans.AccountType           == LedgerJournalACType::Bank))
        #            && ledgerJournalTrans.BankChequeNum == ''
        #            && ledgerJournalTrans.BankDepositNum == ''
        #            && ledgerJournalTrans.BankDepositVoucher == NoYes::No
        #        exists join ledgerJournalTable
        #            where ledgerJournalTable.JournalNum     == ledgerJournalTrans.JournalNum
        #                && ledgerJournalTable.Posted        == NoYes::No
        #        exists join ledgerDimension
        #            where ((ledgerJournalTrans.OffsetLedgerDimension    == ledgerDimension.RecId
        #                        && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank)
        #                    || (ledgerJournalTrans.LedgerDimension      == ledgerDimension.RecId
        #                        && ledgerJournalTrans.AccountType       == LedgerJournalACType::Bank))
        #                && ledgerDimension.DisplayValue == _accountId;
        #    ledgerJournalTrans.selectForUpdate(_forUpdate);
        #
        #    return ledgerJournalTrans;
        #}
      ENDSOURCE
      SOURCE #findByCompany
        #/// <summary>
        #///    Finds the specified record in the <c>BankAccountTable</c> table.
        #/// </summary>
        #/// <param name="_company">
        #///    The company of the bank account.
        #/// </param>
        #/// <param name="_accountId">
        #///    The account ID of the bank account.
        #/// </param>
        #/// <param name="_forUpdate">
        #///    A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///    A record in the <c>BankAccountTable</c> table; otherwise, an empty record.
        #/// </returns>
        #public static BankAccountTable findByCompany(
        #    DataAreaId _company,
        #    CompanyBankAccountId _accountId,
        #    boolean _forUpdate = false)
        #{
        #    BankAccountTable bankAccount;
        #    ;
        #
        #    changecompany(_company)
        #    {
        #        bankAccount = BankAccountTable::find(_accountId, _forUpdate);
        #    }
        #
        #    return bankAccount;
        #}
      ENDSOURCE
      SOURCE #findByLedgerDimension
        #public static BankAccountTable findByLedgerDimension(
        #    LedgerDimensionAccount  _ledgerDimension,
        #    boolean                 _forupdate = false,
        #    ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    BankAccountTable                    bankAccountTable;
        #    DimensionAttributeValueCombination  ledgerDimension;
        #
        #    bankAccountTable.selectForUpdate(_forupdate);
        #    if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        #    {
        #        bankAccountTable.concurrencyModel(_concurrencyModel);
        #    }
        #
        #    select firstonly bankAccountTable
        #        join RecId from ledgerDimension where
        #            ledgerDimension.DisplayValue == bankAccountTable.AccountID &&
        #            ledgerDimension.RecId == _ledgerDimension;
        #
        #    return bankAccountTable;
        #}
      ENDSOURCE
      SOURCE #findDefault_LV
        #public server static BankAccountTable findDefault_LV(CurrencyCode _currencyCode)
        #{
        ##isoCountryRegionCodes
        #    BankAccountTable bankAccountTable;
        #
        #    if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoEE, #isoHU, #isoLT, #isoLV, #isoPL]))
        #    {
        #        select firstonly bankAccountTable
        #            where bankAccountTable.CurrencyCode == _currencyCode &&
        #                  bankAccountTable.LvDefaultBank == NoYes::Yes;
        #    }
        #
        #    return bankAccountTable;
        #}
        #
      ENDSOURCE
      SOURCE #findLedgerDimension
        #public static LedgerDimensionDefaultAccount findLedgerDimension(CompanyBankAccountId _companyBankAccountId)
        #{
        #    LedgerDimensionDefaultAccount ledgerDimension;
        #
        #    if (_companyBankAccountId)
        #    {
        #        ledgerDimension = (select LedgerDimension from bankAccountTable
        #                            where bankAccountTable.AccountID == _companyBankAccountId).LedgerDimension;
        #    }
        #    return ledgerDimension;
        #}
      ENDSOURCE
      SOURCE #findOnAccountNum
        #server public static BankAccountTable findOnAccountNum(BankAccount _bankAccount,
        #                                                       boolean     _forUpdate = false)
        #{
        #    BankAccountTable bankAccountTable;
        #    ;
        #
        #    if (_bankAccount)
        #    {
        #        bankAccountTable.selectForUpdate(_forUpdate);
        #
        #
        #        while select bankAccountTable
        #        {
        #            if (strKeep(bankAccountTable.AccountNum, '0123456789') == strKeep(_bankAccount,'0123456789'))
        #            {
        #                break;
        #            }
        #        }
        #    }
        #
        #    return bankAccountTable;
        #}
      ENDSOURCE
      SOURCE #isActive
        #/// <summary>
        #/// Indicates whether the specified transaction date is in the period that is specified by the
        #/// <c>ActiveFrom</c> and <c>ActiveTo</c> fields.
        #/// </summary>
        #/// <param name="_bankAccount">
        #/// The company bank account for which to check the dates.
        #/// </param>
        #/// <param name="_comparisonDate">
        #/// The transaction date.
        #/// </param>
        #/// <param name="_company">
        #/// The company for which the transaction is performed.
        #/// </param>
        #/// <returns>
        #/// true if the transaction date falls in between the <c>ActiveFrom</c> and the <c>ActiveTo</c> field
        #/// dates; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Dates in the <c>ActiveFrom</c> and the <c>ActiveTo</c> fields are inclusive.
        #/// </remarks>
        #public static boolean isActive(
        #    CompanyBankAccount _bankAccount,
        #    TransDate _comparisonDate = DateTimeUtil::date(DateTimeUtil::utcNow()),
        #    CompanyId _company = curext())
        #{
        #    return BankAccountTableLookup::isActive(_bankAccount, _comparisonDate, _company);
        #}
      ENDSOURCE
      SOURCE #isActiveForAllTransactions
        #/// <summary>
        #/// Indicates whether the <c>BankAccountHoldStatus</c> status has the <c>InactiveForAllTransactions</c> enumeration value.
        #/// </summary>
        #/// <param name="_bankAccount">
        #/// The company bank account.
        #/// </param>
        #/// <param name="_dataAreaId">
        #/// The <c>DataAreaId</c> of the company.
        #/// </param>
        #/// <returns>
        #/// true if the <c>BankAccountHoldStatus</c> status has the <c>ActiveForAllTransactions</c> or <c>InactiveForNewTransactions</c> enumeration value; otherwise, false.
        #/// </returns>
        #public static boolean isActiveForAllTransactions(CompanyBankAccount _bankAccount, DataAreaId _dataAreaId = curext())
        #{
        #    return BankAccountTableLookup::isActiveForAllTransactions(_bankAccount, _dataAreaId);
        #}
      ENDSOURCE
      SOURCE #isAdvancedBankReconciliationEnabled
        #/// <summary>
        #/// Indicates whether an advanced bank reconciliation is enabled for a specified bank account.
        #/// </summary>
        #/// <param name="_companyBankAccountId">
        #/// The specified bank account.
        #/// </param>
        #/// <returns>
        #/// true if the advanced bank reconciliation is enabled; otherwise, false.
        #/// </returns>
        #public static boolean isAdvancedBankReconciliationEnabled(CompanyBankAccountId _companyBankAccountId)
        #{
        #    return BankAccountTable::find(_companyBankAccountId).BankReconciliationEnabled;
        #}
      ENDSOURCE
      SOURCE #isSingleCurrency
        #public static server boolean isSingleCurrency(
        #    CompanyBankAccountId    _bankAccountId,
        #    LedgerJournalId         _journalNum = '')
        #{
        #    BankAccountTable    bankAccountTable;
        #    BankAccountTrans    bankAccountTrans;
        #    boolean             ret = false;
        #    ;
        #
        #    // Only single currency when Multi currency is not selected and a currency code has been defined in BankAccountTable
        #    select firstonly BankMultiCurrency, CurrencyCode from bankAccountTable
        #        where bankAccountTable.AccountID            == _bankAccountId
        #           && bankAccountTable.BankMultiCurrency    == NoYes::No
        #           && bankAccountTable.CurrencyCode         != '';
        #
        #    if (bankAccountTable)
        #    {
        #        // No transactions with another currency are allowed
        #        select firstonly RecId from bankAccountTrans
        #            where bankAccountTrans.AccountId    == _bankAccountId
        #               && bankAccountTrans.CurrencyCode != bankAccountTable.CurrencyCode;
        #
        #        if (!bankAccountTrans)
        #            ret = true;
        #    }
        #
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #jumpRef
        #/// <summary>
        #/// Adds the Go to Main Table Form option to the shortcut menu.
        #/// </summary>
        #/// <param name="_accountId">
        #/// The account ID of the <c>BankAccountTable</c> table.
        #/// </param>
        #public static client void jumpRef(CompanyBankAccountId _accountId)
        #{
        #    Args    args;
        #    FormRun formRun;
        #
        #    args = new Args(formStr(BankAccountTable));
        #    args.lookupField(fieldNum(BankAccountTable, AccountID));
        #    args.lookupValue(_accountId);
        #
        #    formRun = classfactory.formRunClass(args);
        #    formRun.init();
        #    formRun.run();
        #    formRun.detach();
        #}
        #
      ENDSOURCE
      SOURCE #lookupBankAccount
        #public client static void lookupBankAccount(
        #    FormControl         _formControl,
        #    CompanyId           _companyId = curext())
        #{
        #    FormSegmentedEntryControl formSegmentedEntryControl;
        #    FormStringControl   formStringControl;
        #    Args        args;
        #    CompanyId   companyId;
        #    FormRun     formRun;
        #    ;
        #
        #    // The following block is needed for the case that intercompany transactions is disabled and someone passes
        #    // in an empty string. Ideally one would remove the "curext()" defaulting from the paramter list, but this
        #    // code was added as part of a bug fix, and did not have the scope or need of changing the interface.
        #    if (!_companyId)
        #    {
        #        companyId = curext();
        #    }
        #    else
        #    {
        #        companyId = _companyId;
        #        if (! xDataArea::exist(companyId))
        #        {
        #            throw error(strFmt("@SYS10666", companyId));
        #        }
        #    }
        #
        #    changecompany(companyId)
        #    {
        #        args = new Args();
        #        args.name(formStr(BankAccountTableLookup));
        #        args.caller(_formControl);
        #        args.lookupField(fieldNum(BankAccountTableLookup, AccountID));
        #        if (_formControl is FormStringControl)
        #        {
        #            formStringControl = _formControl as FormStringControl;
        #            args.lookupValue(formStringControl.text());
        #        }
        #        else if (_formControl is FormSegmentedEntryControl)
        #        {
        #            formSegmentedEntryControl = _formControl as FormSegmentedEntryControl;
        #            args.lookupValue(formSegmentedEntryControl.valueStr());
        #        }
        #        else
        #        {
        #            throw error(Error::wrongUseOfFunction(funcName()));
        #        }
        #        formRun = classfactory.formRunClass(args);
        #        formRun.init();
        #        if (_formControl is FormStringControl)
        #        {
        #            formStringControl = _formControl as FormStringControl;
        #            formStringControl.performFormLookup(formRun);
        #        }
        #        else if (_formControl is FormSegmentedEntryControl)
        #        {
        #            formSegmentedEntryControl = _formControl as FormSegmentedEntryControl;
        #            formSegmentedEntryControl.performFormLookup(formRun);
        #        }
        #        else
        #        {
        #            throw error(Error::wrongUseOfFunction(funcName()));
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #lookupBankReconEnabledBankAccount
        #/// <summary>
        #/// Looks up the bank account that is enabled for an advanced bank reconciliation.
        #/// </summary>
        #/// <param name="_formControl">
        #/// A look up control.
        #/// </param>
        #/// <param name="_filterStr">
        #/// A filter string.
        #/// </param>
        #public client static void lookupBankReconEnabledBankAccount(
        #    FormControl         _formControl,
        #    str                 _filterStr)
        #{
        #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(BankAccountTable), _formControl);
        #    Query                   query = new Query();
        #    QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(BankAccountTable));
        #    QueryBuildRange         queryBuildRange = queryBuildDataSource.addRange(fieldNum(BankAccountTable, BankReconciliationEnabled));
        #
        #    sysTableLookup.addLookupfield(fieldNum(BankAccountTable, AccountID));
        #    sysTableLookup.addLookupfield(fieldNum(BankAccountTable, Name));
        #
        #    queryBuildRange.value(queryValue(NoYes::Yes));
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
      ENDSOURCE
      SOURCE #lookupGiroBank_W
        #public static void lookupGiroBank_W(FormStringControl _ctrl, CurrencyCode _currencyCode)
        #{
        #    SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(BankAccountTable), _ctrl);
        #    Query query = new Query();
        #    QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(BankAccountTable));
        #
        #    sysTableLookup.addLookupfield(fieldNum(BankAccountTable, AccountID));
        #    sysTableLookup.addLookupfield(fieldNum(BankAccountTable, Name));
        #
        #    queryBuildDataSource.addRange(fieldNum(BankAccountTable, CurrencyCode)).value(queryValue(_currencyCode));
        #
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
      ENDSOURCE
      SOURCE #name
        #public static Name name(CompanyBankAccountId _companyBankAccountId)
        #{
        #    Name    name;
        #
        #    if (_companyBankAccountId)
        #    {
        #        name = (select bankAccountTable
        #                    index hint AccountIdx
        #                    where bankAccountTable.AccountID == _companyBankAccountId).Name;
        #    }
        #
        #    return name;
        #}
      ENDSOURCE
      SOURCE #regNum
        #public static BankRegNum regNum(CompanyBankAccountId _companyBankAccountId)
        #{
        #    BankRegNum  bankRegNum;
        #
        #    if (_companyBankAccountId)
        #    {
        #        bankRegNum = (select bankAccountTable
        #                        index hint AccountIdx
        #                        where bankAccountTable.AccountID == _companyBankAccountId).RegistrationNum;
        #    }
        #
        #    return bankRegNum;
        #}
      ENDSOURCE
      SOURCE #remainRemittanceAmountMST
        #server public static AmountMST remainRemittanceAmountMST(CompanyBankAccountId _bankAccountId)
        #{
        #    AmountMST               remainAmountMST = BankAccountTable::find(_bankAccountId).DiscCreditMaxMST;
        #    CustPaymManTrans        custPaymManTransFieldList;
        #    CustTrans               custTransFieldList;
        #    ;
        #    if (!remainAmountMST)
        #    {
        #        remainAmountMST = maxInt();
        #    }
        #
        #    while select RecId, AmountMST from custTransFieldList
        #    join Batch from custPaymManTransFieldList
        #        where custPaymManTransFieldList.CompanyBankAccountId == _bankAccountId  &&
        #              custPaymManTransFieldList.RefRecId             == custTransFieldList.RecId
        #    {
        #        if (!custPaymManTransFieldList.Batch)
        #        {
        #            if ((select firstonly RecId from custPaymManTransHist
        #                    where custPaymManTransHist.CompanyBankAccountId == _bankAccountId
        #                       && custPaymManTransHist.RefRecId             == custTransFieldList.RecId
        #                       && custPaymManTransHist.Batch).RecId)
        #            {
        #                remainAmountMST += custTransFieldList.AmountMST;
        #            }
        #        }
        #        else
        #        {
        #            remainAmountMST += custTransFieldList.AmountMST;
        #        }
        #    }
        #    return remainAmountMST;
        #}
      ENDSOURCE
      SOURCE #remittedCurrent
        #server static public AmountMST remittedCurrent(CompanyBankAccountId  _bankAccountNum)
        #{
        #    LedgerJournalTrans      ledgerJournalTransFieldList;
        #    LedgerJournalTable      ledgerJournalTable;
        #    AmountMST               amountMST;
        #
        #    while select AmountCurDebit, AmountCurCredit, CurrencyCode, TransDate, Triangulation,
        #                 ExchRate, ExchRateSecond, Company from ledgerJournalTransFieldList
        #        where ledgerJournalTransFieldList.BankRemittanceType    == BankRemittanceType::Discount
        #           && ledgerJournalTransFieldList.AccountType           == LedgerJournalACType::Cust
        #           && ledgerJournalTransFieldList.BankAccountId         == _bankAccountNum
        #    exists join ledgerJournalTable
        #        where ledgerJournalTable.JournalNum     == ledgerJournalTransFieldList.JournalNum
        #           && ledgerJournalTable.JournalType    == LedgerJournalType::CustPaymRemittance &&
        #              ledgerJournalTable.Posted         == NoYes::No
        #    {
        #        amountMST -= ledgerJournalTransFieldList.calcAmountMST();
        #    }
        #    return amountMST;
        #}
      ENDSOURCE
      SOURCE #txtNotExist
        #client server public static TxtNotExist txtNotExist()
        #{
        #    return "@SYS9779";
        #}
      ENDSOURCE
      SOURCE #updateExistingBankDocForPaymentSent
        #/// <summary>
        #/// Populats or removes the bank documents of existing payment in sent status.
        #/// </summary>
        #/// <param name="_accountId">
        #/// The bank account id.
        #/// </param>
        #/// <param name="_enabled">
        #/// A boolean value indicating whether the function of bank statement used as payment confirmation is enabled.
        #/// </param>
        #private server static void updateExistingBankDocForPaymentSent(CompanyBankAccountId _accountId, BankReconciliationStmtAsPaymConfirm _enabled)
        #{
        #    LedgerJournalTrans      ledgerJournalTrans;
        #    SysOperationProgress    progress;
        #
        #    #Macrolib.AviFiles
        #    #define.TotalTypes(1)
        #    //Generating bank document for %1...%2
        #    #define.GeneratingText("@GLS221780")
        #    //Removing bank document for %1...%2
        #    #define.RemovingText("@SYS4081497")
        #
        #    if (_enabled)
        #    {
        #        progress = SysOperationProgress::newGeneral(#AviUpdate, "@GLS221675", #TotalTypes);
        #    }
        #    else
        #    {
        #        progress = SysOperationProgress::newGeneral(#AviUpdate, "@SYS4081496", #TotalTypes);
        #    }
        #
        #    progress.incCount();
        #    ledgerJournalTrans = BankAccountTable::findBankDocumentOfPaymentSent(_accountId);
        #
        #    ttsBegin;
        #
        #    while (ledgerJournalTrans)
        #    {
        #        if (_enabled)
        #        {
        #            ledgerJournalTrans.calculateBankCurrencyAmount();
        #            ledgerJournalTrans.update();
        #            if (ledgerJournalTrans.AccountType              == LedgerJournalACType::Vend
        #                ||  ledgerJournalTrans.OffsetAccountType    == LedgerJournalACType::Vend)
        #            {
        #                progress.setText(strFmt(#GeneratingText, enum2str(BankDocumentBookType::VendPayment), ledgerJournalTrans.DocumentNum));
        #            }
        #            else
        #            {
        #                progress.setText(strFmt(#GeneratingText, enum2str(BankDocumentBookType::CustPayment), ledgerJournalTrans.DocumentNum));
        #            }
        #            BankDocumentProcessor::submitBankDocumentTable(ledgerJournalTrans);
        #        }
        #        else
        #        {
        #            ledgerJournalTrans.clearBankCurrencyAmount();
        #            ledgerJournalTrans.update();
        #            if (ledgerJournalTrans.AccountType              == LedgerJournalACType::Vend
        #                ||  ledgerJournalTrans.OffsetAccountType    == LedgerJournalACType::Vend)
        #            {
        #                progress.setText(strFmt(#RemovingText, enum2str(BankDocumentBookType::VendPayment), ledgerJournalTrans.DocumentNum));
        #            }
        #            else
        #            {
        #                progress.setText(strFmt(#RemovingText, enum2str(BankDocumentBookType::CustPayment), ledgerJournalTrans.DocumentNum));
        #            }
        #            BankDocumentProcessor::deleteBankDocument(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
        #        }
        #
        #        next ledgerJournalTrans;
        #    }
        #
        #    ttsCommit;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : VendBankAccount unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #VendBankAccount
    EnforceFKRelation 0
    PROPERTIES
      Name                #VendBankAccount
      Label               #@SYS24216
      FormRef             #VendBankAccounts
      TitleField1         #AccountID
      TitleField2         #Name
      ConfigurationKey    #LedgerBasic
      SecurityKey         #VendTables
      AOSAuthorization    #CreateReadUpdateDelete
      CacheLookup         #Found
      TableGroup          #Main
      PrimaryIndex        #AccountIdx
      ClusterIndex        #AccountIdx
      ModifiedDateTime    #Yes
      ModifiedBy          #Yes
      CreatedDateTime     #Yes
      CreatedBy           #Yes
      DeveloperDocumentation  #@SYS127241
      Origin              #{2C0F01E9-0000-1000-31C4-08489DEB8934}
      LegacyId            #489
    ENDPROPERTIES
    
    FIELDS
      FIELD #AccountID
        STRING
        PROPERTIES
          Name                #AccountID
          Mandatory           #Yes
          AllowEdit           #No
          Table               #VendBankAccount
          Origin              #{65FCD388-375B-41F9-9330-9499BBC78B5E}
          LegacyId            #1
          ExtendedDataType    #VendBankAccountId
        ENDPROPERTIES
        
      FIELD #AccountNum
        STRING
        PROPERTIES
          Name                #AccountNum
          AOSAuthorization    #Yes
          Table               #VendBankAccount
          Origin              #{C14DDCF4-37D8-45D9-A537-7CD372EF452F}
          LegacyId            #8
          ExtendedDataType    #BankAccount
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #ActiveDate
        DATETIME
        PROPERTIES
          Name                #ActiveDate
          Table               #VendBankAccount
          Origin              #{8C3449B9-F58E-4970-9DF4-82A4F3D5B545}
          LegacyId            #51
          ExtendedDataType    #VendBankAccountActiveDate
        ENDPROPERTIES
        
      FIELD #BankAccountNameKana_JP
        STRING
        PROPERTIES
          Name                #BankAccountNameKana_JP
          HelpText            #@GLS64280
          AOSAuthorization    #Yes
          Table               #VendBankAccount
          Origin              #{2A161F41-01E9-1000-D445-A155D88B03E3}
          LegacyId            #8001
          ExtendedDataType    #BankAccountNameKana_JP
          StringSize          #40
        ENDPROPERTIES
        
      FIELD #BankAccountType
        ENUM
        PROPERTIES
          Name                #BankAccountType
          Table               #VendBankAccount
          CountryRegionContextField     #Location
          Origin              #{2DB378C6-23B4-490B-A4FB-96980A737367}
          LegacyId            #9
          EnumType            #BankAccountType
        ENDPROPERTIES
        
      FIELD #BankCIN
        STRING
        PROPERTIES
          Name                #BankCIN
          Table               #VendBankAccount
          CountryRegionContextField     #Location
          Origin              #{DB85D4A7-3BED-4E22-BA5B-93961891A478}
          LegacyId            #2
          ExtendedDataType    #BankCIN
          StringSize          #1
        ENDPROPERTIES
        
      FIELD #BankCodeType
        ENUM
        PROPERTIES
          Name                #BankCodeType
          Table               #VendBankAccount
          Origin              #{E0D33A41-EB2A-40D4-981F-F000871DA4A2}
          LegacyId            #47
          EnumType            #BankCodeType
        ENDPROPERTIES
        
      FIELD #BankConstantSymbol
        INT64
        PROPERTIES
          Name                #BankConstantSymbol
          Label               #@GLS108021
          HelpText            #@GLS108074
          Table               #VendBankAccount
          CountryRegionCodes  #CZ
          Origin              #{3E1A0931-8501-4712-BDF1-8A3274E6C227}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #BankContractAccount
        STRING
        PROPERTIES
          Name                #BankContractAccount
          Table               #VendBankAccount
          Origin              #{D422B9D1-578D-4DAF-BD08-7A2D30C0387F}
          LegacyId            #42
          ExtendedDataType    #GiroContractAccount
          StringSize          #11
        ENDPROPERTIES
        
      FIELD #BankGroupID
        STRING
        PROPERTIES
          Name                #BankGroupID
          Table               #VendBankAccount
          Origin              #{442EE3E7-F4ED-445E-874E-BA891E847716}
          LegacyId            #35
          ExtendedDataType    #BankGroupId
        ENDPROPERTIES
        
      FIELD #BankIBAN
        STRING
        PROPERTIES
          Name                #BankIBAN
          AOSAuthorization    #Yes
          Table               #VendBankAccount
          Origin              #{472911FC-5D41-4287-9956-A506EFD935B8}
          LegacyId            #48
          ExtendedDataType    #BankIBAN
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #CellularPhone
        STRING
        PROPERTIES
          Name                #CellularPhone
          Table               #VendBankAccount
          Origin              #{325FA2BD-1BBA-46FC-83F9-B31AE415DFF6}
          LegacyId            #24
          ExtendedDataType    #PhoneMobile
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ContactPerson
        STRING
        PROPERTIES
          Name                #ContactPerson
          HelpText            #@SYS13368
          Table               #VendBankAccount
          Origin              #{FEFABC4C-8952-4A9F-862A-7DA001100D39}
          LegacyId            #18
          ExtendedDataType    #PersonName
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CorrAccount_W
        STRING
        PROPERTIES
          Name                #CorrAccount_W
          AOSAuthorization    #Yes
          Table               #VendBankAccount
          Origin              #{2A0D3E82-01E9-1000-9AE8-8D4003BC706F}
          LegacyId            #16002
          ExtendedDataType    #BankCorrAccount_W
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #CorrespBank_EE
        STRING
        PROPERTIES
          Name                #CorrespBank_EE
          Label               #@GLS108989
          HelpText            #@GLS108990
          GroupPrompt         #@SYS7439
          Table               #VendBankAccount
          CountryRegionCodes  #EE
          Origin              #{2A0E3E91-01E9-1000-7EDA-97E03F53054D}
          LegacyId            #16017
          ExtendedDataType    #BankGroupId
        ENDPROPERTIES
        
      FIELD #CorrespondentBankAccount_LT
        STRING
        PROPERTIES
          Name                #CorrespondentBankAccount_LT
          Table               #VendBankAccount
          Origin              #{2A1B1F4C-01E9-1000-2B83-66046F8D5C00}
          LegacyId            #8012
          ExtendedDataType    #LtCorrespondentBankAccount
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #CorrespondentBankAddress_LT
        STRING
        PROPERTIES
          Name                #CorrespondentBankAddress_LT
          Table               #VendBankAccount
          Origin              #{2A1B1F46-01E9-1000-2B83-8146E75272A6}
          LegacyId            #8006
          ExtendedDataType    #LtCorrespondentBankAddress
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #CorrespondentBankName_LT
        STRING
        PROPERTIES
          Name                #CorrespondentBankName_LT
          Table               #VendBankAccount
          Origin              #{2A181F45-01E9-1000-265B-A6E5DAB5686B}
          LegacyId            #8005
          ExtendedDataType    #LtCorrespondentBankName
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CorrespondentBankSWIFT_LT
        STRING
        PROPERTIES
          Name                #CorrespondentBankSWIFT_LT
          Table               #VendBankAccount
          Origin              #{2A191F47-01E9-1000-02B7-689314CBB678}
          LegacyId            #8007
          ExtendedDataType    #LtCorrespondentBankSWIFT
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          Table               #VendBankAccount
          Origin              #{E98EE866-06CB-4C16-8461-E1CE5EE658A2}
          LegacyId            #39
          ExtendedDataType    #CurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #DirDunsNumber
        INT64
        PROPERTIES
          Name                #DirDunsNumber
          ConfigurationKey    #PublicSector
          Table               #VendBankAccount
          Origin              #{BEE12BF5-ADC3-4455-9E21-C0842EEB0002}
          ExtendedDataType    #LogisticsDunsNumberRecId
        ENDPROPERTIES
        
      FIELD #Email
        STRING
        PROPERTIES
          Name                #Email
          Table               #VendBankAccount
          Origin              #{AC92EBA2-F827-40AC-915D-41843BD23F0C}
          LegacyId            #19
          ExtendedDataType    #Email
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #ExchRate
        REAL
        PROPERTIES
          Name                #ExchRate
          Table               #VendBankAccount
          Origin              #{B06CB484-1F6C-4661-AC73-2FD45430A54B}
          LegacyId            #33
          ExtendedDataType    #CrossExchRate
        ENDPROPERTIES
        
      FIELD #ExchRateRef
        STRING
        PROPERTIES
          Name                #ExchRateRef
          Table               #VendBankAccount
          Origin              #{9AA9FA66-D4CD-4659-9327-E3787D74419E}
          LegacyId            #34
          ExtendedDataType    #ExchRateRef
          StringSize          #11
        ENDPROPERTIES
        
      FIELD #ExpiryDate
        DATETIME
        PROPERTIES
          Name                #ExpiryDate
          Table               #VendBankAccount
          Origin              #{2538FFCA-6BB7-4F04-AD67-6052CDD8F97C}
          LegacyId            #50
          ExtendedDataType    #VendBankAccountExpiryDate
        ENDPROPERTIES
        
      FIELD #ForeignAccount_RU
        STRING
        PROPERTIES
          Name                #ForeignAccount_RU
          HelpText            #@GLS223928
          Table               #VendBankAccount
          CountryRegionCodes  #RU
          Origin              #{E9EAFBE0-283E-4724-9DC6-AD29FFB548C0}
          LegacyId            #8015
          ExtendedDataType    #BankAccount
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #ForeignBank_RU
        STRING
        PROPERTIES
          Name                #ForeignBank_RU
          HelpText            #@GLS223929
          Table               #VendBankAccount
          CountryRegionCodes  #RU
          IgnoreEDTRelation   #Yes
          RelationContext     #BankGroupForeign_RU
          Origin              #{F1B964B2-D83C-4F6E-95EA-66313B848DBD}
          LegacyId            #8014
          ExtendedDataType    #BankGroupId
        ENDPROPERTIES
        
      FIELD #ForeignSWIFT_RU
        STRING
        PROPERTIES
          Name                #ForeignSWIFT_RU
          Label               #@SYS9360
          Table               #VendBankAccount
          CountryRegionCodes  #RU
          Origin              #{0B5BFD15-3FDB-441D-9F3B-7800C0ACFCF2}
          LegacyId            #8016
          ExtendedDataType    #SWIFTNo
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #IntermAccount_EE
        STRING
        PROPERTIES
          Name                #IntermAccount_EE
          Label               #@GLS108995
          HelpText            #@GLS108996
          GroupPrompt         #@SYS1996
          Table               #VendBankAccount
          CountryRegionCodes  #EE
          Origin              #{2A103E94-01E9-1000-BA42-CFEF8D3B1D43}
          LegacyId            #16020
          ExtendedDataType    #BankAccount
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #IntermBank_EE
        STRING
        PROPERTIES
          Name                #IntermBank_EE
          Label               #@GLS108993
          HelpText            #@GLS108994
          GroupPrompt         #@SYS7439
          Table               #VendBankAccount
          CountryRegionCodes  #EE
          Origin              #{2A0D3E92-01E9-1000-E384-E23F52024D61}
          LegacyId            #16018
          ExtendedDataType    #BankGroupId
        ENDPROPERTIES
        
      FIELD #IntermBankAccountId
        STRING
        PROPERTIES
          Name                #IntermBankAccountId
          Label               #@GLS113304
          HelpText            #@GLS113305
          Table               #VendBankAccount
          CountryRegionCodes  #PL
          Origin              #{BE898650-D4E9-413E-81EB-61C4AE6FA066}
          ExtendedDataType    #VendBankAccountId
        ENDPROPERTIES
        
      FIELD #IntermediateBankAccount_LT
        STRING
        PROPERTIES
          Name                #IntermediateBankAccount_LT
          Table               #VendBankAccount
          Origin              #{2A1A1F4D-01E9-1000-3B8A-0CC44257F657}
          LegacyId            #8013
          ExtendedDataType    #LtIntermediateBankAccount
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #IntermediateBankAddress_LT
        STRING
        PROPERTIES
          Name                #IntermediateBankAddress_LT
          Table               #VendBankAccount
          Origin              #{2A1A1F49-01E9-1000-3BA5-4E3C086D9C31}
          LegacyId            #8009
          ExtendedDataType    #LtIntermediateBankAddress
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #IntermediateBankName_LT
        STRING
        PROPERTIES
          Name                #IntermediateBankName_LT
          Table               #VendBankAccount
          Origin              #{2A171F48-01E9-1000-96D8-ED2F6B63616A}
          LegacyId            #8008
          ExtendedDataType    #LtIntermediateBankName
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #IntermediateBankSWIFT_LT
        STRING
        PROPERTIES
          Name                #IntermediateBankSWIFT_LT
          Table               #VendBankAccount
          Origin              #{2A181F4A-01E9-1000-1D8E-9B6980B16E10}
          LegacyId            #8010
          ExtendedDataType    #LtIntermediateBankSWIFT
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Location
        INT64
        PROPERTIES
          Name                #Location
          Visible             #No
          Table               #VendBankAccount
          Origin              #{6D541426-1FEC-41B9-BF9D-66F6BAA1306F}
          LegacyId            #10
          ExtendedDataType    #LogisticsLocationRecId
        ENDPROPERTIES
        
      FIELD #LogisticsLocation
        INT64
        PROPERTIES
          Name                #LogisticsLocation
          Visible             #No
          ConfigurationKey    #PublicSector
          Table               #VendBankAccount
          Origin              #{2A113E9B-01E9-1000-07D2-DADADE904334}
          LegacyId            #16027
          ExtendedDataType    #LogisticsLocationRecId
        ENDPROPERTIES
        
      FIELD #LvDefaultBank
        ENUM
        PROPERTIES
          Name                #LvDefaultBank
          HelpText            #@GLS220785
          Table               #VendBankAccount
          Origin              #{2A0D0000-01E9-1000-8824-A6DA8BCA856C}
          LegacyId            #16016
          ExtendedDataType    #LVDefaultBank
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #MsgToBank
        STRING
        PROPERTIES
          Name                #MsgToBank
          Table               #VendBankAccount
          Origin              #{0DE28967-14F5-4AD9-B6E6-70740B25FA1A}
          LegacyId            #32
          ExtendedDataType    #BankMsgToBank
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #Name
        STRING
        PROPERTIES
          Name                #Name
          HelpText            #@SYS24871
          Table               #VendBankAccount
          Origin              #{760D77BA-C822-400E-A6C3-A07240B20DC5}
          LegacyId            #3
          ExtendedDataType    #Name
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #Pager
        STRING
        PROPERTIES
          Name                #Pager
          Table               #VendBankAccount
          Origin              #{A8A9F499-D9FE-492F-B8A4-68EEA5B1CE66}
          LegacyId            #43
          ExtendedDataType    #Pager
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Phone
        STRING
        PROPERTIES
          Name                #Phone
          HelpText            #@SYS24869
          Table               #VendBankAccount
          Origin              #{41B44E45-3978-48A0-BF78-F9A36E8AE266}
          LegacyId            #16
          ExtendedDataType    #Phone
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PhoneLocal
        STRING
        PROPERTIES
          Name                #PhoneLocal
          Table               #VendBankAccount
          Origin              #{95E942BE-BF69-4696-951C-D07C1CFDC6CD}
          LegacyId            #23
          ExtendedDataType    #PhoneLocal
        ENDPROPERTIES
        
      FIELD #RegistrationNum
        STRING
        PROPERTIES
          Name                #RegistrationNum
          Table               #VendBankAccount
          Origin              #{C60E3073-9BDB-4D34-AC9A-A743C01EC306}
          LegacyId            #15
          ExtendedDataType    #BankRegNum
          StringSize          #12
        ENDPROPERTIES
        
      FIELD #SMS
        STRING
        PROPERTIES
          Name                #SMS
          Table               #VendBankAccount
          Origin              #{4A51D078-2B50-4D05-B7D3-89664C325207}
          LegacyId            #44
          ExtendedDataType    #SMS
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #SpecificSymbol
        STRING
        PROPERTIES
          Name                #SpecificSymbol
          Table               #VendBankAccount
          CountryRegionCodes  #CZ
          Origin              #{E262E3BE-D811-431D-8757-0C44F13BD1CD}
          ExtendedDataType    #SpecificSymbol
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #SWIFTNo
        STRING
        PROPERTIES
          Name                #SWIFTNo
          Table               #VendBankAccount
          Origin              #{E8065630-6A7F-4723-8372-BABB40DEA5C7}
          LegacyId            #31
          ExtendedDataType    #SWIFTNo
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #TeleFax
        STRING
        PROPERTIES
          Name                #TeleFax
          HelpText            #@SYS24866
          Table               #VendBankAccount
          Origin              #{D9B53D89-3BE7-4D76-B62C-503F2D8651B0}
          LegacyId            #17
          ExtendedDataType    #TeleFax
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Telex
        STRING
        PROPERTIES
          Name                #Telex
          Table               #VendBankAccount
          Origin              #{03489AE2-1860-42FA-B13F-13E9602DE1F8}
          LegacyId            #22
          ExtendedDataType    #Telex
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #TransType_JP
        ENUM
        PROPERTIES
          Name                #TransType_JP
          Table               #VendBankAccount
          Origin              #{2A0C1F42-01E9-1000-FBE4-C13AB7607970}
          LegacyId            #8002
          EnumType            #VendBankTransType_JP
        ENDPROPERTIES
        
      FIELD #TypeOfAccount
        ENUM
        PROPERTIES
          Name                #TypeOfAccount
          Table               #VendBankAccount
          CountryRegionContextField     #Location
          Origin              #{69A915CD-4DDD-4549-BF94-DD15EDF2646A}
          LegacyId            #49
          EnumType            #TypeOfAccount
        ENDPROPERTIES
        
      FIELD #URL
        STRING
        PROPERTIES
          Name                #URL
          Table               #VendBankAccount
          Origin              #{9A565022-28EC-479A-9BCF-4A266DDA8444}
          LegacyId            #21
          ExtendedDataType    #URL
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #VendAccount
        STRING
        PROPERTIES
          Name                #VendAccount
          Mandatory           #Yes
          AllowEdit           #No
          Table               #VendBankAccount
          Origin              #{15224B5D-A158-4B54-92E9-FA4944ED8C36}
          LegacyId            #25
          ExtendedDataType    #VendAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #VendDuns4Number
        STRING
        PROPERTIES
          Name                #VendDuns4Number
          ConfigurationKey    #PublicSector
          Table               #VendBankAccount
          Origin              #{2A0F3E9A-01E9-1000-D290-B7CE5225F1EC}
          LegacyId            #16026
          ExtendedDataType    #VendDUNS4Num
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #VendPaymentTextCode
        STRING
        PROPERTIES
          Name                #VendPaymentTextCode
          Table               #VendBankAccount
          Origin              #{56C99618-EBD2-44FC-8BCA-5168B2973C83}
          LegacyId            #29
          ExtendedDataType    #VendPaymTextCode
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #AccountID
          #Name
          #AccountNum
          #TypeOfAccount
          #RegistrationNum
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoLookup
        PROPERTIES
          Name                #AutoLookup
        ENDPROPERTIES
        
        GROUPFIELDS
          #AccountID
          #AccountNum
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Administration
        PROPERTIES
          Name                #Administration
          Label               #@SYS9853
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankGroupID
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BankAccountDetails
        PROPERTIES
          Name                #BankAccountDetails
          Label               #@GLS60009
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransType_JP
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BankConstantSymbol
        PROPERTIES
          Name                #BankConstantSymbol
          Label               #@GLS107997
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankConstantSymbol
          #SpecificSymbol
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ContactInfo
        PROPERTIES
          Name                #ContactInfo
          Label               #@SYS21663
        ENDPROPERTIES
        
        GROUPFIELDS
          #Phone
          #PhoneLocal
          #CellularPhone
          #Pager
          #TeleFax
          #Email
          #SMS
          #URL
          #Telex
          #ContactPerson
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CorrespondenceBank_EE
        PROPERTIES
          Name                #CorrespondenceBank_EE
          Label               #@GLS108989
        ENDPROPERTIES
        
        GROUPFIELDS
          #CorrespBank_EE
          #CorrAccount_W
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CorrespondentBank_LT
        PROPERTIES
          Name                #CorrespondentBank_LT
          Label               #@GLS113356
        ENDPROPERTIES
        
        GROUPFIELDS
          #CorrespondentBankName_LT
          #CorrespondentBankAddress_LT
          #CorrespondentBankSWIFT_LT
          #CorrespondentBankAccount_LT
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Currency
        PROPERTIES
          Name                #Currency
          Label               #@SYS7572
        ENDPROPERTIES
        
        GROUPFIELDS
          #CurrencyCode
          #LvDefaultBank
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Description
        PROPERTIES
          Name                #Description
          Label               #@SYS7576
        ENDPROPERTIES
        
        GROUPFIELDS
          #Name
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Dummy
        PROPERTIES
          Name                #Dummy
          Label               #@SYS79159
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankAccountNameKana_JP
          #TransType_JP
          #DirDunsNumber
          #VendDuns4Number
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ForeignBank_RU
        PROPERTIES
          Name                #ForeignBank_RU
          Label               #@GLS223927
        ENDPROPERTIES
        
        GROUPFIELDS
          #ForeignBank_RU
          #foreignBankName_RU
          #ForeignAccount_RU
          #ForeignSWIFT_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #AccountID
          #Name
          #BankAccountNameKana_JP
          #BankGroupID
          #bankName_RU
          #bankBIC_RU
          #VendAccount
          #BankCodeType
          #DirDunsNumber
          #VendDuns4Number
          #RegistrationNum
          #AccountNum
          #BankCIN
          #TypeOfAccount
          #SWIFTNo
          #BankIBAN
          #BankAccountType
          #CorrAccount_W
          #bankAccountOpenedIn_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterimBank_EE
        PROPERTIES
          Name                #InterimBank_EE
          Label               #@GLS108993
        ENDPROPERTIES
        
        GROUPFIELDS
          #IntermBank_EE
          #IntermAccount_EE
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #IntermediaryBank
        PROPERTIES
          Name                #IntermediaryBank
          Label               #@GLS223733
        ENDPROPERTIES
        
        GROUPFIELDS
          #IntermBankAccountId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #IntermediateBank_LT
        PROPERTIES
          Name                #IntermediateBank_LT
          Label               #@GLS113357
        ENDPROPERTIES
        
        GROUPFIELDS
          #IntermediateBankName_LT
          #IntermediateBankAddress_LT
          #IntermediateBankSWIFT_LT
          #IntermediateBankAccount_LT
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Overview
        PROPERTIES
          Name                #Overview
          Label               #@SYS9039
        ENDPROPERTIES
        
        GROUPFIELDS
          #currentBankAccountStatus
          #AccountID
          #Name
          #BankGroupID
          #RegistrationNum
          #AccountNum
          #BankCIN
          #bankBIC_RU
          #CorrAccount_W
          #bankAccountOpenedIn_RU
          #TypeOfAccount
          #BankContractAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Payment
        PROPERTIES
          Name                #Payment
          Label               #@SYS828
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendPaymentTextCode
          #MsgToBank
          #ExchRateRef
          #ExchRate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PaymentShow
        PROPERTIES
          Name                #PaymentShow
          Label               #@SYS828
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendPaymentTextCode
          #MsgToBank
          #ExchRateRef
          #editExchRate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Status
        PROPERTIES
          Name                #Status
          Label               #@SYS115073
        ENDPROPERTIES
        
        GROUPFIELDS
          #ActiveDate
          #ExpiryDate
          #currentBankAccountStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendProfileBankInformation
        PROPERTIES
          Name                #VendProfileBankInformation
          Label               #@SYS315075
        ENDPROPERTIES
        
        GROUPFIELDS
          #AccountID
          #Name
          #BankCodeType
          #RegistrationNum
          #AccountNum
          #ActiveDate
          #ExpiryDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendProfileBankInformationDetails
        PROPERTIES
          Name                #VendProfileBankInformationDetails
          Label               #@SYS315076
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankCIN
          #TypeOfAccount
          #SWIFTNo
          #BankIBAN
          #BankAccountType
          #ContactPerson
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendProfileBankList
        PROPERTIES
          Name                #VendProfileBankList
          Label               #@SYS315077
        ENDPROPERTIES
        
        GROUPFIELDS
          #Name
          #AccountNum
          #RegistrationNum
          #ActiveDate
          #ExpiryDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendProfileContactInfo
        PROPERTIES
          Name                #VendProfileContactInfo
          Label               #@SYS21663
        ENDPROPERTIES
        
        GROUPFIELDS
          #Phone
          #PhoneLocal
          #CellularPhone
          #Pager
          #TeleFax
          #Email
          #SMS
          #URL
          #Telex
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #AccountIdx
      PROPERTIES
        Name                #AccountIdx
        AllowDuplicates     #No
        Origin              #{2B0A0001-01E9-1000-CD51-C781756E7449}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #VendAccount
        #AccountID
      ENDINDEXFIELDS
      
      #RecIdIdx
      PROPERTIES
        Name                #RecIdIdx
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{BBF5D0A0-3C16-4122-9BA4-3E85DA754D87}
        LegacyId            #2
      ENDPROPERTIES
      
      INDEXFIELDS
        #RecId
      ENDINDEXFIELDS
      
      #DirDunsNumberIdx
      PROPERTIES
        Name                #DirDunsNumberIdx
        Origin              #{62CAC15B-F986-4589-8758-1DA9A11CFEC0}
      ENDPROPERTIES
      
      INDEXFIELDS
        #DirDunsNumber
      ENDINDEXFIELDS
      
      #BankConstantSymbolIdx
      PROPERTIES
        Name                #BankConstantSymbolIdx
        Origin              #{C573AC37-9292-4B06-B9D0-2221417AFBE5}
      ENDPROPERTIES
      
      INDEXFIELDS
        #BankConstantSymbol
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #BankConstantSymbol
        PROPERTIES
          Name                #BankConstantSymbol
          Table               #BankConstantSymbol
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankConstantSymbol
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankGroup
        PROPERTIES
          Name                #BankGroup
          Table               #BankGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #BankGroup
          Role                #VendBankAccount
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankGroupID
            RelatedField        #BankGroupId
            SourceEDT           #BankGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankGroup_RU
        PROPERTIES
          Name                #BankGroup_RU
          Table               #BankGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #BankGroup_RU
          Role                #VendBankAccount
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #BankGroupID
            RelatedField        #BankGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankGroupForeign_RU
        PROPERTIES
          Name                #BankGroupForeign_RU
          Table               #BankGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #BankGroupForeign_RU
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #BankGroup
            RelatedField        #BankType_RU
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ForeignBank_RU
            RelatedField        #BankGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CorrespBank_EE
        PROPERTIES
          Name                #CorrespBank_EE
          Table               #BankGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CorrespBank_EE
          Role                #VendBankAccount
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CorrespBank_EE
            RelatedField        #BankGroupId
            SourceEDT           #BankGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Currency
          Role                #VendBankAccount
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
            SourceEDT           #CurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DirDunsNumber
        PROPERTIES
          Name                #DirDunsNumber
          Table               #DirDunsNumber
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #DirDunsNumber
          Role                #DirDunsNumber_VendBankAccount
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DirDunsNumber
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntermBank_EE
        PROPERTIES
          Name                #IntermBank_EE
          Table               #BankGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InterimBank_EE
          Role                #VendBankAccount
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #IntermBank_EE
            RelatedField        #BankGroupId
            SourceEDT           #BankGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntermBankAccountId
        PROPERTIES
          Name                #IntermBankAccountId
          Table               #VendBankAccount
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #IntermBankAccountId
          Role                #IntermBankAccountId
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #IntermBankAccountId
            RelatedField        #AccountID
            SourceEDT           #VendBankAccountId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Location_FK
        PROPERTIES
          Name                #Location_FK
          Table               #LogisticsLocation
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsLocation
          Role                #LogisticsLocation_VendBankAccount
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Location
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LogisticsLocation
        PROPERTIES
          Name                #LogisticsLocation
          Table               #LogisticsLocation
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsLocationFK
          Role                #LogisticsLocation_VendBankAccount
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #LogisticsLocation
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendBankAccount
        PROPERTIES
          Name                #VendBankAccount
          Table               #VendBankAccount
          Validate            #No
          EntityRelationshipRole  #@SYS123434
          RelationshipType    #Link
          RelatedTableRole    #VendBankAccount
          Role                #VendBankAccount_VendBankAccount
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #VendAccount
            RelatedField        #VendAccount
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountID
            RelatedField        #AccountID
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTable
        PROPERTIES
          Name                #VendTable
          Table               #VendTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Composition
          RelatedTableRole    #VendTable
          Role                #VendBankAccount
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendAccount
            RelatedField        #AccountNum
            SourceEDT           #VendAccount
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #account_BR
        #// <GBR>
        #//BP Deviation Documented
        #display BankAccountNum_BR account_BR()
        #{
        #    return Bank_BR::parseAccount(this.AccountNum);
        #}
        #// </GBR>
        #
      ENDSOURCE
      SOURCE #addressing
        #//BP deviation documented
        #display LogisticsAddressing addressing()
        #{
        #    ;
        #    return LogisticsLocationEntity::location2PostalAddress(this.Location).Address;
        #}
      ENDSOURCE
      SOURCE #agency_BR
        #// <GBR>
        #//BP Deviation Documented
        #display BankAgency_BR agency_BR()
        #{
        #    return Bank_BR::parseAgency(this.AccountNum);
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #bankAccountOpenedIn_RU
        #//BP deviation documented
        #public display BankAccountOpenedIn_RU bankAccountOpenedIn_RU()
        #{
        #    return this.BankAccountMap::bankAccountOpenedIn_RU();
        #}
      ENDSOURCE
      SOURCE #bankAccountStatus
        #/// <summary>
        #///    Returns the status of the vendor bank account.
        #/// </summary>
        #/// <param name="_transDate">
        #///    The date on which the payment transaction has to be made, or the current UTC date.
        #/// </param>
        #/// <returns>
        #///    The status of vendor bank account.
        #/// </returns>
        #/// <remarks>
        #///    This is a utility method that is used to get the status of vendor bank account based on <paramref
        #///    name="_transDate" /> parameter.
        #/// </remarks>
        #
        #
        #public BankAccountStatus bankAccountStatus(utcdatetime _transDate)
        #{
        #    BankAccountStatus bankAccountStatus;
        #    ;
        #    if(this.ExpiryDate == Global::utcDateTimeNull() || this.ExpiryDate > _transDate)
        #    {
        #        bankAccountStatus = BankAccountStatus::Active;
        #    }
        #    else
        #    {
        #        bankAccountStatus =  BankAccountStatus::Inactive;
        #    }
        #    return bankAccountStatus;
        #}
      ENDSOURCE
      SOURCE #bankAccountValidation
        #Bank bankAccountValidation()
        #{
        #    return this.BankAccountMap::bankAccountValidation();
        #}
      ENDSOURCE
      SOURCE #bankBIC_RU
        #//BP deviation documented
        #public display BankBIC_RU bankBIC_RU()
        #{
        #    return this.BankAccountMap::bankBIC_RU();
        #}
      ENDSOURCE
      SOURCE #bankcode_BR
        #// <GBR>
        #//BP Deviation Documented
        #display BankCode_BR bankcode_BR()
        #{
        #    return Bank_BR::parseBankCode(this.AccountNum);
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #bankIsBranch_RU
        #public boolean bankIsBranch_RU()
        #{
        #    return this.BankAccountMap::bankIsBranch_RU();
        #}
      ENDSOURCE
      SOURCE #bankName_RU
        #//BP deviation documented
        #public display BankName_RU bankName_RU()
        #{
        #    return this.BankAccountMap::bankName_RU();
        #}
      ENDSOURCE
      SOURCE #bankShortAddressing_RU
        #public BankShortAddressing_RU bankShortAddressing_RU()
        #{
        #    return this.BankAccountMap::bankShortAddressing_RU();
        #}
      ENDSOURCE
      SOURCE #baseBankName_RU
        #public Description baseBankName_RU()
        #{
        #    return this.BankAccountMap::baseBankName_RU();
        #}
      ENDSOURCE
      SOURCE #baseBankShortAddressing_RU
        #public BankShortAddressing_RU baseBankShortAddressing_RU()
        #{
        #    return this.BankAccountMap::baseBankShortAddressing_RU();
        #}
      ENDSOURCE
      SOURCE #checkDefault_LV
        #server private boolean checkDefault_LV()
        #{
        #    VendBankAccount vendBankAccount;
        #
        #    if(this.LvDefaultBank)
        #    {
        #        select firstonly RecId from vendBankAccount
        #            where vendBankAccount.VendAccount == this.VendAccount &&
        #                  vendBankAccount.CurrencyCode == this.CurrencyCode &&
        #                  vendBankAccount.LvDefaultBank == NoYes::Yes &&
        #                  vendBankAccount.RecId != this.RecId;
        #    }
        #
        #    return vendBankAccount.RecId ? checkFailed("@GLS108523") : true;
        #}
      ENDSOURCE
      SOURCE #checkDunsValueExists
        #/// <summary>
        #/// Checks whether the unique combination of the record ID in the <c>LogisticLocation</c> table and
        #/// Duns4 number exists other than in current record.
        #/// </summary>
        #/// <param name="_logisticLocationRecId">
        #/// The record ID of the <c>LogisticLocation</c> table.
        #/// </param>
        #/// <param name="_duns4Number">
        #/// The variable that contains the value for the Duns4 number.
        #/// </param>
        #/// <returns>
        #/// true if the combination of the record ID of the <c>LogisticLocation</c> table and Duns4 number
        #/// exist other than the current record; otherwise, false.
        #/// </returns>
        #private boolean checkDunsValueExists(RefRecId _logisticLocationRecId, VendDUNS4Num _duns4Number)
        #{
        #    boolean ok = false;
        #    VendBankAccount vendBankAccount;
        #
        #    if (_logisticLocationRecId)
        #    {
        #        select RecId from vendBankAccount
        #            where vendBankAccount.VendDuns4Number == _duns4Number
        #               && vendBankAccount.LogisticsLocation == _logisticLocationRecId
        #               && vendBankAccount.RecId != this.RecId ;
        #
        #        if (vendBankAccount.RecId)
        #        {
        #            ok = true;
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #countryIsoCode
        #LogisticsAddressCountryRegionISOCode countryIsoCode()
        #{
        #    ;
        #    return LogisticsAddressCountryRegion::find(LogisticsLocationEntity::location2PostalAddress(this.Location).CountryRegionId).isOcode;
        #}
      ENDSOURCE
      SOURCE #countryRegionId
        #/// <summary>
        #/// Retrieves the <c>CountryRegionId</c> value from the <c>logisticsPostalAddress</c> table.
        #/// </summary>
        #/// <returns>
        #/// The <c>CountryRegionId</c> value from the <c>logisticsPostalAddress</c> table.
        #/// </returns>
        #LogisticsAddressCountryRegionId countryRegionId()
        #{
        #    return LogisticsLocationEntity::location2PostalAddress(this.Location).CountryRegionId;
        #}
      ENDSOURCE
      SOURCE #currentBankAccountStatus
        #/// <summary>
        #///    Returns the current status of the bank account based on the current <c>utcdatetime</c> data type.
        #/// </summary>
        #/// <returns>
        #///    The string equivalent of the <c>BankAccountStatus</c> enumeration value.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display VendBankAccountStatus currentBankAccountStatus()
        #{
        #    return enum2str(this.bankAccountStatus(DateTimeUtil::utcNow()));
        #}
      ENDSOURCE
      SOURCE #dac_br
        #// </GBR>
        #//BP Deviation Documented
        #display BankDAC_BR dac_br()
        #{
        #    return Bank_BR::parseDAC(this.AccountNum);
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #editExchRate
        #//BP Deviation Documented
        #public edit CrossExchRate editExchRate(boolean set, CrossExchRate _exchRate)
        #{
        #    if (set)
        #    {
        #        this.ExchRate = ExchangeRateHelper::prepareExchangeRateForStorage_Static(_exchRate, ExchangeRateDisplayFactor::One);
        #    }
        #    else
        #    {
        #        _exchRate = ExchangeRateHelper::displayStoredExchangeRate_Static(this.ExchRate, ExchangeRateDisplayFactor::One);
        #    }
        #
        #    return _exchRate;
        #}
      ENDSOURCE
      SOURCE #existOpenTransactions
        #/// <summary>
        #/// Checks for the existence of open transactions based on the bank account active date or the expiry
        #/// date.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The ID of <c>datetime</c> field that specifies either the bank account active date or the expiry
        #/// date.
        #/// </param>
        #/// <returns>
        #/// true if open transactions exist for the bank account; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// This method is called by <c>validateField</c> method to check whether open transactions exist for
        #/// the selected vendor bank account whenever the bank account active date or expiration date is
        #/// modified.
        #/// </remarks>
        #boolean existOpenTransactions(FieldId _fieldId)
        #{
        #    boolean ret = false;
        #    VendTrans vendTrans;
        #    VendPaymModeTable vendPaymMode;
        #    boolean retOpenTrans = false;
        #    VendTransOpen vendTransOpen;
        #    ;
        #
        #    switch(_fieldId)
        #    {
        #        case (fieldNum(VendBankAccount, ActiveDate)) :
        #                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #                {
        #                    select firstonly RecId from vendTrans
        #                    exists join vendPaymMode
        #                        where vendPaymMode.PaymMode == vendTrans.PaymMode
        #                           && vendPaymMode.PaymentType == PaymentType::ElectronicPayment
        #                           && vendTrans.AccountNum == this.VendAccount
        #                           && vendTrans.AmountCur != vendTrans.SettleAmountCur
        #                           && vendTrans.TransDate < DateTimeUtil::date(this.ActiveDate)
        #                           && vendTrans.ThirdPartyBankAccountId == this.AccountID
        #                           && vendTrans.TransType == LedgerTransType::Payment;
        #                }
        #                else
        #                {
        #                    select firstonly RecId from vendTrans exists join vendPaymMode
        #                    where  vendPaymMode.PaymMode == vendTrans.PaymMode
        #                    && vendPaymMode.PaymentType == PaymentType::ElectronicPayment
        #                    && vendTrans.AccountNum == this.VendAccount
        #                    && vendTrans.AmountCur != vendTrans.SettleAmountCur
        #                    && vendTrans.TransDate < DateTimeUtil::date(this.ActiveDate)
        #                    && vendTrans.ThirdPartyBankAccountId == this.AccountID;
        #                }
        #
        #                if(vendTrans.RecId)
        #                {
        #                    ret = true;
        #                }
        #
        #                select firstonly RecId from vendTrans
        #                    where vendTrans.TransDate < DateTimeUtil::date(this.ActiveDate)
        #                join RefRecId from vendTransOpen
        #                    where vendTransOpen.RefRecId == vendTrans.RecId
        #                       && vendTransOpen.ThirdPartyBankAccountId == this.AccountID
        #                join PaymMode from vendPaymMode
        #                    where vendPaymMode.PaymMode == vendTrans.PaymMode
        #                       && vendPaymMode.PaymentType == PaymentType::ElectronicPayment
        #                       && vendTrans.AccountNum == this.VendAccount
        #                       && vendTrans.AmountCur != vendTrans.SettleAmountCur;
        #
        #                if (vendTrans.RecId)
        #                {
        #                    retOpenTrans = true;
        #                }
        #
        #                ret = ret || retOpenTrans;
        #        break;
        #        case (fieldNum(VendBankAccount, ExpiryDate)) :
        #                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #                {
        #                    select firstonly RecId from vendTrans
        #                        where vendTrans.AccountNum == this.VendAccount
        #                           && vendTrans.AmountCur != vendTrans.SettleAmountCur
        #                           && vendTrans.TransDate >= DateTimeUtil::date(this.ExpiryDate)
        #                           && vendTrans.ThirdPartyBankAccountId == this.AccountID
        #                           && vendTrans.TransType == LedgerTransType::Payment;
        #                }
        #                else
        #                {
        #                    select firstonly RecId from vendTrans
        #                    where vendTrans.AccountNum == this.VendAccount &&
        #                    vendTrans.AmountCur != vendTrans.SettleAmountCur &&
        #                    vendTrans.TransDate >= DateTimeUtil::date(this.ExpiryDate) &&
        #                    vendTrans.ThirdPartyBankAccountId == this.AccountID;
        #                }
        #
        #                if(vendTrans.RecId)
        #                {
        #                    ret = true;
        #                }
        #
        #                select firstonly RecId from vendTrans
        #                    where vendTrans.AccountNum == this.VendAccount
        #                       && vendTrans.AmountCur != vendTrans.SettleAmountCur
        #                       && vendTrans.TransDate >= DateTimeUtil::date(this.ExpiryDate)
        #                join RefRecId from vendTransOpen
        #                    where vendTransOpen.RefRecId == vendTrans.RecId
        #                       && vendTransOpen.ThirdPartyBankAccountId == this.AccountID;
        #
        #                if (vendTrans.RecId)
        #                {
        #                    retOpenTrans = true;
        #                }
        #
        #                ret = ret || retOpenTrans;
        #         break;
        #
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #foreignBankName_RU
        #/// <summary>
        #/// Gets name of foreign bank assotiated with current bank account.
        #/// </summary>
        #/// <returns>
        #/// Name of the foreign bank.
        #/// </returns>
        #
        #//BP deviation documented
        #public display BankName_RU foreignBankName_RU()
        #{
        #    return this.BankAccountMap::foreignBankName_RU();
        #}
      ENDSOURCE
      SOURCE #hasDocuments
        #/// <summary>
        #/// Gets a value that indicates whether there is at least one document attached to the vendor bank
        #/// account record.
        #/// </summary>
        #/// <returns>
        #/// true if the vendor bank account has documents; otherwise, false.
        #/// </returns>
        #//BP Deviation documented
        #display VendProfileHasDocuments hasDocuments()
        #{
        #    boolean     bankHasDocuments = false;
        #
        #    bankHasDocuments = DocuRef::exist(this.DataAreaId, this.TableId, this.RecId);
        #
        #    return bankHasDocuments;
        #}
      ENDSOURCE
      SOURCE #initFromBankGroup
        #void initFromBankGroup(BankGroup _bankGroup)
        #{
        #    ;
        #    this.BankAccountMap::initFromBankGroup(_bankGroup);
        #}
      ENDSOURCE
      SOURCE #initValue
        #void initValue()
        #{
        #    // <GJP>
        #    #isoCountryRegionCodes
        #    // </GJP>
        #
        #    super();
        #
        #    // <GJP>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
        #    {
        #        this.TransType_JP = VendBankTransType_JP::OrdinarySavings;
        #    }
        #    // </GJP>
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #public void modifiedField(FieldId _fieldId)
        #{
        #    super(_fieldId);
        #
        #    this.BankAccountMap::modifiedField(_fieldId);
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        switch (_fieldId)
        #        {
        #            case fieldNum(VendBankAccount, DirDunsNumber):
        #                this.LogisticsLocation = LogisticsLocation::findByDUNSNumRecId(this.DirDunsNumber, VendTable::find(this.VendAccount).Party).RecId;
        #                break;
        #
        #            default:
        #                break;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #validateDelete
        #public boolean validateDelete()
        #{
        #    boolean ret;
        #
        #    ret = super();
        #
        #    if(VendPrenote::existBankPrenotes(this.VendAccount,this.AccountID))
        #    {
        #        if(Box::yesNo(strFmt("@SYS128525",this.AccountID),DialogButton::Yes))
        #        {
        #            VendPrenote::deletePrenotes(this.AccountID, this.VendAccount);
        #            ret = true;
        #        }
        #        else
        #        {
        #            ret = false;
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateField
        #public boolean validateField(FieldId _fieldId)
        #{
        #    boolean ret;
        #    ;
        #
        #
        #    ret = super(_fieldId);
        #    if (ret)
        #    {
        #        switch (_fieldId)
        #        {
        #            case (fieldNum(VendBankAccount, BankIBAN)) :
        #                if (Bank::checkBankIBAN(this.BankIBAN))
        #                {
        #                    this.BankIBAN = strUpr(this.BankIBAN);
        #                    ret = true;
        #                }
        #                else
        #                {
        #                    ret = false;
        #                }
        #                break;
        #
        #            case (fieldNum(VendBankAccount, ActiveDate)):
        #
        #                if(this.ActiveDate != Global::utcDateTimeNull() &&
        #                        this.ExpiryDate != Global::utcDateTimeNull()
        #                        && this.ActiveDate > this.ExpiryDate)
        #                {
        #                    ret = checkFailed("@SYS116175");
        #                }
        #
        #                else if(this. ActiveDate != Global::utcDateTimeNull() &&  this.existOpenTransactions(_fieldId))
        #                {
        #                     info(strFmt("@SYS115074", this.AccountID));
        #                }
        #                else
        #                {
        #                    ret = true;
        #                }
        #
        #                break;
        #
        #
        #            case (fieldNum(VendBankAccount, ExpiryDate)) :
        #                if(this.ActiveDate != Global::utcDateTimeNull() &&
        #                        this.ExpiryDate != Global::utcDateTimeNull()
        #                        && this.ActiveDate > this.ExpiryDate)
        #                {
        #                    ret = checkFailed("@SYS116176");
        #                }
        #                else if(this. ExpiryDate != Global::utcDateTimeNull() &&  this.existOpenTransactions(_fieldId))
        #                {
        #                    info(strFmt("@SYS115092", this.AccountID));
        #                }
        #
        #            break;
        #
        #            case fieldNum(VendBankAccount, AccountNum) :
        #                ret = this.BankAccountMap::bankAccountValidation().checkBankAccountNum(this.AccountNum);
        #                if (ret)
        #                {
        #                    ret = this.validatePrenote();
        #                }
        #                break;
        #
        #            case fieldNum(VendBankAccount,Name), fieldNum(VendBankAccount,RegistrationNum):
        #
        #                ret = this.validatePrenote();
        #                break;
        #
        #            case (fieldNum(VendBankAccount, VendDuns4Number)):
        #                if (strLen(this.VendDuns4Number) > 0)
        #                {
        #                    // Duns number is not selected and does not exist
        #                    if ((!this.LogisticsLocation) || (DirDunsNumber::find(this.DirDunsNumber).DunsNumber==""))
        #                    {
        #                        ret = checkFailed("@SPS260");
        #                    }
        #
        #                    // Duns4 number must be of length 4 character
        #                    if ((ret) && (strLen(this.VendDuns4Number) != 4))
        #                    {
        #                        ret = checkFailed(strFmt("@SPS261", this.VendDuns4Number));
        #                    }
        #                }
        #                break;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validatePrenote
        #private boolean validatePrenote()
        #{
        #    boolean ret = true;
        #
        #    if(VendPrenote::existBankPrenotes(this.VendAccount,this.AccountID))
        #    {
        #        if(Box::yesNo(strFmt("@SYS128525",this.AccountID),DialogButton::Yes))
        #        {
        #            VendPrenote::deletePrenotes(this.AccountID, this.VendAccount);
        #            ret = true;
        #        }
        #        else
        #        {
        #            ret = false;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #public boolean validateWrite()
        #{
        #    // <GEELV>
        #    #ISOCountryRegionCodes
        #    // </GEELV>
        #    boolean ret;
        #
        #    ret = super();
        #
        #    if (ret)
        #    {
        #        ret = this.BankAccountMap::validateWrite();
        #
        #        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #        {
        #            // Associated Duns number doesnt exist
        #            if ((!this.LogisticsLocation) && (this.VendDuns4Number))
        #            {
        #                ret = checkFailed("@SPS260");
        #            }
        #
        #            if ((ret) && (this.checkDunsValueExists(this.LogisticsLocation, this.VendDuns4Number)))
        #            {
        #                ret = checkFailed("@SPS262");
        #            }
        #        }
        #
        #        // <GEELV>
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLV]))
        #        {
        #            if (this.LvDefaultBank && !this.CurrencyCode)
        #            {
        #                ret = checkFailed(strFmt("@SYS84378", fieldId2pname(tableNum(VendBankAccount), fieldNum(VendBankAccount, CurrencyCode))));
        #            }
        #            ret = ret && this.checkDefault_LV();
        #        }
        #        // </GEELV>
        #
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkBankAccountReference
        #static boolean checkBankAccountReference(VendAccount        _vendAccount,
        #                                         VendBankAccountId  _vendBankAccountId,
        #                                         CompanyId          _company = curext())
        #{
        #    CompanyId   companyId;
        #    ;
        #
        #    if (_vendBankAccountId)
        #    {
        #        if (!_company)
        #        {
        #            companyId = curext();
        #        }
        #        else
        #        {
        #            companyId = _company;
        #
        #            if (!xDataArea::exist(companyId))
        #            {
        #                return checkFailed(strFmt("@SYS10666", companyId));
        #            }
        #        }
        #
        #        changecompany(companyId)
        #        {
        #            if (!VendBankAccount::find(_vendAccount, _vendBankAccountId))
        #            {
        #                return checkFailed(strFmt("@SYS27061",_vendBankAccountId));
        #            }
        #        }
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkExist
        #public static boolean checkExist(VendAccount _vendAccount, VendBankAccountId _vendBankAccountId )
        #{
        #    boolean ret = true;
        #    ;
        #
        #    if (!VendBankAccount::exist(_vendAccount, _vendBankAccountId))
        #    {
        #        ret = checkFailed(strFmt(VendBankAccount::txtNotExist(), _vendAccount, _vendBankAccountId));
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #exist
        #public static boolean exist(VendAccount _vendAccount, VendBankAccountId _vendBankAccountId )
        #{
        #    boolean found;
        #    ;
        #
        #    found = (select firstonly
        #                 RecId
        #            from
        #                 vendBankAccount
        #             where
        #                 vendBankAccount.VendAccount == _vendAccount &&
        #                vendBankAccount.AccountID == _vendBankAccountId).RecId != 0;
        #
        #    return found;
        #}
      ENDSOURCE
      SOURCE #find
        #public static VendBankAccount find(
        #    VendAccount _vendAccount,
        #    VendBankAccountId _vendBankAccountId ,
        #    boolean                 _forupdate = false,
        #    ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    VendBankAccount vendBankAccount;
        #    ;
        #
        #    vendBankAccount.selectForUpdate(_forupdate);
        #    if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        #    {
        #        vendBankAccount.concurrencyModel(_concurrencyModel);
        #    }
        #
        #    select firstonly
        #        vendBankAccount
        #        where
        #        vendBankAccount.VendAccount == _vendAccount &&
        #                vendBankAccount.AccountID == _vendBankAccountId;
        #
        #    return vendBankAccount;
        #}
        #
      ENDSOURCE
      SOURCE #findByCompany
        #/// <summary>
        #/// Finds a <c>VendBankAccount</c> record in the specified company.
        #/// </summary>
        #/// <param name="_companyId">
        #/// The company in which to look for the record.
        #/// </param>
        #/// <param name="_vendAccount">
        #/// The vendor account ID.
        #/// </param>
        #/// <param name="_vendBankAccountId">
        #/// The bank account ID.
        #/// </param>
        #/// <param name="_forupdate">
        #/// Determines whether the returned <c>VendBankAccount</c> record is selected for update; optional.
        #/// </param>
        #/// <param name="_concurrencyModel">
        #/// The concurrency model to use; optional.
        #/// </param>
        #/// <returns>
        #/// The <c>VendBankAccount</c> record, if found.
        #/// </returns>
        #
        #public static VendBankAccount findByCompany(
        #    CompanyId _companyId,
        #    VendAccount _vendAccount,
        #    VendBankAccountId _vendBankAccountId ,
        #    boolean                 _forupdate = false,
        #    ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    VendBankAccount vendBankAccount;
        #    ;
        #
        #    changecompany (_companyId)
        #    {
        #        vendBankAccount = VendBankAccount::find(_vendAccount, _vendBankAccountId, _forupdate, _concurrencyModel);
        #    }
        #
        #    return vendBankAccount;
        #}
        #
      ENDSOURCE
      SOURCE #findDefault_LV
        #public server static VendBankAccount findDefault_LV(VendAccount _vendAccount, CurrencyCode _currencyCode)
        #{
        #    VendBankAccount vendBankAccount;
        #
        #    select firstonly vendBankAccount
        #        where vendBankAccount.VendAccount     == _vendAccount  &&
        #              vendBankAccount.CurrencyCode    == _currencyCode &&
        #              vendBankAccount.LvDefaultBank   == NoYes::Yes;
        #
        #    return vendBankAccount;
        #}
      ENDSOURCE
      SOURCE #findDefaultByCompany_LV
        #public static VendBankAccount findDefaultByCompany_LV(CompanyId          _companyId,
        #                                                      VendAccount        _vendAccount,
        #                                                      CurrencyCode       _currencyCode,
        #                                                      boolean            _forUpdate          = false,
        #                                                      ConcurrencyModel   _concurrencyModel   = ConcurrencyModel::Auto)
        #{
        #    VendBankAccount vendBankAccount;
        #
        #    changecompany(_companyId)
        #    {
        #        vendBankAccount.selectForUpdate(_forUpdate);
        #        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        #        {
        #            vendBankAccount.concurrencyModel(_concurrencyModel);
        #        }
        #
        #        select firstonly vendBankAccount
        #            where vendBankAccount.VendAccount     == _vendAccount  &&
        #                  vendBankAccount.CurrencyCode    == _currencyCode &&
        #                  vendBankAccount.LvDefaultBank   == NoYes::Yes;
        #    }
        #
        #    return vendBankAccount;
        #}
      ENDSOURCE
      SOURCE #generateAccountId
        #/// <summary>
        #/// Generates a new account ID, based on the number of records in the <c>VendBankAccount</c> account.
        #/// </summary>
        #/// <returns>
        #/// The bank account ID.
        #/// </returns>
        #public static VendBankAccountId generateAccountId()
        #{
        #    VendBankAccount         vendBankAccountCount;
        #
        #    select count(RecId) from vendBankAccountCount;
        #    return int642str(vendBankAccountCount.RecId + 1);
        #}
      ENDSOURCE
      SOURCE #lookupBankAccount
        #public client static void lookupBankAccount(FormStringControl   _ctrl,
        #                                     VendAccount         _vendAccount,
        #                                     CompanyId           _company = curext(),
        #                                     utcdatetime          _transDate = utcDateTimeNull(),
        #                                     VendPaymMode       _paymentMode = "")
        #{
        #
        #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(VendBankAccount), _ctrl);
        #    Query                   query = new Query();
        #    QueryBuildDataSource    qbds;
        #    QueryBuildRange         activeBankAccountsRange;
        #    CompanyId               companyId;
        #    VendPaymModeTable       vendPaymMode;
        #    #localmacro.ExpiryDateCriteria "((ExpiryDate == \%1) || (ExpiryDate > \%2))" #endmacro
        #    #localmacro.ActiveDateCriteria "(ActiveDate <= \%1)" #endmacro
        #    ;
        #
        #    if (!_company)
        #    {
        #        companyId = curext();
        #    }
        #    else
        #    {
        #        companyId = _company;
        #
        #        if (!xDataArea::exist(companyId))
        #        {
        #            throw error(strFmt("@SYS10666", companyId));
        #        }
        #    }
        #
        #    changecompany(companyId)
        #    {
        #        sysTableLookup.addLookupfield(fieldNum(VendBankAccount, AccountID), true);
        #        sysTableLookup.addLookupfield(fieldNum(VendBankAccount, Name));
        #
        #        qbds = query.addDataSource(tableNum(VendBankAccount));
        #        qbds.addRange(fieldNum(VendBankAccount, VendAccount)).value(queryValue(_vendAccount));
        #
        #        if(_transDate)
        #        {
        #            //Lookup active bank accounts only.
        #            //Active banks either have expiry date as null or expiry date greater than payment date
        #            activeBankAccountsRange = qbds.addRange(fieldNum(VendBankAccount, ExpiryDate));
        #            activeBankAccountsRange.value(strFmt(#ExpiryDateCriteria,
        #                                                    date2StrXpp(dateNull()) , DateTimeUtil::toStr(_transDate)));
        #            activeBankAccountsRange.status(RangeStatus::Hidden);
        #
        #            if(_paymentMode)
        #            {
        #                //If for electronic payment bank is inactive based on active date
        #                select firstonly vendPaymMode where vendPaymMode.PaymMode == _paymentMode
        #                 && vendPaymMode.PaymentType == PaymentType::ElectronicPayment;
        #                    if( vendPaymMode )
        #                    {
        #                        activeBankAccountsRange = qbds.addRange(fieldNum(VendBankAccount, ActiveDate));
        #                        activeBankAccountsRange.value(strFmt(#ActiveDateCriteria, DateTimeUtil::toStr(_transDate)));
        #                        activeBankAccountsRange.status(RangeStatus::Hidden);
        #                    }
        #            }
        #        }
        #        sysTableLookup.parmQuery(query);
        #        sysTableLookup.performFormLookup();
        #    }
        #}
      ENDSOURCE
      SOURCE #txtNotExist
        #static TxtNotExist txtNotExist()
        #{
        #    return "@SYS9779";
        #}
        #
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : VendTrans unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #VendTrans
    EnforceFKRelation 0
    PROPERTIES
      Name                #VendTrans
      Label               #@SYS2753
      FormRef             #VendTrans
      TitleField1         #Voucher
      TitleField2         #TransDate
      ConfigurationKey    #LedgerBasic
      SecurityKey         #VendTables
      MaxAccessMode       #Edit
      CacheLookup         #NotInTTS
      CreateRecIdIndex    #Yes
      TableGroup          #Transaction
      PrimaryIndex        #RecId
      ClusterIndex        #AccountDateIdx
      ModifiedDateTime    #Yes
      DEL_modifiedTime    #Yes
      ModifiedBy          #Yes
      ModifiedTransactionId #Yes
      CreatedDateTime     #Yes
      DEL_createdTime     #Yes
      CreatedBy           #Yes
      CreatedTransactionId #Yes
      DeveloperDocumentation  #@SYS126062
      Origin              #{2C0901FA-0000-1000-77F6-7F645472616E}
      LegacyId            #506
    ENDPROPERTIES
    
    FIELDS
      FIELD #AccountingEvent
        INT64
        PROPERTIES
          Name                #AccountingEvent
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #VendTrans
          Origin              #{2C4824CB-A213-4BDB-A66D-974E88853A67}
          LegacyId            #119
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #AccountNum
        STRING
        PROPERTIES
          Name                #AccountNum
          HelpText            #@SYS107400
          Mandatory           #Yes
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{61ED820E-5C01-4BEB-BA96-E1E6630E53B0}
          LegacyId            #1
          ExtendedDataType    #VendAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #AmountCur
        REAL
        PROPERTIES
          Name                #AmountCur
          HelpText            #@SYS10170
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{61AE1311-484F-47DB-A7E5-DAB92A68CD3C}
          LegacyId            #6
          ExtendedDataType    #AmountCurDebCred
        ENDPROPERTIES
        
      FIELD #AmountMST
        REAL
        PROPERTIES
          Name                #AmountMST
          HelpText            #@SYS1385
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{AF829B42-54DB-4FC0-8229-150B70EA9B88}
          LegacyId            #8
          ExtendedDataType    #AmountMSTDebCred
        ENDPROPERTIES
        
      FIELD #Approved
        ENUM
        PROPERTIES
          Name                #Approved
          HelpText            #@SYS16882
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{C900D16A-E818-446D-A179-A24034D64519}
          LegacyId            #21
          ExtendedDataType    #Approved
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ApprovedDate
        DATE
        PROPERTIES
          Name                #ApprovedDate
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{35B2F229-72FD-4F5A-A691-6E0F2128D342}
          LegacyId            #60
          ExtendedDataType    #ApprovedDate
        ENDPROPERTIES
        
      FIELD #Approver
        INT64
        PROPERTIES
          Name                #Approver
          HelpText            #@SYS17308
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{77BBB3AC-B727-4749-8935-9A4FD0993F42}
          LegacyId            #125
          ExtendedDataType    #HcmApprover
        ENDPROPERTIES
        
      FIELD #Arrival
        ENUM
        PROPERTIES
          Name                #Arrival
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{5F514090-777E-4D1B-8BA5-6479C18EF13C}
          LegacyId            #27
          ExtendedDataType    #ArrivalId
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #BankCentralBankPurposeCode
        STRING
        PROPERTIES
          Name                #BankCentralBankPurposeCode
          Table               #VendTrans
          CountryRegionCodes  #NO
          Origin              #{D5EDA591-0133-4495-9869-856C0DE5394C}
          LegacyId            #69
          ExtendedDataType    #BankCentralBankPurposeCode
        ENDPROPERTIES
        
      FIELD #BankCentralBankPurposeText
        STRING
        PROPERTIES
          Name                #BankCentralBankPurposeText
          Table               #VendTrans
          CountryRegionCodes  #NO
          Origin              #{329F1E1A-1EEB-460F-A739-EC1D2EC2B9CD}
          LegacyId            #68
          ExtendedDataType    #BankCentralBankPurposeText
          StringSize          #140
        ENDPROPERTIES
        
      FIELD #BankLCImportLine
        INT64
        PROPERTIES
          Name                #BankLCImportLine
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{168F89BA-CC2A-404F-9C61-31CDD1EBAD15}
          LegacyId            #118
          ExtendedDataType    #BankLCLineRefRecId
        ENDPROPERTIES
        
      FIELD #BankRemittanceFileId
        STRING
        PROPERTIES
          Name                #BankRemittanceFileId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{B22CC505-3065-4F52-B000-552AE5F32CC3}
          LegacyId            #65
          ExtendedDataType    #BankRemittanceFileIdVend
        ENDPROPERTIES
        
      FIELD #Cancel
        ENUM
        PROPERTIES
          Name                #Cancel
          Label               #@SYS4412
          HelpText            #@SYS17365
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{0DB3805D-26D6-48C7-AD13-DCE9BBA922D8}
          LegacyId            #35
          ExtendedDataType    #Cancelled
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CashDiscCode
        STRING
        PROPERTIES
          Name                #CashDiscCode
          Table               #VendTrans
          Origin              #{914DB1F5-1182-4D33-9E11-7D0843DDA890}
          LegacyId            #53
          ExtendedDataType    #CashDiscCode
        ENDPROPERTIES
        
      FIELD #Closed
        DATE
        PROPERTIES
          Name                #Closed
          Label               #@SYS22065
          HelpText            #@SYS5057
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{225A4CA4-D867-4469-8A70-CB03999F0276}
          LegacyId            #18
          ExtendedDataType    #TransDate
        ENDPROPERTIES
        
      FIELD #CompanyBankAccountId
        STRING
        PROPERTIES
          Name                #CompanyBankAccountId
          GroupPrompt         #@SYS13342
          Table               #VendTrans
          Origin              #{EC7FE9BE-95FA-4FD1-BC67-64338A166BE5}
          LegacyId            #42
          ExtendedDataType    #CompanyBankAccountId
        ENDPROPERTIES
        
      FIELD #ConsessionSettlementId
        STRING
        PROPERTIES
          Name                #ConsessionSettlementId
          Table               #VendTrans
          Origin              #{2A163EB4-01FA-1000-774B-26F2973BF3B0}
          LegacyId            #16052
          ExtendedDataType    #RetailConsessionSettlementId
        ENDPROPERTIES
        
      FIELD #Correct
        ENUM
        PROPERTIES
          Name                #Correct
          HelpText            #@SYS3643
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{8F156F61-6AC9-40AD-810E-9BCEB39E657C}
          LegacyId            #29
          ExtendedDataType    #Correct
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          HelpText            #@SYS20776
          Mandatory           #Yes
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{DCF9598E-AB53-4372-A87F-BBC19266EBB8}
          LegacyId            #10
          ExtendedDataType    #VendCurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #DefaultDimension
        INT64
        PROPERTIES
          Name                #DefaultDimension
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{85FB52CB-5075-41D0-B71E-CF27602E75AF}
          LegacyId            #74
          ExtendedDataType    #DimensionDefault
        ENDPROPERTIES
        
      FIELD #DocumentDate
        DATE
        PROPERTIES
          Name                #DocumentDate
          HelpText            #@SYS12497
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{8D9D7448-1FEE-47FA-BA96-3C74422FF87D}
          LegacyId            #26
          ExtendedDataType    #DocumentDate
        ENDPROPERTIES
        
      FIELD #DocumentNum
        STRING
        PROPERTIES
          Name                #DocumentNum
          HelpText            #@SYS17472
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{DD2D556F-8959-45B1-9801-00EAC0A0F48F}
          LegacyId            #25
          ExtendedDataType    #DocumentNum
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #DueDate
        DATE
        PROPERTIES
          Name                #DueDate
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{58C786AD-E6E3-4DA9-A10D-A5ABF1A4B4A9}
          LegacyId            #14
          ExtendedDataType    #DueDate
        ENDPROPERTIES
        
      FIELD #EUROTriangulation
        ENUM
        PROPERTIES
          Name                #EUROTriangulation
          AllowEdit           #No
          Visible             #No
          Table               #VendTrans
          Origin              #{55F0DF76-C1A2-46B8-A6DE-F4894D1EEF6D}
          LegacyId            #52
          ExtendedDataType    #EUROTriangulation
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ExchAdjustment
        REAL
        PROPERTIES
          Name                #ExchAdjustment
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{387880E0-731F-4953-90F4-A0E386AE23D6}
          LegacyId            #24
          ExtendedDataType    #VendExchAdjustment
        ENDPROPERTIES
        
      FIELD #ExchAdjustmentReporting
        REAL
        PROPERTIES
          Name                #ExchAdjustmentReporting
          Visible             #No
          Table               #VendTrans
          Origin              #{0527AD50-9DD1-4C91-84A3-98965196E405}
          LegacyId            #132
          ExtendedDataType    #VendExchAdjustment
        ENDPROPERTIES
        
      FIELD #ExchRate
        REAL
        PROPERTIES
          Name                #ExchRate
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{F0D8EE00-21FC-492B-9523-C8EA7DC6600C}
          LegacyId            #78
          ExtendedDataType    #ExchRate
        ENDPROPERTIES
        
      FIELD #ExchRateSecond
        REAL
        PROPERTIES
          Name                #ExchRateSecond
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{17E8B5DA-6FB7-4AE3-8F8C-1030FEACB792}
          LegacyId            #75
          ExtendedDataType    #ExchrateSecondary
        ENDPROPERTIES
        
      FIELD #FixedExchRate
        ENUM
        PROPERTIES
          Name                #FixedExchRate
          Table               #VendTrans
          Origin              #{9215171D-2B79-476E-947B-7FF04F996E88}
          LegacyId            #67
          ExtendedDataType    #FixedExchRate
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Invoice
        STRING
        PROPERTIES
          Name                #Invoice
          HelpText            #@SYS10716
          GroupPrompt         #@SYS13864
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{E25FE8AF-9E92-4D0D-AE6E-92541AF79BFA}
          LegacyId            #4
          ExtendedDataType    #VendInvoiceId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InvoiceProject
        ENUM
        PROPERTIES
          Name                #InvoiceProject
          Label               #@SYS50055
          HelpText            #@SYS105019
          Table               #VendTrans
          Origin              #{C83FD631-D792-4CDD-B7D1-4C832F51C6C1}
          LegacyId            #81
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InvoiceReleaseDate
        DATETIME
        PROPERTIES
          Name                #InvoiceReleaseDate
          Table               #VendTrans
          Origin              #{9115C888-A9A1-4834-8E76-A4A73462BE91}
          LegacyId            #86
          ExtendedDataType    #InvoiceReleaseDate
        ENDPROPERTIES
        
      FIELD #JournalNum
        STRING
        PROPERTIES
          Name                #JournalNum
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #VendInvoiceRegisterApproval
          Table               #VendTrans
          Origin              #{B227633C-7DAE-481D-B4F6-8885A8A328F3}
          LegacyId            #51
          ExtendedDataType    #LedgerJournalId
        ENDPROPERTIES
        
      FIELD #LastExchAdj
        DATE
        PROPERTIES
          Name                #LastExchAdj
          Label               #@SYS128752
          HelpText            #@SYS3127
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{31F9B683-26C0-4FF5-8D74-FA8A79A4033B}
          LegacyId            #28
          ExtendedDataType    #TransDate
        ENDPROPERTIES
        
      FIELD #LastExchAdjRate
        REAL
        PROPERTIES
          Name                #LastExchAdjRate
          Label               #@sys98723
          HelpText            #@SYS95676
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{C7CB54F8-667C-4768-AD07-EE8499A4563C}
          LegacyId            #31
          ExtendedDataType    #ExchRate
        ENDPROPERTIES
        
      FIELD #LastExchAdjRateReporting
        REAL
        PROPERTIES
          Name                #LastExchAdjRateReporting
          Visible             #No
          Table               #VendTrans
          Origin              #{8DE87DF2-1234-49B3-8A7D-122FBD7B76CB}
          LegacyId            #130
          ExtendedDataType    #CurrencyExchangeRate
        ENDPROPERTIES
        
      FIELD #LastExchAdjVoucher
        STRING
        PROPERTIES
          Name                #LastExchAdjVoucher
          Label               #@sys98724
          HelpText            #@SYS95675
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{77EA2121-B8E6-4794-BD89-FBE6DB9A932C}
          LegacyId            #30
          ExtendedDataType    #Voucher
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #LastSettleAccountNum
        STRING
        PROPERTIES
          Name                #LastSettleAccountNum
          Label               #@SYS107392
          HelpText            #@SYS107397
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{DF071129-06D4-4101-95FA-2FD0E04E7D1F}
          LegacyId            #79
          ExtendedDataType    #VendAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #LastSettleCompany
        STRING
        PROPERTIES
          Name                #LastSettleCompany
          Label               #@SYS107393
          HelpText            #@SYS107398
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{D483AFD8-DAB1-4938-A8BB-7A84BA7FCCBD}
          LegacyId            #80
          ExtendedDataType    #CompanyId
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #LastSettleDate
        DATE
        PROPERTIES
          Name                #LastSettleDate
          Label               #@SYS22069
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{8062E741-5AA7-4F48-B8CA-7C7049AA73D9}
          LegacyId            #16
          ExtendedDataType    #TransDate
        ENDPROPERTIES
        
      FIELD #LastSettleVoucher
        STRING
        PROPERTIES
          Name                #LastSettleVoucher
          Label               #@SYS22848
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{7B1E2514-A3E5-4E42-9C64-7DE34DDC3634}
          LegacyId            #15
          ExtendedDataType    #Voucher
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #OffsetRecid
        INT64
        PROPERTIES
          Name                #OffsetRecid
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{371CA953-BF0E-49CF-A3C1-D518C4E685C7}
          LegacyId            #50
          ExtendedDataType    #VendTransRefRecId
        ENDPROPERTIES
        
      FIELD #PackedExtensions
        QUEUE
        PROPERTIES
          Name                #PackedExtensions
          SaveContents        #No
          Visible             #No
          Table               #VendTrans
          CountryRegionCodes  #RU,IN,JP,BR
          Origin              #{060747FF-BDBD-4BFF-873A-203C4CC9C0E8}
          ExtendedDataType    #SysExtensionSerializerPackedContainer
        ENDPROPERTIES
        
      FIELD #PaymId
        STRING
        PROPERTIES
          Name                #PaymId
          HelpText            #@SYS3464
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{D7C617AE-6C19-4761-8A77-155DBF955560}
          LegacyId            #23
          ExtendedDataType    #PaymId
          StringSize          #200
        ENDPROPERTIES
        
      FIELD #PaymMode
        STRING
        PROPERTIES
          Name                #PaymMode
          Table               #VendTrans
          Origin              #{24D8AB4F-A6C0-44BE-9961-D7A795BD6E8F}
          LegacyId            #45
          ExtendedDataType    #VendPaymMode
        ENDPROPERTIES
        
      FIELD #PaymReference
        STRING
        PROPERTIES
          Name                #PaymReference
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{644AA6CD-BBC0-4761-8D90-E9D53B2CAA52}
          LegacyId            #43
          ExtendedDataType    #VendPaymReference
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PaymSpec
        STRING
        PROPERTIES
          Name                #PaymSpec
          Table               #VendTrans
          Origin              #{C919BC3A-9C02-4370-8A86-9AF361FFA821}
          LegacyId            #56
          ExtendedDataType    #VendPaymSpec
        ENDPROPERTIES
        
      FIELD #PostingChangeVoucher
        STRING
        PROPERTIES
          Name                #PostingChangeVoucher
          Label               #@SYS12371
          HelpText            #@SYS4754
          SaveContents        #No
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{A9D8A01F-B8BC-43DB-918E-D97C26F8149A}
          LegacyId            #40
          ExtendedDataType    #VendPostingProfile
        ENDPROPERTIES
        
      FIELD #PostingProfile
        STRING
        PROPERTIES
          Name                #PostingProfile
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{A3D0CB49-14BC-46FF-ABD6-0ADE08C1DFD0}
          LegacyId            #32
          ExtendedDataType    #VendPostingProfile
        ENDPROPERTIES
        
      FIELD #PostingProfileApprove
        STRING
        PROPERTIES
          Name                #PostingProfileApprove
          Label               #@SYS16449
          HelpText            #@SYS14805
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{3617E9A2-A751-42DF-91B1-31E8DDFDF74D}
          LegacyId            #37
          ExtendedDataType    #VendPostingProfile
        ENDPROPERTIES
        
      FIELD #PostingProfileCancel
        STRING
        PROPERTIES
          Name                #PostingProfileCancel
          Label               #@SYS12483
          HelpText            #@SYS3689
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{141790FE-F855-4605-8062-3E5E62F9E3A2}
          LegacyId            #38
          ExtendedDataType    #VendPostingProfile
        ENDPROPERTIES
        
      FIELD #PostingProfileClose
        STRING
        PROPERTIES
          Name                #PostingProfileClose
          Label               #@SYS18742
          HelpText            #@SYS15404
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{33537BD4-17D9-49C4-B1EB-291AEC758673}
          LegacyId            #36
          ExtendedDataType    #VendPostingProfile
        ENDPROPERTIES
        
      FIELD #PostingProfileReOpen
        STRING
        PROPERTIES
          Name                #PostingProfileReOpen
          Label               #@SYS22066
          HelpText            #@SYS11330
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{0DE106ED-4F2C-426D-8994-2CCDEF576B40}
          LegacyId            #39
          ExtendedDataType    #VendPostingProfile
        ENDPROPERTIES
        
      FIELD #Prepayment
        ENUM
        PROPERTIES
          Name                #Prepayment
          Label               #@SYS59473
          HelpText            #@SYS59475
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{ACBF06C9-F251-4876-B7EA-63F81340BE5B}
          LegacyId            #54
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #PromissoryNoteID
        STRING
        PROPERTIES
          Name                #PromissoryNoteID
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{01A517F5-B480-41C8-95A1-47BA5692B878}
          LegacyId            #61
          ExtendedDataType    #VendPromissoryNoteID
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PromissoryNoteSeqNum
        INT
        PROPERTIES
          Name                #PromissoryNoteSeqNum
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #VendPromissoryNote
          Table               #VendTrans
          Origin              #{3E7352F3-8C87-4D05-B082-94258CDD31F9}
          LegacyId            #63
          ExtendedDataType    #CustVendNegInstSeqNum
        ENDPROPERTIES
        
      FIELD #PromissoryNoteStatus
        ENUM
        PROPERTIES
          Name                #PromissoryNoteStatus
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #VendPromissoryNote
          Table               #VendTrans
          Origin              #{80C3EA8B-4889-4C19-AC60-5888D0C06344}
          LegacyId            #62
          ExtendedDataType    #VendPromissoryNoteStatus
          EnumType            #CustVendNegInstStatus
        ENDPROPERTIES
        
      FIELD #RBOVendTrans
        ENUM
        PROPERTIES
          Name                #RBOVendTrans
          Table               #VendTrans
          Origin              #{2A0C3EB7-01FA-1000-58E7-CB5307806454}
          LegacyId            #16055
          ExtendedDataType    #RetailCustTrans
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ReasonRefRecId
        INT64
        PROPERTIES
          Name                #ReasonRefRecId
          Visible             #No
          Table               #VendTrans
          Origin              #{EA14FC7C-7B51-465B-BA0C-BEBC92AD3F86}
          LegacyId            #83
          ExtendedDataType    #ReasonRefRecID
        ENDPROPERTIES
        
      FIELD #ReleaseDateComment
        STRING
        PROPERTIES
          Name                #ReleaseDateComment
          Table               #VendTrans
          Origin              #{C5EE36CD-F716-4D18-9AE7-7ECD783524B8}
          LegacyId            #85
          ExtendedDataType    #ReleaseDateComment
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #RemittanceAddress
        INT64
        PROPERTIES
          Name                #RemittanceAddress
          Table               #VendTrans
          Origin              #{1DB09FA5-13EA-47BD-A0B5-5D236C49C6C1}
          LegacyId            #91
          ExtendedDataType    #RemittanceAddress
        ENDPROPERTIES
        
      FIELD #RemittanceLocation
        INT64
        PROPERTIES
          Name                #RemittanceLocation
          Table               #VendTrans
          Origin              #{9C25D13B-2EE3-4B1E-B785-510F593119C7}
          LegacyId            #90
          ExtendedDataType    #RemittanceLocation
        ENDPROPERTIES
        
      FIELD #ReportingCurrencyAmount
        REAL
        PROPERTIES
          Name                #ReportingCurrencyAmount
          Visible             #No
          Table               #VendTrans
          Origin              #{7184F648-AA58-4896-A69F-1E43A11715FD}
          LegacyId            #126
          ExtendedDataType    #AmountMSTSecondary
        ENDPROPERTIES
        
      FIELD #ReportingCurrencyCrossRate
        REAL
        PROPERTIES
          Name                #ReportingCurrencyCrossRate
          Visible             #No
          Table               #VendTrans
          Origin              #{33B2182C-7C0F-4C83-9994-54CD03334062}
          LegacyId            #131
          ExtendedDataType    #CurrencyExchangeRate
        ENDPROPERTIES
        
      FIELD #ReportingExchAdjustmentRealized
        REAL
        PROPERTIES
          Name                #ReportingExchAdjustmentRealized
          Visible             #No
          Table               #VendTrans
          Origin              #{C4521B18-E1D2-4D84-9C2A-19109AA8B436}
          LegacyId            #127
          ExtendedDataType    #VendExchAdjustmentRealized
        ENDPROPERTIES
        
      FIELD #ReportingExchAdjustmentUnrealized
        REAL
        PROPERTIES
          Name                #ReportingExchAdjustmentUnrealized
          Visible             #No
          Table               #VendTrans
          Origin              #{7DF6BE74-78CF-422D-90FE-FF23ECBB3D8D}
          LegacyId            #128
          ExtendedDataType    #VendExchAdjustmentUnrealized
        ENDPROPERTIES
        
      FIELD #SettleAmountCur
        REAL
        PROPERTIES
          Name                #SettleAmountCur
          Label               #@SYS13383
          HelpText            #@SYS15544
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{CBC2F08E-26E7-494A-8C76-F54F45BE5A28}
          LegacyId            #7
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #SettleAmountMST
        REAL
        PROPERTIES
          Name                #SettleAmountMST
          Label               #@SYS93947
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{3F9AD452-3B57-4C8F-8784-D2A7AF8710D3}
          LegacyId            #9
          ExtendedDataType    #AmountMST
        ENDPROPERTIES
        
      FIELD #SettleAmountReporting
        REAL
        PROPERTIES
          Name                #SettleAmountReporting
          Visible             #No
          Table               #VendTrans
          Origin              #{2C475C87-FFAD-49EB-AFA9-09D6395299B9}
          LegacyId            #133
          ExtendedDataType    #AmountMSTSecondary
        ENDPROPERTIES
        
      FIELD #Settlement
        ENUM
        PROPERTIES
          Name                #Settlement
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{F6454E40-1DA7-4D1A-96DD-66B304026839}
          LegacyId            #33
          ExtendedDataType    #VendAutoSettlement
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #SettleTax1099Amount
        REAL
        PROPERTIES
          Name                #SettleTax1099Amount
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{433C50ED-2C88-445C-AB90-9F0E194A95DF}
          LegacyId            #72
          ExtendedDataType    #SettleTax1099Amount
        ENDPROPERTIES
        
      FIELD #SettleTax1099StateAmount
        REAL
        PROPERTIES
          Name                #SettleTax1099StateAmount
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{BF166C81-0F2F-4E87-92D0-4B4D4E2B938E}
          LegacyId            #73
          ExtendedDataType    #SettleTax1099StateAmount
        ENDPROPERTIES
        
      FIELD #Tax1099Amount
        REAL
        PROPERTIES
          Name                #Tax1099Amount
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{37F29CA6-25E3-4D24-AE20-7217AC9284D7}
          LegacyId            #47
          ExtendedDataType    #Tax1099Amount
        ENDPROPERTIES
        
      FIELD #Tax1099Date
        DATE
        PROPERTIES
          Name                #Tax1099Date
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{7DA3B72E-2386-4CF1-B69A-81BF3AE9BFBA}
          LegacyId            #46
          ExtendedDataType    #Tax1099Date
        ENDPROPERTIES
        
      FIELD #Tax1099Fields
        INT64
        PROPERTIES
          Name                #Tax1099Fields
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{8BF54468-8B39-496D-8A87-53B5285429B2}
          LegacyId            #116
          ExtendedDataType    #Tax1099FieldsRecId
        ENDPROPERTIES
        
      FIELD #Tax1099Num
        STRING
        PROPERTIES
          Name                #Tax1099Num
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{0EF163A5-BF46-4D6D-82CE-7821B6EA0BA7}
          LegacyId            #48
          ExtendedDataType    #Tax1099Num
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Tax1099RecId
        INT64
        PROPERTIES
          Name                #Tax1099RecId
          Visible             #No
          ConfigurationKey    #PublicSector
          Table               #VendTrans
          Origin              #{B214C23D-B2BC-4FFD-A1D3-70B1EC114AE8}
          LegacyId            #16001
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #Tax1099State
        STRING
        PROPERTIES
          Name                #Tax1099State
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{71EB317B-6E6C-405D-AED7-2C26722741BA}
          LegacyId            #70
          ExtendedDataType    #Tax1099State
        ENDPROPERTIES
        
      FIELD #Tax1099StateAmount
        REAL
        PROPERTIES
          Name                #Tax1099StateAmount
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{4C748301-3ED7-42C3-8A0E-9CA510947081}
          LegacyId            #71
          ExtendedDataType    #Tax1099StateAmount
        ENDPROPERTIES
        
      FIELD #TaxInvoicePurchId
        STRING
        PROPERTIES
          Name                #TaxInvoicePurchId
          Table               #VendTrans
          Origin              #{39A9750E-AB03-42B5-82D8-35DF7C3E7AF0}
          LegacyId            #8051
          ExtendedDataType    #TaxInvoicePurchId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ThirdPartyBankAccountId
        STRING
        PROPERTIES
          Name                #ThirdPartyBankAccountId
          Label               #@SYS88299
          GroupPrompt         #@SYS8079
          Table               #VendTrans
          Origin              #{DA70AAD5-6323-498B-960E-DAD4426161A2}
          LegacyId            #41
          ExtendedDataType    #BankThirdPartyAccountId
        ENDPROPERTIES
        
      FIELD #TransDate
        DATE
        PROPERTIES
          Name                #TransDate
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{D99DE190-AE88-420C-8B93-496B7933C569}
          LegacyId            #2
          ExtendedDataType    #TransDate
        ENDPROPERTIES
        
      FIELD #TransType
        ENUM
        PROPERTIES
          Name                #TransType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{54508EEA-2D39-458A-9D4C-2871A246F356}
          LegacyId            #19
          EnumType            #LedgerTransType
        ENDPROPERTIES
        
      FIELD #Txt
        STRING
        PROPERTIES
          Name                #Txt
          AllowEditOnCreate   #No
          Table               #VendTrans
          Origin              #{35E626F9-5325-42DC-AF76-E80F842C9425}
          LegacyId            #5
          ExtendedDataType    #TransTxt
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #VendExchAdjustmentRealized
        REAL
        PROPERTIES
          Name                #VendExchAdjustmentRealized
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{A8002BC5-6AA8-4D36-83B5-30C0259540A1}
          LegacyId            #58
          ExtendedDataType    #VendExchAdjustmentRealized
        ENDPROPERTIES
        
      FIELD #VendExchAdjustmentUnrealized
        REAL
        PROPERTIES
          Name                #VendExchAdjustmentUnrealized
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{BA8D2CC5-9415-442B-816F-8D016D7F0007}
          LegacyId            #59
          ExtendedDataType    #VendExchAdjustmentUnrealized
        ENDPROPERTIES
        
      FIELD #VendPaymentGroup
        STRING
        PROPERTIES
          Name                #VendPaymentGroup
          Table               #VendTrans
          Origin              #{93C6D68D-A143-4279-AA05-A25CE84F5014}
          LegacyId            #87
          ExtendedDataType    #VendPaymentGrouping
        ENDPROPERTIES
        
      FIELD #Voucher
        STRING
        PROPERTIES
          Name                #Voucher
          HelpText            #@SYS15596
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendTrans
          Origin              #{257D2F8E-9874-4E5E-8105-9C376359E062}
          LegacyId            #3
          ExtendedDataType    #Voucher
          StringSize          #20
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #AccountNum
          #Voucher
          #TransDate
          #Txt
          #CurrencyCode
          #AmountCur
          #SettleAmountCur
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Administration
        PROPERTIES
          Name                #Administration
          Label               #@SYS9853
        ENDPROPERTIES
        
        GROUPFIELDS
          #OffsetRecid
          #FixedExchRate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Agreement_RU
        PROPERTIES
          Name                #Agreement_RU
          Label               #@SYS332501
        ENDPROPERTIES
        
        GROUPFIELDS
          #agreementId_RU
          #agreementDocumentTitle_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #All
        PROPERTIES
          Name                #All
          Label               #@SYS80094
        ENDPROPERTIES
        
        GROUPFIELDS
          #ConsessionSettlementId
          #RBOVendTrans
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Amount
        PROPERTIES
          Name                #Amount
          Label               #@SYS12227
        ENDPROPERTIES
        
        GROUPFIELDS
          #CurrencyCode
          #AmountCur
          #AmountMST
          #ExchRate
          #ExchRateSecond
          #ReportingCurrencyAmount
          #ReportingCurrencyCrossRate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Bank
        PROPERTIES
          Name                #Bank
          Label               #@SYS22173
        ENDPROPERTIES
        
        GROUPFIELDS
          #CompanyBankAccountId
          #ThirdPartyBankAccountId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BankLCImportGroup
        PROPERTIES
          Name                #BankLCImportGroup
          Label               #@SYS316286
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankLCImportLine
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CashDiscount
        PROPERTIES
          Name                #CashDiscount
          Label               #@SYS4376
        ENDPROPERTIES
        
        GROUPFIELDS
          #CashDiscCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Dimension
        PROPERTIES
          Name                #Dimension
          Label               #@SYS342338
        ENDPROPERTIES
        
        GROUPFIELDS
          #DefaultDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Document
        PROPERTIES
          Name                #Document
          Label               #@SYS101280
        ENDPROPERTIES
        
        GROUPFIELDS
          #DocumentDate
          #DocumentNum
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ExchangeAdjustment
        PROPERTIES
          Name                #ExchangeAdjustment
          Label               #@SYS55328
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendExchAdjustmentUnrealized
          #VendExchAdjustmentRealized
          #ExchAdjustment
          #ReportingExchAdjustmentRealized
          #ReportingExchAdjustmentUnrealized
          #ExchAdjustmentReporting
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ExchangeRates
        PROPERTIES
          Name                #ExchangeRates
          Label               #@SYS55328
        ENDPROPERTIES
        
        GROUPFIELDS
          #LastExchAdj
          #LastExchAdjVoucher
          #LastExchAdjRate
          #LastExchAdjRateReporting
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #AccountNum
          #Voucher
          #TransDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Invoice
        PROPERTIES
          Name                #Invoice
          Label               #@SYS12128
        ENDPROPERTIES
        
        GROUPFIELDS
          #Invoice
          #Approved
          #Approver
          #InvoiceReleaseDate
          #ReleaseDateComment
          #ApprovedDate
          #DocumentNum
          #DocumentDate
          #TaxInvoicePurchId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Journal
        PROPERTIES
          Name                #Journal
          Label               #@SYS6790
        ENDPROPERTIES
        
        GROUPFIELDS
          #JournalNum
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Ledger
        PROPERTIES
          Name                #Ledger
          Label               #@SYS13356
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransType
          #Correct
          #PostingProfile
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Miscellaneous
        PROPERTIES
          Name                #Miscellaneous
          Label               #@SYS73543
        ENDPROPERTIES
        
        GROUPFIELDS
          #DueDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Payment
        PROPERTIES
          Name                #Payment
          Label               #@SYS828
        ENDPROPERTIES
        
        GROUPFIELDS
          #PaymMode
          #PaymSpec
          #PaymReference
          #Prepayment
          #BankCentralBankPurposeText
          #BankCentralBankPurposeCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PostingProfiles
        PROPERTIES
          Name                #PostingProfiles
          Label               #@SYS24751
        ENDPROPERTIES
        
        GROUPFIELDS
          #PostingProfileClose
          #PostingProfileApprove
          #PostingProfileCancel
          #PostingProfileReOpen
          #PostingChangeVoucher
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Project
        PROPERTIES
          Name                #Project
          Label               #@SYS80304
        ENDPROPERTIES
        
        GROUPFIELDS
          #InvoiceProject
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PromissoryNote
        PROPERTIES
          Name                #PromissoryNote
          Label               #@SYS71440
        ENDPROPERTIES
        
        GROUPFIELDS
          #PromissoryNoteID
          #PromissoryNoteSeqNum
          #PromissoryNoteStatus
          #BankRemittanceFileId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Reason
        PROPERTIES
          Name                #Reason
          Label               #@SYS107174
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReasonRefRecId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Remittance
        PROPERTIES
          Name                #Remittance
          Label               #@sys152838
        ENDPROPERTIES
        
        GROUPFIELDS
          #RemittanceLocation
          #RemittanceAddress
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Settlement
        PROPERTIES
          Name                #Settlement
          Label               #@SYS10163
        ENDPROPERTIES
        
        GROUPFIELDS
          #SettleAmountMST
          #SettleAmountCur
          #LastSettleVoucher
          #LastSettleAccountNum
          #LastSettleCompany
          #LastSettleDate
          #Settlement
          #SettleTax1099Amount
          #SettleTax1099StateAmount
          #SettleAmountReporting
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SettlementStatus
        PROPERTIES
          Name                #SettlementStatus
          Label               #@SYS21685
        ENDPROPERTIES
        
        GROUPFIELDS
          #Closed
          #PostingProfileClose
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Tax1099Fields
        PROPERTIES
          Name                #Tax1099Fields
          Label               #@SYS24226
        ENDPROPERTIES
        
        GROUPFIELDS
          #Tax1099Date
          #Tax1099Num
          #Tax1099Fields
          #Tax1099Amount
          #Tax1099State
          #Tax1099StateAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendorTransactions
        PROPERTIES
          Name                #VendorTransactions
          Label               #@SYS2753
        ENDPROPERTIES
        
        GROUPFIELDS
          #Txt
          #Arrival
          #Cancel
          #PaymId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendPaymentGroup
        PROPERTIES
          Name                #VendPaymentGroup
          Label               #@SYS133130
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendPaymentGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendTransReferenceVoucher_IN
        PROPERTIES
          Name                #VendTransReferenceVoucher_IN
          Label               #@GLS222673
        ENDPROPERTIES
        
        GROUPFIELDS
          #Voucher
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #FK_DimensionAttributeValueSet_VendTrans
      PROPERTIES
        Name                #FK_DimensionAttributeValueSet_VendTrans
        Origin              #{2B270001-01FA-1000-6B2F-035CFC8275FB}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #DefaultDimension
      ENDINDEXFIELDS
      
      #AccountDateIdx
      PROPERTIES
        Name                #AccountDateIdx
        Origin              #{2B0E0003-01FA-1000-7C70-D1A13768D856}
        LegacyId            #3
      ENDPROPERTIES
      
      INDEXFIELDS
        #AccountNum
        #TransDate
        #Voucher
      ENDINDEXFIELDS
      
      #VoucherDateIdx
      PROPERTIES
        Name                #VoucherDateIdx
        Origin              #{2B0E0004-01FA-1000-917C-E3952A5FD656}
        LegacyId            #4
      ENDPROPERTIES
      
      INDEXFIELDS
        #Voucher
        #TransDate
      ENDINDEXFIELDS
      
      #journalNum
      PROPERTIES
        Name                #journalNum
        Origin              #{2B0A0008-01FA-1000-C1CD-2D836E616C4E}
        LegacyId            #8
      ENDPROPERTIES
      
      INDEXFIELDS
        #JournalNum
      ENDINDEXFIELDS
      
      #AccountDate1099Idx
      PROPERTIES
        Name                #AccountDate1099Idx
        Origin              #{2B12000A-01FA-1000-085F-352C11CE33B5}
        LegacyId            #10
      ENDPROPERTIES
      
      INDEXFIELDS
        #AccountNum
        #Tax1099Fields
        #TransDate
      ENDINDEXFIELDS
      
      #Tax1099FieldsIdx
      PROPERTIES
        Name                #Tax1099FieldsIdx
        Origin              #{2B10001E-01FA-1000-6712-5A4CA88CFD3F}
        LegacyId            #30
      ENDPROPERTIES
      
      INDEXFIELDS
        #Tax1099Fields
      ENDINDEXFIELDS
      
      #ReasonTableRefIdx
      PROPERTIES
        Name                #ReasonTableRefIdx
        Origin              #{CF3A28EA-DECD-42FA-9BC5-570F457BDC0A}
        LegacyId            #31
      ENDPROPERTIES
      
      INDEXFIELDS
        #ReasonRefRecId
      ENDINDEXFIELDS
      
      #ApproverIdx
      PROPERTIES
        Name                #ApproverIdx
        Origin              #{48519A07-72E9-4F22-9600-6C864EB94B21}
        LegacyId            #35
      ENDPROPERTIES
      
      INDEXFIELDS
        #Approver
      ENDINDEXFIELDS
      
      #TransDateIdx
      PROPERTIES
        Name                #TransDateIdx
        Origin              #{BB872D1D-1130-4C2A-A01D-1EC5334742A7}
      ENDPROPERTIES
      
      INDEXFIELDS
        #TransDate
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #AccountingEvent
        PROPERTIES
          Name                #AccountingEvent
          Table               #AccountingEvent
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #AccountingEvent
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AccountingEvent
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Approver_FK
        PROPERTIES
          Name                #Approver_FK
          Table               #HcmWorker
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #HcmWorker
          Role                #Approver_VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Approver
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankAccountTable
        PROPERTIES
          Name                #BankAccountTable
          Table               #BankAccountTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CompanyBankAccountId
            RelatedField        #AccountID
            SourceEDT           #CompanyBankAccountId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankCentralBankPurpose
        PROPERTIES
          Name                #BankCentralBankPurpose
          Table               #BankCentralBankPurpose
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankCentralBankPurposeCode
            RelatedField        #Code
            SourceEDT           #BankCentralBankPurposeCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankChequePaymentTrans
        PROPERTIES
          Name                #BankChequePaymentTrans
          Table               #BankChequePaymTrans
          Validate            #No
          EntityRelationshipRole  #@SYS126063
          RelationshipType    #Link
          RelatedTableRole    #BankChequePaymentTrans
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransDate
            RelatedField        #InvoiceTransDate
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Voucher
            RelatedField        #InvoiceVoucher
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankLCImportLine
        PROPERTIES
          Name                #BankLCImportLine
          Table               #BankLCImportLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          RelatedTableRole    #BankLCImportLine
          Role                #BankLCImportLine_VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankLCImportLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BankRemittanceFilesVend
        PROPERTIES
          Name                #BankRemittanceFilesVend
          Table               #BankRemittanceFilesVend
          Validate            #No
          EntityRelationshipRole  #@SYS125120
          RelationshipType    #Link
          RelatedTableRole    #BankRemittanceFilesVend
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #BankRemittanceFileId
            RelatedField        #FileId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CashDisc
        PROPERTIES
          Name                #CashDisc
          Table               #CashDisc
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CashDiscCode
            RelatedField        #CashDiscCode
            SourceEDT           #CashDiscCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
            SourceEDT           #VendCurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DataArea
        PROPERTIES
          Name                #DataArea
          Table               #DataArea
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #LastSettleCompany
            RelatedField        #id
            SourceEDT           #CompanyId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #DataArea
            RelatedField        #isVirtual
            SourceEDT           #CompanyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DefaultDimension
        PROPERTIES
          Name                #DefaultDimension
          Table               #DimensionAttributeValueSet
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DefaultDimension
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DefaultDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #FactureJourAmountDifference_RU
        PROPERTIES
          Name                #FactureJourAmountDifference_RU
          Table               #FactureJour_RU
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #FactureJourAmountDifference_RU
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #3
            Table               #FactureJour_RU
            RelatedField        #FactureType
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #FactureJour_RU
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountNum
            RelatedField        #CustVendInvoiceAccount
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Voucher
            RelatedField        #Voucher
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransDate
            RelatedField        #FactureDate
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #RecId
            RelatedField        #CustVendTransRecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LedgerJournalTable
        PROPERTIES
          Name                #LedgerJournalTable
          Table               #LedgerJournalTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #JournalNum
            RelatedField        #JournalNum
            SourceEDT           #LedgerJournalId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReasonRef
        PROPERTIES
          Name                #ReasonRef
          Table               #ReasonTableRef
          Validate            #No
          EntityRelationshipRole  #@SYS125128
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ReasonRef
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ReasonRefRecId
            RelatedField        #RecId
            SourceEDT           #ReasonRefRecID
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RemittanceAddress_FK
        PROPERTIES
          Name                #RemittanceAddress_FK
          Table               #LogisticsPostalAddress
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #RemittanceAddress_FK
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #RemittanceAddress
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RemittanceLocation_FK
        PROPERTIES
          Name                #RemittanceLocation_FK
          Table               #LogisticsLocation
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #RemittanceLocation_FK
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #RemittanceLocation
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RetailConsessionSettlementTable
        PROPERTIES
          Name                #RetailConsessionSettlementTable
          Table               #RetailConsessionSettlementTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ConsessionSettlementId
            RelatedField        #SettlementId
            SourceEDT           #RetailConsessionSettlementId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Tax1099Detail
        PROPERTIES
          Name                #Tax1099Detail
          Table               #Tax1099BoxDetail
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          RelatedTableRole    #Tax1099Detail
          Role                #Tax1099Detail_VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Tax1099RecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Tax1099Fields
        PROPERTIES
          Name                #Tax1099Fields
          Table               #Tax1099Fields
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Tax1099Fields
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Tax1099Fields
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Tax1099State
        PROPERTIES
          Name                #Tax1099State
          Table               #LogisticsAddressState
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #Tax1099State
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Tax1099State
            RelatedField        #StateId
            SourceEDT           #Tax1099State
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ThirdPartyBankAccount
        PROPERTIES
          Name                #ThirdPartyBankAccount
          Table               #VendBankAccount
          EntityRelationshipRole  #@SYS123560
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ThirdPartyBankAccount
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountNum
            RelatedField        #VendAccount
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ThirdPartyBankAccountId
            RelatedField        #AccountID
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TmpBankPaym2Invoice
        PROPERTIES
          Name                #TmpBankPaym2Invoice
          Table               #TmpBankPaym2Invoice
          Validate            #No
          EntityRelationshipRole  #@SYS125129
          RelationshipType    #Link
          RelatedTableRole    #TmpBankPaym2Invoice
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransDate
            RelatedField        #InvoiceTransDate
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Voucher
            RelatedField        #InvoiceVoucher
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendExchRateAdjustment
        PROPERTIES
          Name                #VendExchRateAdjustment
          Table               #VendExchRateAdjustment
          EntityRelationshipRole  #@SYS125123
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendExchRateAdjustment
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #createdTransactionId
            RelatedField        #createdTransactionId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendInvoiceJour
        PROPERTIES
          Name                #VendInvoiceJour
          Table               #VendInvoiceJour
          Validate            #No
          EntityRelationshipRole  #@SYS125125
          RelationshipType    #Link
          RelatedTableRole    #VendInvoiceJour
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Voucher
            RelatedField        #LedgerVoucher
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountNum
            RelatedField        #InvoiceAccount
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransDate
            RelatedField        #InvoiceDate
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendLedger_PostingChangeVoucher
        PROPERTIES
          Name                #VendLedger_PostingChangeVoucher
          Table               #VendLedger
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #VendLedger_PostingChangeVoucher
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PostingChangeVoucher
            RelatedField        #PostingProfile
            SourceEDT           #VendPostingProfile
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendLedger_PostingProfile
        PROPERTIES
          Name                #VendLedger_PostingProfile
          Table               #VendLedger
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PostingProfile
            RelatedField        #PostingProfile
            SourceEDT           #VendPostingProfile
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendLedger_PostingProfileApprove
        PROPERTIES
          Name                #VendLedger_PostingProfileApprove
          Table               #VendLedger
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #VendLedger_PostingProfileApprove
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PostingProfileApprove
            RelatedField        #PostingProfile
            SourceEDT           #VendPostingProfile
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendLedger_PostingProfileCancel
        PROPERTIES
          Name                #VendLedger_PostingProfileCancel
          Table               #VendLedger
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #VendLedger_PostingProfileCancel
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PostingProfileCancel
            RelatedField        #PostingProfile
            SourceEDT           #VendPostingProfile
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendLedger_PostingProfileClose
        PROPERTIES
          Name                #VendLedger_PostingProfileClose
          Table               #VendLedger
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #VendLedger_PostingProfileClose
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PostingProfileClose
            RelatedField        #PostingProfile
            SourceEDT           #VendPostingProfile
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendLedger_PostingProfileReOpen
        PROPERTIES
          Name                #VendLedger_PostingProfileReOpen
          Table               #VendLedger
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #VendLedger_PostingProfileReOpen
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PostingProfileReOpen
            RelatedField        #PostingProfile
            SourceEDT           #VendPostingProfile
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendPaymentMode
        PROPERTIES
          Name                #VendPaymentMode
          Table               #VendPaymModeTable
          EntityRelationshipRole  #@SYS126065
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          RelatedTableRole    #VendPaymentMode
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PaymMode
            RelatedField        #PaymMode
            SourceEDT           #VendPaymMode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendPaymentModeSpec
        PROPERTIES
          Name                #VendPaymentModeSpec
          Table               #VendPaymModeSpec
          EntityRelationshipRole  #@SYS125126
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendPaymentModeSpec
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PaymMode
            RelatedField        #PaymMode
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PaymSpec
            RelatedField        #Specification
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendPromissoryNoteJour
        PROPERTIES
          Name                #VendPromissoryNoteJour
          Table               #VendPromissoryNoteJour
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PromissoryNoteID
            RelatedField        #PromissoryNoteId
            SourceEDT           #VendPromissoryNoteID
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendPromissoryNoteTrans
        PROPERTIES
          Name                #VendPromissoryNoteTrans
          Table               #VendPromissoryNoteTrans
          EntityRelationshipRole  #@SYS126066
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendPromissoryNoteTrans
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PromissoryNoteID
            RelatedField        #PromissoryNoteId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountNum
            RelatedField        #VendAccount
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Voucher
            RelatedField        #Voucher
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransDate
            RelatedField        #TransDate
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendStateTaxID
        PROPERTIES
          Name                #VendStateTaxID
          Table               #VendStateTaxID
          EntityRelationshipRole  #@SYS126067
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendStateTaxID
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountNum
            RelatedField        #VendAccount
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Tax1099State
            RelatedField        #StateId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTable_AccountNum
        PROPERTIES
          Name                #VendTable_AccountNum
          Table               #VendTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AccountNum
            RelatedField        #AccountNum
            SourceEDT           #VendAccount
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTable_LastSettleAcountNum
        PROPERTIES
          Name                #VendTable_LastSettleAcountNum
          Table               #VendTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #VendTable_LastSettleAccountNum
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #LastSettleAccountNum
            RelatedField        #AccountNum
            SourceEDT           #VendAccount
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTrans_AccountNum
        PROPERTIES
          Name                #VendTrans_AccountNum
          Table               #VendTrans
          EntityRelationshipRole  #@SYS123521
          RelationshipType    #Link
          RelatedTableRole    #VendTrans
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountNum
            RelatedField        #AccountNum
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TransDate
            RelatedField        #TransDate
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Voucher
            RelatedField        #Voucher
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTrans_OffsetRecid
        PROPERTIES
          Name                #VendTrans_OffsetRecid
          Table               #VendTrans
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #VendTrans_OffsetRecid
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #OffsetRecid
            RelatedField        #RecId
            SourceEDT           #VendTransRefRecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTransVoucher
        PROPERTIES
          Name                #VendTransVoucher
          Table               #VendTrans
          Validate            #No
          RelationshipType    #Link
          RelatedTableRole    #VendTransVoucher
          Role                #VendTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Voucher
            RelatedField        #Voucher
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #VendTrans_W
      PROPERTIES
        Table               #VendTrans_W
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PayrollPayStatement(VendInvoicePosted)
      PROPERTIES
        Table               #PayrollPayStatement
        DeleteAction        #Restricted
        Relation            #VendInvoicePosted
      ENDPROPERTIES
      
      #LedgerCov
      PROPERTIES
        Table               #LedgerCov
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #Tax1099BoxDetail
      PROPERTIES
        Table               #Tax1099BoxDetail
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #VendSettlement
      PROPERTIES
        Table               #VendSettlement
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #VendTrans_IN
      PROPERTIES
        Table               #VendTrans_IN
        DeleteAction        #Cascade
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #absRemainAmountMST
        #display AmountMST absRemainAmountMST()
        #{
        #    return abs(this.transData().remainAmountMST());
        #}
      ENDSOURCE
      SOURCE #agreementDocumentTitle_RU
        #/// <summary>
        #/// Gets the Document title of the Agreement for this transaction.
        #/// </summary>
        #/// <returns>
        #/// The Document title of the Agreement.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #display AgreementDocumentTitle agreementDocumentTitle_RU()
        #{
        #    return AgreementHeader::find(AgreementHeaderExt_RU::findByDefaultDimension(this.DefaultDimension).AgreementHeader).DocumentTitle;
        #}
      ENDSOURCE
      SOURCE #agreementId_RU
        #/// <summary>
        #/// Gets the Agreement Id from the DefaultDimension of this transaction.
        #/// </summary>
        #/// <returns>
        #/// The Agreement Id.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #display AgreementId_RU agreementId_RU()
        #{
        #    return AgreementHeaderExt_RU::findByDefaultDimension(this.DefaultDimension).AgreementId;
        #}
      ENDSOURCE
      SOURCE #allowEditCompanyBankAccountId
        #public boolean allowEditCompanyBankAccountId()
        #{
        #    return this.PromissoryNoteID == '';
        #}
      ENDSOURCE
      SOURCE #allowEditThirdPartyBankAccountId
        #public boolean allowEditThirdPartyBankAccountId()
        #{
        #    return this.PromissoryNoteID == '';
        #}
      ENDSOURCE
      SOURCE #amountExchAdj
        #//BP Deviation Documented
        #display AmountMST amountExchAdj()
        #{
        #    return this.transData().amountExchAdj();
        #}
      ENDSOURCE
      SOURCE #bankCurrencyTransferId_RU
        #public BankCurrencyTransferId_RU bankCurrencyTransferId_RU()
        #{
        #    return this.vendTrans_W().BankCurrencyTransferId_RU;
        #}
      ENDSOURCE
      SOURCE #clearingLedgerDimension
        #public LedgerDimensionDefaultAccount clearingLedgerDimension()
        #{
        #    return VendLedgerAccounts::clearingLedgerDimension(this.AccountNum, this.PostingProfile);
        #}
      ENDSOURCE
      SOURCE #clearingPeriod
        #//BP Deviation Documented
        #display ClearingPeriod clearingPeriod()
        #{
        #    return VendTable::find(this.AccountNum).clearingPeriod();
        #}
      ENDSOURCE
      SOURCE #delete
        #public void delete()
        #{;
        #    ttsbegin;
        #
        #    super();
        #
        #    smmTransLog::initTrans(this, smmLogAction::delete);
        #
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #dispConsId_JP
        #/// <summary>
        #/// Displays consolidation invoice Id for this transaction.
        #/// </summary>
        #/// <returns>
        #/// Consolidation invoice Id.
        #/// </returns>
        #// <GJP>
        #//BP Deviation documented
        #public display CustVendConsId_JP dispConsId_JP()
        #{
        #    #ISOCountryRegionCodes
        #    CustVendConsId_JP consId;
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
        #    {
        #        consId = this.CustVendTrans::getConsId_JP();
        #    }
        #
        #    return consId;
        #}
        #// </GJP>
        #
      ENDSOURCE
      SOURCE #displayAccountingExchangeRate
        #/// <summary>
        #/// Calculates and returns the <c>ExchRate</c> for this <c>VendTrans</c> in accounting currency.
        #/// </summary>
        #/// <returns>
        #/// Returns the <c>ExchRate</c> for this <c>VendTrans</c> in accounting currency.
        #/// </returns>
        #public display ExchRate displayAccountingExchangeRate()
        #{
        #    ExchangeRateHelper exchangeRateHelper = ExchangeRateHelper::newCurrency(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId), this.CurrencyCode);
        #
        #    return exchangeRateHelper.displayStoredExchangeRate(this.ExchRate);
        #}
        #
      ENDSOURCE
      SOURCE #displayApprover
        #public display DirPartyName displayApprover()
        #{
        #    if (this.Approver)
        #    {
        #        return HcmWorker::worker2Name(this.Approver);
        #    }
        #    else
        #    {
        #        return '';
        #    }
        #}
      ENDSOURCE
      SOURCE #displayDiscountDate
        #display CashDiscdate displayDiscountDate()
        #{
        #    CustVendTransDetails    custVendTransDetails = new CustVendTransDetails(this);
        #
        #    return custVendTransDetails.firstCashDiscDate();
        #}
      ENDSOURCE
      SOURCE #displayDiscountUsed
        #display DiscAmount displayDiscountUsed()
        #{
        #    CustVendTransDetails    custVendTransDetails = new CustVendTransDetails(this);
        #
        #    return custVendTransDetails.utilizedCashDisc();
        #}
      ENDSOURCE
      SOURCE #displayInvoiceDate_TH
        #/// <summary>
        #/// Displays the invoice date.
        #/// </summary>
        #/// <returns>
        #/// The invoice date.
        #/// </returns>
        #//<GTH>
        #public display TaxUnrealizedPurchInvoiceDate displayInvoiceDate_TH()
        #{
        #    TaxUnrealizedPurchInvoiceDate   invoiceDate;
        #
        #    if (this.TransType == LedgerTransType::Purch)
        #    {
        #        if (this.Voucher && this.TransDate)
        #        {
        #            invoiceDate = TaxTrans::find(this.Voucher, this.TransDate).taxTransExtensionTH().InvoiceDate;
        #        }
        #    }
        #
        #    return invoiceDate;
        #}
        #//</GTH>
      ENDSOURCE
      SOURCE #displayInvoiceReceiptDate_TH
        #/// <summary>
        #/// Displays the invoice receipt date.
        #/// </summary>
        #/// <returns>
        #/// The invoice receipt date.
        #/// </returns>
        #//<GTH>
        #public display TaxUnrealizedPurchInvoiceReceiptDate displayInvoiceReceiptDate_TH()
        #{
        #    TaxUnrealizedPurchInvoiceReceiptDate    invoiceReceiptDate;
        #
        #    if (this.TransType == LedgerTransType::Purch)
        #    {
        #        if (this.Voucher && this.TransDate)
        #        {
        #            invoiceReceiptDate = TaxTrans::find(this.Voucher, this.TransDate).taxTransExtensionTH().InvoiceReceiptDate;
        #        }
        #    }
        #
        #    return invoiceReceiptDate;
        #}
        #//</GTH>
      ENDSOURCE
      SOURCE #displayPaymentHold
        #/// <summary>
        #/// Displays the vendor hold level, namely vendor, or invoice, depending on the hold type.
        #/// </summary>
        #/// <returns>
        #/// The enumeration value is returned. The value can be a <c>Vendor</c> value, an <c>Invoice</c> value,
        #/// or empty in case the vendor is not on hold.
        #/// </returns>
        #/// <remarks>
        #/// The display method uses the <c>VendTable</c> form and the <c>VendTrans</c> form to evaluate the
        #/// vendor hold type.
        #/// </remarks>
        #//BP deviation documented
        #public display PaymHold displayPaymentHold()
        #{
        #    PaymHold            paymHold;
        #    InvoiceReleaseDate  transDate;
        #    boolean             isVendReleaseDateExpired;
        #
        #    paymHold = PaymHold::No;
        #    transDate = DateTimeUtil::newDateTime(this.TransDate,0);
        #    isVendReleaseDateExpired = VendTable::isVendReleaseDateExpired(this.AccountNum, transDate);
        #
        #    if (VendTable::blocked(this.AccountNum) != CustVendorBlocked::No &&
        #        !isVendReleaseDateExpired)
        #    {
        #        paymHold = PaymHold::Vendor;
        #    }
        #    if ((this.InvoiceReleaseDate != utcDateTimeNull()                   &&
        #        DateTimeUtil::addDays(this.InvoiceReleaseDate,1) > transDate)   ||
        #        this.Approved == NoYes::No)
        #    {
        #        if (paymHold != PaymHold::No)
        #        {
        #            paymHold = PaymHold::VendInvoice;
        #        }
        #        else
        #        {
        #            paymHold = PaymHold::Invoice;
        #        }
        #    }
        #
        #    return paymHold;
        #}
      ENDSOURCE
      SOURCE #displayPersonnelNumber
        #/// <summary>
        #/// Displays the personnel number of the approver.
        #/// </summary>
        #/// <returns>
        #/// The personnel number of the approver.
        #/// </returns>
        #/// <remarks>
        #/// Do not cache this display method since this method is surfaced only on secondary tabs.
        #/// </remarks>
        #public display HcmPersonnelNumberId displayPersonnelNumber()
        #{
        #    if (!this.Approver)
        #    {
        #        return '';
        #    }
        #
        #    return HcmWorker::find(this.Approver).PersonnelNumber;
        #}
      ENDSOURCE
      SOURCE #displayRealVendName_TH
        #/// <summary>
        #/// Displays the real vendor name.
        #/// </summary>
        #/// <returns>
        #/// The real vendor name.
        #/// </returns>
        #//<GTH>
        #public display TaxUnrealizedPurchRealVendName displayRealVendName_TH()
        #{
        #    TaxUnrealizedPurchRealVendName    realVendName;
        #
        #    if (this.TransType == LedgerTransType::Purch)
        #    {
        #        if (this.Voucher && this.TransDate)
        #        {
        #            realVendName = TaxTrans::find(this.Voucher, this.TransDate).taxTransExtensionTH().RealVendName;
        #        }
        #    }
        #    else if (this.TransType == LedgerTransType::Payment)
        #    {
        #        if (this.Voucher && this.TransDate && this.DocumentNum)
        #        {
        #            realVendName = LedgerJournalTrans::findJournalForVoucher(this.Voucher, this.TransDate).ledgerJournalTransExtensionTH().RealVendName;
        #        }
        #    }
        #
        #    return realVendName;
        #}
        #//</GTH>
      ENDSOURCE
      SOURCE #displayReason
        #/// <summary>
        #/// Displays the reason code value.
        #/// </summary>
        #/// <returns>
        #/// The reason code value.
        #/// </returns>
        #/// <remarks>
        #/// Do not cache this display method since this method is surfaced only on secondary tabs.
        #/// </remarks>
        #public display ReasonCode displayReason()
        #{
        #    return ReasonTableRef::find(this.ReasonRefRecId).Reason;
        #}
      ENDSOURCE
      SOURCE #displayReasonComment
        #/// <summary>
        #/// Displays the reason comment value.
        #/// </summary>
        #/// <returns>
        #/// The reason comment value.
        #/// </returns>
        #/// <remarks>
        #/// Do not cache this display method since this method is surfaced only on secondary tabs.
        #/// </remarks>
        #public display ReasonComment displayReasonComment()
        #{
        #    return ReasonTableRef::find(this.ReasonRefRecId).ReasonComment;
        #}
      ENDSOURCE
      SOURCE #displayRemittanceAddress
        #/// <summary>
        #/// Gets the vendor remittance address associated with the vendor remittance location on the
        #/// <c>VendTable</c> table.
        #/// </summary>
        #/// <returns>
        #/// The current date effective remittance address if the vendor transaction is not closed; otherwise,
        #/// the closed date effective remittance address.
        #/// </returns>
        #/// <remarks>
        #/// The current date effective remittance address is returned if the vendor transaction is not
        #/// closed.The remittance address on the closed date is returned if the vendor transaction is closed.
        #/// </remarks>
        #//BP Deviation Documented
        #public display RemittanceAddressing displayRemittanceAddress()
        #{
        #    if (this.Closed > DateTimeUtil::date(DateTimeUtil::minValue()))
        #    {
        #        return LogisticsPostalAddress::addressFromRecId(this.RemittanceAddress);
        #    }
        #
        #    return LogisticsLocationEntity::location2PostalAddress(this.RemittanceLocation).Address;
        #}
      ENDSOURCE
      SOURCE #displayRemittanceLocationDescription
        #/// <summary>
        #/// Displays the vendor remittance address description associated with the vendor.
        #/// </summary>
        #/// <returns>
        #/// The vendor remittance address description associated with the vendor.
        #/// </returns>
        #/// <remarks>
        #/// Do not cache this display method since this method is surfaced only on secondary tabs.
        #/// </remarks>
        #public display Description displayRemittanceLocationDescription()
        #{
        #    return LogisticsLocation::find(this.RemittanceLocation).Description;
        #}
      ENDSOURCE
      SOURCE #displayTax1099Box
        #/// <summary>
        #/// Displays the <c>Tax1099Box</c> value.
        #/// </summary>
        #/// <returns>
        #/// The <c>Tax1099Box</c> value.
        #/// </returns>
        #/// <remarks>
        #/// Do not cache this display method since this method is surfaced only on secondary tabs.
        #/// </remarks>
        #public display Tax1099Box displayTax1099Box()
        #{
        #    if (!this.Tax1099Fields)
        #    {
        #        return '';
        #    }
        #
        #    return Tax1099Fields::find(this.Tax1099Fields).Tax1099Box;
        #}
      ENDSOURCE
      SOURCE #displayTaxBranchDimension
        #/// <summary>
        #/// Displays the tax branch code depending on the default dimension.
        #/// </summary>
        #/// <returns>
        #/// Returns tax branch code getted by default dimension.
        #/// </returns>
        #//<GTH>
        #display TaxBranchCode displayTaxBranchDimension()
        #{
        #    return TaxBranchType::getTBDisplayValueByDefaultDimension(this.DefaultDimension);
        #}
        #//</GTH>
      ENDSOURCE
      SOURCE #displayTaxInvoiceReceiptDate_TH
        #/// <summary>
        #/// Displays the tax invoice receipt date.
        #/// </summary>
        #/// <returns>
        #/// The tax invoice receipt date.
        #/// </returns>
        #//<GTH>
        #public display TaxUnrealizedPurchTaxInvoiceRcptDate displayTaxInvoiceReceiptDate_TH()
        #{
        #    TaxUnrealizedPurchTaxInvoiceRcptDate    taxInvoiceReceiptDate;
        #
        #    if (this.TransType == LedgerTransType::Purch)
        #    {
        #        if (this.Voucher && this.TransDate && this.DocumentNum)
        #        {
        #            taxInvoiceReceiptDate = TaxTrans::find(this.Voucher, this.TransDate).taxTransExtensionTH().TaxInvoiceReceiptDate;
        #        }
        #    }
        #    else if (this.TransType == LedgerTransType::Payment)
        #    {
        #        if (this.Voucher && this.TransDate && this.DocumentNum)
        #        {
        #            taxInvoiceReceiptDate = LedgerJournalTrans::findJournalForVoucher(this.Voucher, this.TransDate).ledgerJournalTransExtensionTH().TaxInvoiceReceiptDate;
        #        }
        #    }
        #
        #    return taxInvoiceReceiptDate;
        #}
        #//</GTH>
      ENDSOURCE
      SOURCE #displayTaxWithholdAmount_IN
        #/// <summary>
        #/// Gets the tax withhold amount for display.
        #/// </summary>
        #/// <returns>
        #/// The tax withhold amount for display.
        #/// </returns>
        #// <GIN>
        #//BP Deviation Documented
        #display AmountCur displayTaxWithholdAmount_IN()
        #{
        #    TaxWithholdTrans_IN taxWithholdTransLoc;
        #    AmountCur           amountCur;
        #
        #    if (TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        select sum(TaxWithholdAmountCur), TaxType
        #            from taxWithholdTransLoc group by TaxType
        #               where taxWithholdTransLoc.Invoice == this.Invoice;
        #
        #        switch (taxWithholdTransLoc.TaxType)
        #        {
        #            case TaxWithholdCodeType_IN::TCS :
        #            amountCur = abs(taxWithholdTransLoc.TaxWithholdAmountCur);
        #            break;
        #
        #            case TaxWithholdCodeType_IN::TDS:
        #            amountCur = -abs(taxWithholdTransLoc.TaxWithholdAmountCur);
        #            break;
        #        }
        #    }
        #
        #    return amountCur;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #displayTransactionCurAmountCredit_JP
        #/// <summary>
        #/// Display method for the Transaction Currency Amount Credit.
        #/// </summary>
        #/// <returns>
        #/// Transaction Currency Amount Credit.
        #/// </returns>
        #// <GJP>
        #// BP Deviation Documented
        #public display LedgerAmountCurCredit_CN displayTransactionCurAmountCredit_JP()
        #{
        #    if (LedgerShowDebCredController_CN::isShowVendDRsCRsFeatureEnabled_JP())
        #    {
        #        return LedgerShowDebCredRecord_CN::constructFromRecord(this).transactionCurrencyCreditAmount();
        #    }
        #    else
        #    {
        #        return 0;
        #    }
        #}
        #// </GJP>
      ENDSOURCE
      SOURCE #displayTransactionCurAmountDebit_JP
        #/// <summary>
        #/// Display method for the Transaction Currency Amount Debit.
        #/// </summary>
        #/// <returns>
        #/// Transaction Currency Amount Debit.
        #/// </returns>
        #// <GJP>
        #// BP Deviation Documented
        #public display LedgerAmountCurDebit_CN displayTransactionCurAmountDebit_JP()
        #{
        #    if (LedgerShowDebCredController_CN::isShowVendDRsCRsFeatureEnabled_JP())
        #    {
        #        return LedgerShowDebCredRecord_CN::constructFromRecord(this).transactionCurrencyDebitAmount();
        #    }
        #    else
        #    {
        #        return 0;
        #    }
        #}
        #// </GJP>
      ENDSOURCE
      SOURCE #documentDateModified
        #// The method recalculates the due date and the cash disc date of all belonging VendTransOpen
        #// and the cash disc date of all belonging VendTransCashDisc.
        #// The recalculation is based on transferred TransDate.
        #public server void documentDateModified(TransDate _transDate)
        #{
        #    VendTransOpen       vendTransOpen;
        #    VendTable           vendTable;
        #    VendInvoiceJour     vendInvoiceJour;
        #    VendTransCashDisc   vendTransCashDisc;
        #    CashDisc            cashDisc;
        #    ;
        #    while select forupdate vendTransOpen
        #          where vendTransOpen.RefRecId == this.RecId
        #    {
        #        vendTransOpen.DueDate = _transDate;
        #        vendInvoiceJour = VendInvoiceJour::findFromVendTransVoucher(this.Invoice, this.Voucher, this.TransDate, this.AccountNum);
        #        if (vendInvoiceJour && vendInvoiceJour.Payment)
        #        {
        #            vendTransOpen.DueDate = PaymTerm::find(vendInvoiceJour.Payment).due(vendTransOpen.DueDate, vendInvoiceJour.PaymDayId);
        #        }
        #        if (!vendInvoiceJour)
        #        {
        #            vendTable = VendTable::find(this.AccountNum);
        #            if (vendTable && vendTable.PaymTermId)
        #            {
        #                vendTransOpen.DueDate = PaymTerm::find(vendTable.PaymTermId).due(vendTransOpen.DueDate, vendTable.PaymDayId);
        #            }
        #        }
        #
        #        cashDisc = CashDisc::find(this.CashDiscCode);
        #        while select forupdate vendTransCashDisc
        #              where vendTransCashDisc.RefTableId == vendTransOpen.TableId &&
        #                    vendTransCashDisc.RefRecId   == vendTransOpen.RecId
        #        {
        #            if (cashDisc &&
        #                vendTransCashDisc.CashDiscDue == CashDiscDue::CashDisc)
        #            {
        #                vendTransCashDisc.CashDiscdate = CashDisc::cashDiscDate(cashDisc.CashDiscCode, _transDate);
        #                cashDisc = CashDisc::find(cashDisc.CashDiscCodeNext);
        #            }
        #            else if (vendTransCashDisc.CashDiscDue == CashDiscDue::Due)
        #            {
        #                vendTransCashDisc.CashDiscdate = vendTransOpen.DueDate;
        #            }
        #            vendTransCashDisc.update();
        #        }
        #        vendTransOpen.setCashDisc(cashDisc.discDate(_transDate),
        #                                  VendPaymModeTable::find(this.PaymMode).DiscGraceDays);
        #
        #        vendTransOpen.update();
        #        VendPromissoryNoteJour::updateDueDate(this.PromissoryNoteID,vendTransOpen.DueDate);
        #    }
        #}
        #
        #
      ENDSOURCE
      SOURCE #documentInvoiceDate
        #public TransDate documentInvoiceDate()
        #{
        #    return this.DocumentDate ? this.DocumentDate : this.TransDate;
        #}
      ENDSOURCE
      SOURCE #exchRateCurToMst
        #/// <summary>
        #///    Gets the exchange rate from the transaction currency to the monetary standard (MST) currency.
        #/// </summary>
        #/// <returns>
        #///    The exchange rate for the transaction.
        #/// </returns>
        #/// <remarks>
        #///    Returns the <c>ExchRate</c> field if there is no triangulation. If there is triangulation, returns
        #///    the <c>ExchRateSecond</c> field divided by the <c>ExchRate</c> field.
        #/// </remarks>
        #public ExchRate exchRateCurToMst()
        #{
        #    ExchRate combinedRate;
        #    ;
        #
        #    Debug::assert(this.ExchRate != 0);
        #
        #    if (this.CurrencyCode == Ledger::accountingCurrency(CompanyInfo::findDataArea(this.company()).RecId))
        #    {
        #        return 100.0;
        #    }
        #    else if (this.ExchRateSecond == 0)
        #    {
        #        combinedRate = this.ExchRate;
        #    }
        #    else if (this.ExchRate != 0)
        #    {
        #        combinedRate = (this.ExchRateSecond / this.ExchRate) * 100;
        #    }
        #
        #    return combinedRate;
        #}
        #
      ENDSOURCE
      SOURCE #fiscalEstablishmentId_BR
        #/// <summary>
        #/// Gets the fiscal establishment identifier for this vendor transaction
        #/// </summary>
        #/// <returns>
        #/// The fiscal establishment id
        #/// </returns>
        #public display FiscalEstablishmentId_BR fiscalEstablishmentId_BR()
        #{
        #    FiscalEstablishment_BR  fiscalEstablishment;
        #    FiscalEstablishmentVendInvoiceJour_BR vendInvoiceJour;
        #    VendTransPayment_BR vendTransPayment;
        #    ;
        #    if (!BrazilParameters::isEnabled())
        #        return '';
        #
        #    select FiscalEstablishmentId from fiscalEstablishment
        #        exists join vendTransPayment
        #            where vendTransPayment.VendTrans == this.RecId
        #                && fiscalEstablishment.RecId == vendTransPayment.FiscalEstablishment_BR;
        #
        #    if (fiscalEstablishment.FiscalEstablishmentId)
        #    {
        #        return fiscalEstablishment.FiscalEstablishmentId;
        #    }
        #
        #    select FiscalEstablishmentId from fiscalEstablishment
        #        exists join vendInvoiceJour
        #        where fiscalEstablishment.RecId == vendInvoiceJour.FiscalEstablishment_BR   &&
        #              vendInvoiceJour.VendTrans == this.RecId;
        #
        #    return fiscalEstablishment.FiscalEstablishmentId;
        #}
      ENDSOURCE
      SOURCE #getPaymentExtension_BR
        #/// <summary>
        #/// Gets the brazilian extension table for <c>VendTransPayment</c> table
        #/// </summary>
        #/// <param name="_packNewExtensionTable">
        #/// Defines if <c>PAckExtension</c> field will receive a new reference of the extension table
        #/// </param>
        #/// <returns>
        #/// The extension table associated to this base table
        #/// </returns>
        #public VendTransPayment_BR getPaymentExtension_BR(boolean _packNewExtensionTable = true)
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(VendTransPayment_BR), _packNewExtensionTable);
        #}
        #
        #
      ENDSOURCE
      SOURCE #hasPendingInvoice
        #/// <summary>
        #/// Determines whether a pending invoice exists for this <c>VendTrans</c> table record.
        #/// </summary>
        #/// <returns>
        #/// true if a pending invoice exists for this <c>VendTrans</c> table record; otherwise, false.
        #/// </returns>
        #//BP deviation documented
        #[SysClientCacheDataMethodAttribute(true)]
        #public display boolean hasPendingInvoice()
        #{
        #    LedgerJournalVoucherChanged localLedgerJournalVoucherChanged;
        #    LedgerJournalTrans localLedgerJournalTrans;
        #
        #    select firstonly localLedgerJournalTrans
        #        join * from localLedgerJournalVoucherChanged
        #        where localLedgerJournalVoucherChanged.FromVoucher == this.Voucher &&
        #            localLedgerJournalVoucherChanged.JournalNum == this.JournalNum &&
        #            localLedgerJournalVoucherChanged.ToVoucher == localLedgerJournalTrans.Voucher &&
        #            localLedgerJournalVoucherChanged.JournalNum == localLedgerJournalTrans.JournalNum;
        #
        #    return localLedgerJournalTrans.hasPendingInvoice();
        #}
      ENDSOURCE
      SOURCE #initFromLedgerJournalTransApproval
        #public void initFromLedgerJournalTransApproval(LedgerJournalTrans _ledgerJournalTrans)
        #{
        #    this.Invoice            = _ledgerJournalTrans.Invoice;
        #    this.DocumentNum        = _ledgerJournalTrans.DocumentNum;
        #    this.DocumentDate       = _ledgerJournalTrans.DocumentDate;
        #
        #    this.Approver           = _ledgerJournalTrans.Approver;
        #    this.Approved           = this.Approver ? _ledgerJournalTrans.Approved : NoYes::No;
        #    this.TransType          = _ledgerJournalTrans.TransactionType;
        #
        #    this.PaymMode           = _ledgerJournalTrans.PaymMode;
        #    this.PaymSpec           = _ledgerJournalTrans.PaymSpec;
        #    this.PaymReference      = _ledgerJournalTrans.PaymReference;
        #}
      ENDSOURCE
      SOURCE #initFromPostingProfile
        #public void initFromPostingProfile(VendPostingProfile  _vendPostingProfile)
        #{
        #    VendLedger          vendLedger;
        #    VendPostingProfile  vendPostingProfile = _vendPostingProfile;
        #
        #    if (! vendPostingProfile)
        #    {
        #        vendPostingProfile = VendParameters::find().PostingProfile;
        #    }
        #
        #    vendLedger = VendLedger::find(vendPostingProfile);
        #
        #    if (! vendLedger)
        #    {
        #        vendLedger.Settlement       = NoYes::Yes;
        #        vendLedger.Cancel           = NoYes::Yes;
        #        vendLedger.PostingProfile   = '';
        #    }
        #
        #    this.Settlement             = vendLedger.Settlement;
        #    this.Cancel                 = vendLedger.Cancel;
        #    this.PostingProfileClose    = vendLedger.PostingProfileClose;
        #    this.PostingProfile         = vendLedger.PostingProfile;
        #}
      ENDSOURCE
      SOURCE #insert
        #/// <summary>
        #/// Inserts the current record into the <c>VendTrans</c> table.
        #/// </summary>
        #/// <exception cref="M:Exception::Error">
        #/// The currency of the current record is empty.
        #/// </exception>
        #public void insert()
        #{
        #    // <GEERU><GIN>
        #    #ISOCountryRegionCodes
        #    VendTrans_W            vendTrans_W;
        #    // </GIN></GEERU>
        #    // <GBR>
        #    VendTransPayment_BR    vendTransPayment_BR;
        #    // </GBR>
        #    CurrencyExchangeHelper currencyExchangeHelper;
        #    LedgerRecId currentLedgerRecId;
        #    CurrencyCode currentReportingCurrency;
        #
        #    if (this.CurrencyCode == '')
        #    {
        #        throw error(strFmt('%1  %2', tableId2name(this.TableId), "@SYS23229"));
        #    }
        #
        #    if (this.AmountCur == this.SettleAmountCur && this.AmountMST == this.SettleAmountMST)
        #    {
        #        this.Closed = this.TransDate;
        #    }
        #
        #    this.setApprovedDate();
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        vendTrans_W = this.vendTrans_W();
        #        if (!vendTrans_W.DefaultDimensionReporting_RU)
        #        {
        #            vendTrans_W.DefaultDimensionReporting_RU = this.DefaultDimension;
        #            this.packVendTrans_W(vendTrans_W);
        #        }
        #    }
        #    // </GEERU>
        #
        #    ttsbegin;
        #
        #    currentLedgerRecId = Ledger::current();
        #    currentReportingCurrency = Ledger::reportingCurrencyByLedger(currentLedgerRecId);
        #
        #    if (currentReportingCurrency
        #        && this.ReportingCurrencyCrossRate == 0
        #        && this.ReportingCurrencyAmount == 0)
        #    {
        #        currencyExchangeHelper = CurrencyExchangeHelper::newExchangeDate(
        #            currentLedgerRecId,
        #            this.TransDate);
        #        currencyExchangeHelper.parmExchangeRate1(this.ExchRate);
        #        currencyExchangeHelper.parmExchangeRate2(this.ExchRateSecond);
        #
        #        this.ReportingCurrencyAmount = currencyExchangeHelper.calculateTransactionToReporting(
        #            this.CurrencyCode,
        #            this.AmountCur);
        #
        #        // Store the reporting currency exchange rate as a single cross rate between the reporting currency
        #        // and the accounting currency, similar to the way the transaction currency exchange rate is stored.
        #        this.ReportingCurrencyCrossRate = ExchangeRateHelper::getCrossRate_Static(
        #            currentLedgerRecId,
        #            currentReportingCurrency,
        #            this.TransDate);
        #    }
        #
        #    // <GJP>
        #    if (VendConsInvoiceType_JP::isVendConsInvoiceEnabled())
        #    {
        #        this.CustVendTrans::initConsInvoice_JP();
        #    }
        #    // </GJP>
        #
        #    super();
        #
        #    // <GBR>
        #    if (BrazilParameters::isEnabled())
        #    {
        #        vendTransPayment_BR = this.getPaymentExtension_BR();
        #        vendTransPayment_BR.paymspecModified_BR(this.PaymMode, this.PaymSpec);
        #        this.packExtensionTable(vendTransPayment_BR);
        #        this.SysExtensionSerializerMap::postInsert();
        #    }
        #    // </GBR>
        #
        #    if (this.TransType == LedgerTransType::Purch && LedgerParameters::find().IsZakatEnabled_SA)
        #    {
        #        GeneralJournalAccountEntryZakat_SA::updateSubLedgerInformation(this.Voucher, this.TransDate, this.DataAreaId);
        #    }
        #
        #    smmTransLog::initTrans(this, smmLogAction::insert);
        #
        #    // <GIN>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #    {
        #        VendTrans_IN::insertFromVendTrans(this);
        #    }
        #    // </GIN>
        #
        #    // <GEERU>
        #    if (LedgerParameters::find().UsePrecalcData_RU)
        #    {
        #        RLedgerTurnoverType::updatePrecalcData(this, RLedgerTurnoverSheetType::VendTurnover);
        #    }
        #    // </GEERU>
        #
        #
        #    // <GEERU><GIN><GJP>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN, #isoRU, #isoJP]))
        #    {
        #        this.SysExtensionSerializerMap::postInsert();
        #    }
        #    // </GJP></GIN></GEERU>
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #inventProfileType_RU
        #InventProfileType_RU inventProfileType_RU()
        #{
        #    return InventProfileType_RU::General;
        #}
      ENDSOURCE
      SOURCE #isCreditNote
        #public boolean isCreditNote()
        #{
        #    boolean ret = false;
        #
        #    if (this.AmountCur > 0 && this.Invoice)
        #    {
        #        ret = true;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #isPayment_JP
        #/// <summary>
        #/// Indicates whether this transaction is for payment.
        #/// </summary>
        #/// <returns>
        #/// Returns true when this transaction is for payment. Otherwise, returns false.
        #/// </returns>
        #/// <remarks>
        #/// This method is copied from <c>CustTrans</c> table.
        #/// </remarks>
        #// <GJP>
        #public boolean isPayment_JP()
        #{
        #    boolean ret = true;
        #
        #    if (this.Invoice                                        ||
        #        this.TransType == LedgerTransType::Interest         ||
        #        this.TransType == LedgerTransType::ExchAdjustment   ||
        #        this.TransType == LedgerTransType::CollectionLetter)
        #    {
        #        ret = false;
        #    }
        #
        #    return ret;
        #}
        #// </GJP>
        #
      ENDSOURCE
      SOURCE #isReimbursement
        #/// <summary>
        #/// Determines whether the debit transaction is of reimbursement type.
        #/// </summary>
        #/// <returns>
        #/// true if the debit transaction is of reimbursement type otherwise, false.
        #/// </returns>
        #public boolean isReimbursement()
        #{
        #    SubledgerVoucherGeneralJournalEntry localSubledgerVoucherGeneralJournalEntry;
        #    GeneralJournalAccountEntry          localGeneralJournalAccountEntry;
        #    boolean                             isReimbursementType;
        #
        #    localGeneralJournalAccountEntry.skipPostLoad(true);
        #    while select PostingType
        #        from  localGeneralJournalAccountEntry
        #            exists join  localSubledgerVoucherGeneralJournalEntry
        #            where localSubledgerVoucherGeneralJournalEntry.GeneralJournalEntry  == localGeneralJournalAccountEntry.GeneralJournalEntry  &&
        #                  localSubledgerVoucherGeneralJournalEntry.Voucher              == this.Voucher                           &&
        #                  localSubledgerVoucherGeneralJournalEntry.VoucherDataAreaId    == this.DataAreaId                        &&
        #                  localSubledgerVoucherGeneralJournalEntry.AccountingDate       == this.TransDate
        #    {
        #        isReimbursementType = true;
        #
        #        if (localGeneralJournalAccountEntry.PostingType != LedgerPostingType::CustReimbursement)
        #        {
        #            isReimbursementType = false;
        #            break;
        #        }
        #    }
        #
        #    return isReimbursementType;
        #}
      ENDSOURCE
      SOURCE #isTransForConsInvoice_JP
        #/// <summary>
        #/// Indicates whether this transaction is for consolidated invoice.
        #/// </summary>
        #/// <returns>
        #/// Returns true when opposite transaction is for PO and related with consolidated invoice.
        #/// Otherwise, returns false.
        #/// </returns>
        #// <GJP>
        #public boolean isTransForConsInvoice_JP()
        #{
        #    VendTrans   vendTrans;
        #    VendTrans_W vendTrans_W;
        #
        #    select firstonly RecId from vendTrans
        #            where vendTrans.RecId == this.OffsetRecid
        #            && vendTrans.TransType == LedgerTransType::Purch
        #        join VendConsInvoice_JP from vendTrans_W
        #            where vendTrans_W.VendTrans == vendTrans.RecId;
        #    return (vendTrans_W.VendConsInvoice_JP != 0);
        #}
        #// </GJP>
        #
      ENDSOURCE
      SOURCE #isVATTaxAgentPaymentFromVendorFunds_RU
        #public boolean isVATTaxAgentPaymentFromVendorFunds_RU()
        #{
        #    VendInvoiceJour  vendInvoiceJour;
        #    VendInvoiceTrans vendInvoiceTrans;
        #    ;
        #
        #    if (VendTable::find(this.AccountNum).vatTaxAgent_RU  && this.Invoice)
        #    {
        #        vendInvoiceJour = VendInvoiceJour::findFromVendTrans(
        #            this.Invoice,
        #            this.TransDate,
        #            this.AccountNum,
        #            false,
        #            this.Voucher);
        #
        #        select firstonly TaxGroup, TaxItemGroup, RecId from vendInvoiceTrans
        #            where vendInvoiceTrans.PurchID             == vendInvoiceJour.PurchId             &&
        #                  vendInvoiceTrans.InvoiceId           == vendInvoiceJour.InvoiceId           &&
        #                  vendInvoiceTrans.InvoiceDate         == vendInvoiceJour.InvoiceDate         &&
        #                  vendInvoiceTrans.NumberSequenceGroup == vendInvoiceJour.NumberSequenceGroup &&
        #                  vendInvoiceTrans.InternalInvoiceId   == vendInvoiceJour.InternalInvoiceId   &&
        #                  vendInvoiceTrans.TaxGroup                                                   &&
        #                  vendInvoiceTrans.TaxItemGroup;
        #
        #        if (vendInvoiceTrans.RecId &&
        #            TaxTable::find(TaxTable::vatCode_RU(vendInvoiceTrans.TaxGroup,
        #                                                vendInvoiceTrans.TaxItemGroup)).vatChargeSource_RU == VATChargeSource_RU::VendorFunds)
        #            return true;
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #isVendPaymEligibleForTransfer
        #/// <summary>
        #/// Checks if the vendor invoice or payment proposal line is eligible for transfer to the payment
        #/// journal depending on the vendor hold type.
        #/// </summary>
        #/// <param name="_paymDate">
        #/// The payment date
        #/// </param>
        #/// <returns>
        #/// true if the vendor is not on hold; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Vendor hold is imposed on either vendor level or invoice level.
        #/// </remarks>
        #public boolean isVendPaymEligibleForTransfer(TransDate _paymDate = systemDateGet())
        #{
        #    InvoiceReleaseDate invoiceReleaseDate;
        #    InvoiceReleaseDate transDate;
        #
        #    CustVendorBlocked   vendBlocked;
        #    VendAccount         vendAccount;
        #    boolean             isVendReleaseDateExpired;
        #    boolean             ret;
        #
        #    //initializations to the local variables for the local use to avoid repetitive method calls
        #    ret = true;
        #    vendBlocked = VendTable::blocked(this.AccountNum);
        #    vendAccount = this.AccountNum;
        #    invoiceReleaseDate = this.InvoiceReleaseDate;
        #    transDate = DateTimeUtil::newDateTime(_paymDate, 0);
        #    isVendReleaseDateExpired = VendTable::isVendReleaseDateExpired(vendAccount,transDate);
        #
        #    if ((vendBlocked == CustVendorBlocked::All || vendBlocked == CustVendorBlocked::Payment) && !isVendReleaseDateExpired)
        #    {
        #        ret = false;
        #    }
        #    else if (invoiceReleaseDate != utcDateTimeNull() && invoiceReleaseDate > transDate)
        #    {
        #        ret = false;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #languageId
        #//BP Deviation Documented
        #display LanguageId languageId()
        #{
        #    return DirPartyTable::findRec(VendTable::find(this.AccountNum).Party).LanguageId;
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #public void modifiedField(FieldId _fieldId)
        #{
        #    super(_fieldId);
        #
        #    switch (_fieldId)
        #    {
        #        case fieldNum(VendTrans, PaymMode) :
        #            this.PaymModeMap::modifiedPaymMode();
        #            break;
        #        case fieldNum(VendTrans, BankCentralBankPurposeCode):
        #            this.BankCentralBankPurposeText = BankCentralBankPurpose::find(this.BankCentralBankPurposeCode).Text;
        #            break;
        #        case fieldNum(VendTrans, RemittanceLocation) :
        #            this.VendPaymentGroup = '';
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #open
        #//BP Deviation Documented
        #display OpenPosting open()
        #{
        #    return (this.AmountCur != this.SettleAmountCur);
        #}
      ENDSOURCE
      SOURCE #packExtensionTable
        #/// <summary>
        #/// Increments the <paramref name="_sysExtensionSerializerExtensionTableMap"/> to <c>VendTrans</c> PackedExtensions container field.
        #/// </summary>
        #/// <param name="_sysExtensionSerializerExtensionTableMap">
        #/// A <c>SysExtensionSerializerExtensionMap</c> to increment.
        #/// </param>
        #public void packExtensionTable(SysExtensionSerializerExtensionMap _sysExtensionSerializerExtensionTableMap)
        #{
        #    this.SysExtensionSerializerMap::packExtensionTable(_sysExtensionSerializerExtensionTableMap.data());
        #}
        #
      ENDSOURCE
      SOURCE #packVendTrans_W
        #/// <summary>
        #/// Packs the <c>VendTrans_W</c> associated with the current record.
        #/// </summary>
        #/// <param name="_vendTrans_W">
        #/// The <c>VendTrans_W</c> record.
        #/// </param>
        #// <GEERU><GIN><GJP>
        #public void packVendTrans_W(VendTrans_W _vendTrans_W)
        #{
        #    _vendTrans_W.VendTrans = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_vendTrans_W);
        #}
        #// </GJP></GIN></GEERU>
      ENDSOURCE
      SOURCE #possibleCashDisc
        #//BP Deviation Documented
        #display VendCashDiscAmount possibleCashDisc(TransDate _transDate = this.TransDate)
        #{
        #    CustVendTransDetails    custVendTransDetails = new CustVendTransDetails(this, _transDate);
        #
        #    return custVendTransDetails.possibleCashDisc();
        #}
      ENDSOURCE
      SOURCE #postLoad
        #void postLoad()
        #{
        #    if (this.isFieldDataRetrieved(fieldStr(VendTrans, Correct)))
        #    {
        #        // first check only the Correct value because it has the best performance
        #        // and because this method doesn't need to do anything if it is false
        #        // which is the same as unselected
        #        if (this.Correct)
        #        {
        #            // don't check if the field is selected because not doing it has the
        #            // best performance and nothing happens if the field is not selected
        #            this.AmountMST = corrFlagSet(this.AmountMST, 1);
        #            this.AmountCur = corrFlagSet(this.AmountCur, 1);
        #        }
        #
        #        super();
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #psaPaymTermId
        #//BP Deviation Documented
        #display PaymTermId psaPaymTermId()
        #{
        #    return VendTable::find(this.AccountNum).PaymTermId;
        #}
      ENDSOURCE
      SOURCE #psaProjId
        #//BP Deviation Documented
        #display ProjId psaProjId()
        #{
        #    return PurchTable::find(VendInvoiceJour::findFromVendTrans(this.Invoice, this.TransDate, this.AccountNum).PurchId).ProjId;
        #}
      ENDSOURCE
      SOURCE #queryCustVendSettlement
        #public Query queryCustVendSettlement(boolean _update = false)
        #{
        #    DictRelation    dictRelation;
        #    DictField       externDictField;
        #    DictField       dictField;
        #    Query           query = new Query();
        #    QueryBuildDataSource ds;
        #    Counter         c;
        #    ;
        #
        #    ds = query.addDataSource(tableNum(VendSettlement));
        #
        #    dictRelation = new DictRelation(tableNum(VendSettlement));
        #    dictRelation.loadTableRelation(this.TableId);
        #
        #    if (dictRelation.lines())
        #    {
        #        for (c = 1; c <= dictRelation.lines(); c++)
        #        {
        #            externDictField = new DictField(this.TableId, dictRelation.lineExternTableValue(c));
        #            dictField = new DictField(tableNum(VendSettlement), dictRelation.lineTableValue(c));
        #            ds.addRange(dictField.id()).value(queryValue(this.(externDictField.id())));
        #        }
        #    }
        #
        #    ds.update(_update);
        #
        #    return query;
        #}
        #
      ENDSOURCE
      SOURCE #queryCustVendTransOpen
        #Query queryCustVendTransOpen(boolean _update = false)
        #{
        #    DictRelation    dictRelation;
        #    DictField       externdictField;
        #    DictField       dictField;
        #    Query           query = new Query();
        #    Counter         c;
        #    ;
        #
        #    query.addDataSource(tableNum(VendTransOpen));
        #
        #    dictRelation = new DictRelation(tableNum(VendTransOpen));
        #    dictRelation.loadTableRelation(this.TableId);
        #
        #    if (dictRelation.lines())
        #    {
        #        for (c=1; c <= dictRelation.lines(); c++)
        #        {
        #            externdictField   = new DictField(this.TableId,dictRelation.lineExternTableValue(c));
        #            dictField   = new DictField(tableNum(VendTransOpen),dictRelation.lineTableValue(c));
        #            query.dataSourceTable(tableNum(VendTransOpen)).addRange(dictField.id()).value(queryValue(this.(externdictField.id())));
        #        }
        #    }
        #    query.dataSourceTable(tableNum(VendTransOpen)).update(_update);
        #
        #    return query;
        #}
      ENDSOURCE
      SOURCE #remainAmountCur
        #//BP Deviation Documented
        #display AmountCur remainAmountCur()
        #{
        #    return this.transData().remainAmountCur();
        #}
      ENDSOURCE
      SOURCE #remainAmountMST
        #//BP Deviation Documented
        #display AmountMST remainAmountMST()
        #{
        #    return this.transData().remainAmountMST();
        #}
      ENDSOURCE
      SOURCE #reversed
        #//BP Deviation Documented
        #display boolean reversed()
        #{
        #    return TransactionReversalTrans::findTransactionReversalTrans(tableNum(VendTrans), this.RecId).Reversed;
        #}
      ENDSOURCE
      SOURCE #setApprovedDate
        #private void setApprovedDate()
        #{
        #    if (this.Approved)
        #    {
        #        this.ApprovedDate = this.ApprovedDate ? this.ApprovedDate : systemDateGet();
        #    }
        #    else
        #    {
        #        this.ApprovedDate = dateNull();
        #    }
        #}
      ENDSOURCE
      SOURCE #summaryLedgerDimension
        #public LedgerDimensionDefaultAccount summaryLedgerDimension(VendPostingProfile _postingProfile = this.PostingProfile)
        #{
        #    return VendLedgerAccounts::summaryLedgerDimension(this.AccountNum, _postingProfile);
        #}
      ENDSOURCE
      SOURCE #traceNum
        #//BP Deviation Documented
        #display TraceNum traceNum()
        #{
        #    return TransactionReversalTrans::findTransactionReversalTrans(tableNum(VendTrans), this.RecId).TraceNum;
        #}
      ENDSOURCE
      SOURCE #transactionPerDate
        #public void transactionPerDate(TransDate _transDate)
        #{
        #    VendSettlement  vendSettlement;
        #
        #    select sum(SettleAmountCur),sum(SettleAmountMST),sum(ExchAdjustment) from vendSettlement
        #        where vendSettlement.TransRecId == this.RecId &&
        #              vendSettlement.TransDate  > _transDate;
        #
        #        this.SettleAmountCur -= vendSettlement.SettleAmountCur;
        #        this.SettleAmountMST -= vendSettlement.SettleAmountMST;
        #        this.ExchAdjustment  -= vendSettlement.ExchAdjustment;
        #}
      ENDSOURCE
      SOURCE #transData
        #public VendTransData transData()
        #{
        #    return CustVendTransData::construct(this);
        #}
      ENDSOURCE
      SOURCE #transOpen
        #public VendTransOpen transOpen(
        #    DueDate _dueDate = dateNull(),
        #    boolean _forUpdate = false)
        #{
        #    VendTransOpen           vendTransOpen;
        #    ;
        #    vendTransOpen.selectForUpdate(_forUpdate);
        #
        #    if (_dueDate == dateNull())
        #    {
        #         select vendTransOpen where vendTransOpen.RefRecId == this.RecId;
        #    }
        #    else
        #    {
        #         select vendTransOpen where vendTransOpen.RefRecId == this.RecId &&
        #                                    vendTransOpen.DueDate  == _dueDate;
        #    }
        #
        #    return vendTransOpen;
        #}
      ENDSOURCE
      SOURCE #transOpenForVendBank
        #/// <summary>
        #/// Finds the specified record in the <c>VendTransOpen</c> table.
        #/// </summary>
        #/// <param name="_vendBankAccount">
        #/// The <c>ThirdPartyBankAccountId</c> field of the <c>VendTransOpen</c> table to find.
        #/// </param>
        #/// <param name="_dueDate">
        #/// The <c>DueDate</c> field of the <c>VendTransOpen</c> table to find.
        #/// </param>
        #/// <param name="_forUpdate">
        #/// A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// A record of the <c>VendTransOpen</c> table; otherwise, an empty buffer.
        #/// </returns>
        #public VendTransOpen transOpenForVendBank(
        #    VendBank    _vendBankAccount,
        #    DueDate     _dueDate,
        #    boolean     _forUpdate = false)
        #{
        #    VendTransOpen vendTransOpen;
        #
        #    vendTransOpen.selectForUpdate(_forUpdate);
        #
        #    select vendTransOpen where vendTransOpen.RefRecId == this.RecId &&
        #                                vendTransOpen.ThirdPartyBankAccountId  == _vendBankAccount &&
        #                                vendTransOpen.DueDate                  == _dueDate;
        #
        #    return vendTransOpen;
        #}
      ENDSOURCE
      SOURCE #update
        #public void update()
        #{
        #    // <GEEHU>
        #    #ISOCountryRegionCodes
        #    TaxTrans                taxTrans;
        #    TaxTransRefundableVAT   taxTransRefundableVAT;
        #    // </GEEHU>
        #
        #    VendTrans           vendTrans_Orig  = this.orig();
        #    LedgerJournalTrans  ledgerJournalTrans;
        #    CurrencyExchangeHelper currencyExchangeHelper;
        #    LedgerRecId currentLedgerRecId;
        #    CurrencyCode currentReportingCurrency;
        #
        #    ttsbegin;
        #
        #    smmTransLog::initTrans(this, smmLogAction::update);
        #
        #    this.setApprovedDate();
        #
        #    if (this.Approver != vendTrans_Orig.Approver)
        #    {
        #        ledgerJournalTrans.skipDataMethods(true);
        #        update_recordset ledgerJournalTrans
        #            setting Approver = this.Approver
        #            where ledgerJournalTrans.VendTransId == this.RecId;
        #    }
        #
        #    currentLedgerRecId = Ledger::current();
        #    currentReportingCurrency = Ledger::reportingCurrencyByLedger(currentLedgerRecId);
        #
        #    if (currentReportingCurrency
        #        && (vendTrans_Orig.AmountMST != this.AmountMST
        #            && vendTrans_Orig.ReportingCurrencyAmount == this.ReportingCurrencyAmount))
        #    {
        #        // update when Mst amount has been changed, but reporting has not
        #        currencyExchangeHelper = CurrencyExchangeHelper::newExchangeDate(
        #            currentLedgerRecId,
        #            this.TransDate);
        #        currencyExchangeHelper.parmExchangeRate1(this.ExchRate);
        #        currencyExchangeHelper.parmExchangeRate2(this.ExchRateSecond);
        #
        #        this.ReportingCurrencyAmount = currencyExchangeHelper.calculateTransactionToReporting(
        #            this.CurrencyCode,
        #            this.AmountCur);
        #
        #        // Store the reporting currency exchange rate as a single cross rate between the reporting currency
        #        // and the accounting currency, similar to the way the transaction currency exchange rate is stored.
        #        this.ReportingCurrencyCrossRate = ExchangeRateHelper::getCrossRate_Static(
        #            currentLedgerRecId,
        #            currentReportingCurrency,
        #            this.TransDate);
        #    }
        #
        #    // <GJP>
        #    // Consolidated invoice reference will be updated here for transaction of payment.
        #    if (VendConsInvoiceType_JP::isVendConsInvoiceEnabled())
        #    {
        #        this.CustVendTrans::initConsInvoice_JP();
        #    }
        #    // </GJP>
        #
        #    super();
        #
        #    // <GEEHU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]))
        #    {
        #        update_recordset taxTransRefundableVAT
        #            setting SettleDate = this.Closed
        #            exists join taxTrans
        #                where taxTransRefundableVAT.TaxTrans == taxTrans.RecId &&
        #                        taxTrans.Voucher == this.Voucher &&
        #                        taxTrans.TransDate == this.TransDate;
        #    }
        #    // </GEEHU>
        #
        #    if (this.DocumentDate && this.DocumentDate != vendTrans_Orig.DocumentDate)
        #    {
        #        this.documentDateModified(this.DocumentDate);
        #    }
        #    else if (!this.DocumentDate && vendTrans_Orig.DocumentDate)
        #    {
        #        this.documentDateModified(this.TransDate);
        #    }
        #
        #    // <GJP>
        #    if (VendConsInvoiceType_JP::isVendConsInvoiceEnabled())
        #    {
        #        this.CustVendTrans::settleAmountMSTModified_JP();
        #    }
        #    // </GJP>
        #
        #    // <GEERU><GIN><GJP>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN, #isoRU, #isoJP, #isoBR]))
        #    {
        #        this.SysExtensionSerializerMap::postUpdate();
        #    }
        #    // </GJP></GIN></GEERU>
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #validateField
        #public boolean validateField(FieldId _fieldIdToCheck)
        #{
        #    boolean ret;
        #
        #    ret = super(_fieldIdToCheck);
        #
        #    if (ret)
        #    {
        #        switch (_fieldIdToCheck)
        #        {
        #            case fieldNum(VendTrans, CompanyBankAccountId) :
        #                if (!this.allowEditCompanyBankAccountId())
        #                {
        #                    ret = checkFailed("@SYS88327");
        #                }
        #                else
        #                {
        #                    ret = BankAccountTable::checkIsActive(this.CompanyBankAccountId, this.TransDate);
        #                }
        #                break;
        #
        #            case fieldNum(VendTrans, TransDate) :
        #                ret = BankAccountTable::checkIsActive(this.CompanyBankAccountId, this.TransDate);
        #                break;
        #
        #            case fieldNum(VendTrans, ThirdPartyBankAccountId) :
        #                if (!this.allowEditThirdPartyBankAccountId())
        #                {
        #                    ret = checkFailed("@SYS88328");
        #                }
        #                break;
        #
        #            case fieldNum(VendTrans, InvoiceReleaseDate) :
        #                if (this.InvoiceReleaseDate != utcDateTimeNull() && DateTimeUtil::addDays(this.InvoiceReleaseDate,1) < DateTimeUtil::utcNow())
        #                {
        #                    ret = checkFailed(strFmt("@SYS114595"));
        #                }
        #                break;
        #
        #            case fieldNum(VendTrans, VendPaymentGroup) :
        #                ret = VendPaymentGroupManager::validatePaymentGroup(this, false);
        #                break;
        #
        #            case fieldNum(VendTrans, RemittanceLocation) :
        #                ret = VendPaymentGroupManager::validatePaymentGroup(this, true, fieldNum(VendTrans, RemittanceLocation));
        #                break;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #vatTaxAgentAmount_RU
        #public server Amount vatTaxAgentAmount_RU(TaxCode   _taxCode,
        #                                          TransDate _paymDate,
        #                                          boolean   _convertToMST = true)
        #{
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #vatTaxAgentBaseAmount_RU
        #public server TaxBase vatTaxAgentBaseAmount_RU(TaxCode _taxCode)
        #{
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #vatTaxAgentBaseAmountMST_RU
        #public server TaxBase vatTaxAgentBaseAmountMST_RU(TaxCode _taxCode, TransDate _transDate)
        #{
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #vendInvoiceJour
        #/// <summary>
        #/// Retrieves <c>VendInvoiceJour</c> for the given <c>VendTrans</c>.
        #/// </summary>
        #/// <param name="_forupdate">
        #/// True if <c>VendInvoiceJour</c> is to be read with update priveledges.
        #/// </param>
        #/// <returns>
        #/// Returns <c>VendInvoiceJour</c>.
        #/// </returns>
        #public VendInvoiceJour vendInvoiceJour(boolean _forupdate = false)
        #{
        #    VendInvoiceJour vendInvoiceJour;
        #
        #    vendInvoiceJour.selectForUpdate(_forupdate);
        #
        #    select firstonly vendInvoiceJour
        #        where vendInvoiceJour.InvoiceAccount    == this.AccountNum &&
        #              vendInvoiceJour.InvoiceDate       == this.TransDate &&
        #              vendInvoiceJour.InvoiceId         == this.Invoice &&
        #              vendInvoiceJour.LedgerVoucher     == this.Voucher;
        #
        #        return vendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #vendInvoiceJour_RU
        #public VendInvoiceJour vendInvoiceJour_RU(boolean _forupdate = false)
        #{
        #    VendInvoiceJour vendInvoiceJour;
        #    ;
        #
        #    vendInvoiceJour.selectForUpdate(_forupdate);
        #
        #    select firstonly vendInvoiceJour
        #        where vendInvoiceJour.InvoiceAccount    == this.AccountNum &&
        #              vendInvoiceJour.InvoiceDate       == this.TransDate &&
        #              vendInvoiceJour.InvoiceId         == this.Invoice &&
        #              vendInvoiceJour.LedgerVoucher     == this.Voucher;
        #
        #    return vendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #vendTableName
        #//BP Deviation Documented
        #display VendName vendTableName()
        #{
        #    VendTable           vendTable;
        #    DirPartyTable       partyTable;
        #
        #    select firstonly Name from partyTable
        #        join Party, AccountNum from vendTable
        #                where vendTable.Party == partyTable.RecId &&
        #                      vendTable.AccountNum == this.AccountNum;
        #
        #    return partyTable.Name;
        #}
      ENDSOURCE
      SOURCE #vendTrans_W
        #/// <summary>
        #/// Gets the <c>VendTrans_W</c> record associated with the current record.
        #/// </summary>
        #/// <returns>
        #/// The <c>VendTrans_W</c> record.
        #/// </returns>
        #// <GEERU><GIN><GJP>
        #public VendTrans_W vendTrans_W()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(VendTrans_W));
        #}
        #// </GJP></GIN></GEERU>
        #
      ENDSOURCE
      SOURCE #balanceMST
        #public static AmountMST balanceMST(VendAccount _vendAccount)
        #{
        #    VendTrans   vendTrans;
        #    ;
        #    select sum(AmountMST), sum(SettleAmountMST) from vendTrans
        #        where vendTrans.AccountNum == _vendAccount;
        #
        #    return (vendTrans.AmountMST - vendTrans.SettleAmountMST);
        #}
      ENDSOURCE
      SOURCE #calcSettlementOutsideCashDiscDate
        #public server static AmountCur calcSettlementOutsideCashDiscDate(
        #    RecId       _recId,
        #    TransDate   _cashDiscDate)
        #{
        #    AmountCur       amountCur = 0;
        #    VendSettlement  vendSettlementFieldList;
        #    VendTrans       vendTransFieldList;
        #    DiscGraceDays   discGraceDays;
        #    ;
        #
        #    while select OffsetCompany, OffsetRecid, SettleAmountCur from vendSettlementFieldList
        #        where vendSettlementFieldList.TransRecId == _recId
        #    {
        #        changecompany(vendSettlementFieldList.OffsetCompany)
        #        {
        #            select TransDate, PaymMode from vendTransFieldList
        #                where vendTransFieldList.RecId == vendSettlementFieldList.OffsetRecid;
        #
        #            if (vendTransFieldList.TransDate > _cashDiscDate)
        #            {
        #                discGraceDays = VendPaymModeTable::discGraceDays(vendTransFieldList.PaymMode);
        #
        #                if (date2num(vendTransFieldList.TransDate) > date2num(_cashDiscDate) + discGraceDays)
        #                {
        #                    amountCur += vendSettlementFieldList.SettleAmountCur;
        #                }
        #            }
        #        }
        #    }
        #
        #    return  amountCur;
        #}
        #
      ENDSOURCE
      SOURCE #checkExist
        #public static boolean checkExist(RecId _recId )
        #{
        #    boolean ret = true;
        #    ;
        #
        #    if (!VendTrans::exist(_recId))
        #    {
        #        ret = checkFailed(strFmt(VendTrans::txtNotExist(), _recId));
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkIfCanBeSettled_RU
        #//<GEERU>
        ##ISOCountryRegionCodes
        #//</GEERU>
        #public server static boolean checkIfCanBeSettled_RU(VendTrans            _vendTransDebet,
        #                                                    VendTrans            _vendTransCredit,
        #                                                    TransDate            _settlementDate,
        #                                                    DimSettlementType_RU _dimSettlementType = DimSettlementType_RU::None)
        #{
        #    VendInvoiceJour jourDebet,
        #                    jourCredit,
        #                    jourOriginal;
        #
        #    boolean         ret = true;
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]))
        #    {
        #        if (_vendTransDebet.Invoice)
        #        {
        #            ret = PurchBookTable_RU::checkIfCanBeSettled_RU(_vendTransDebet,
        #                                                            _vendTransCredit,
        #                                                            _settlementDate);
        #        }
        #
        #        if (_vendTransCredit.Invoice)
        #        {
        #            ret = ret && PurchBookTable_RU::checkIfCanBeSettled_RU(_vendTransCredit,
        #                                                                   _vendTransDebet,
        #                                                                   _settlementDate);
        #
        #            jourCredit = _vendTransCredit.vendInvoiceJour_RU();
        #            if (jourCredit.CorrectionType_RU == FactureCorrectionType_RU::Revision && jourCredit.creditNote())
        #            {
        #                jourOriginal = VendInvoiceJour::findRecId(jourCredit.refOriginalInvoiceRecId_RU());
        #                if (_vendTransDebet.Invoice)
        #                {
        #                    jourDebet = _vendTransDebet.vendInvoiceJour_RU();
        #                }
        #
        #                if (! _vendTransDebet.Invoice                                                   ||
        #                    ((jourDebet.CorrectionType_RU            != FactureCorrectionType_RU::Revision ||
        #                      jourDebet.refOriginalInvoiceRecId_RU() != jourOriginal.RecId)                &&
        #                      jourDebet.RecId                        != jourOriginal.RecId))
        #                {
        #                    if (jourOriginal.vendTrans().remainAmountMST())
        #                    {
        #                        ret = checkFailed("@SYS4081864");
        #                    }
        #                }
        #            }
        #        }
        #        if (_vendTransDebet.Prepayment)
        #        {
        #            ret = ret && SalesBookTable_RU::checkIfCanBeSettled_RU(_vendTransCredit, _vendTransDebet, _settlementDate);
        #        }
        #
        #        if (_vendTransCredit.Prepayment)
        #        {
        #            ret = ret && SalesBookTable_RU::checkIfCanBeSettled_RU(_vendTransDebet, _vendTransCredit, _settlementDate);
        #        }
        #    }
        #
        #    if (CustVendTransPostingLog_RU::usePostingLog())
        #    {
        #        ret = ret && ! CustVendTransPostingLog_RU::exist(_settlementDate,
        #                                                         _vendTransDebet.TableId,
        #                                                         _vendTransDebet.RecId,
        #                                                         _vendTransCredit.RecId,
        #                                                         _vendTransDebet.company(),
        #                                                         _vendTransCredit.company());
        #    }
        #
        #    if (_dimSettlementType != DimSettlementType_RU::None)
        #    {
        #        ret = ret && CustVendSettle::checkTransDimension_RU(_vendTransDebet, _vendTransCredit, _dimSettlementType);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkReversal
        #public static boolean checkReversal(VendTrans    _vendTrans)
        #{
        #    boolean                     ret = false;
        #    TransactionReversalTrans    transactionReversalTrans;
        #    SpecTransManager            specTransManager;
        #    VendTransOpen               vendTransOpen;
        #    CustTrans                   custTrans;
        #
        #    transactionReversalTrans = TransactionReversalTrans::findTransactionReversalTrans(tableNum(VendTrans), _vendTrans.RecId);
        #
        #    if (_vendTrans.SettleAmountCur)
        #    {
        #        if (transactionReversalTrans.Reversed)
        #            ret = true;
        #    }
        #    else
        #    {
        #        if (!transactionReversalTrans.Reversed || transactionReversalTrans.Original)
        #            ret = true;
        #    }
        #
        #    if (_vendTrans.PaymId && (_vendTrans.SettleAmountCur || _vendTrans.SettleAmountMST) ||
        #        _vendTrans.PromissoryNoteID ||
        #        ! _vendTrans.Approved        )
        #    {
        #        ret = false;
        #    }
        #
        #    if (_vendTrans.TransType            == LedgerTransType::ExchAdjustment ||
        #        _vendTrans.PromissoryNoteStatus == CustVendNegInstStatus::InvoiceRemitted)
        #    {
        #        ret = false;
        #    }
        #
        #    if (_vendTrans.BankLCImportLine != 0)
        #    {
        #        ret = false;
        #    }
        #
        #    // If any settlements are pending on unposted payments, disallow reversals.
        #    specTransManager = SpecTransManager::construct(_vendTrans);
        #    vendTransOpen = VendTransOpen::findRefId(_vendTrans.RecId);
        #
        #    if(specTransManager.existForOtherSpec(vendTransOpen.company(), vendTransOpen.TableId, vendTransOpen.RecId))
        #    {
        #        ret = false;
        #    }
        #
        #    if (ret)
        #    {
        #        ret = _vendTrans.CustVendTrans::checkMultiTransByVoucherDate();
        #    }
        #
        #    if (ret)
        #    {
        #        // if there is a custTrans on the same voucher and it is settled, do not allow reversal
        #        select firstonly RecId, SettleAmountCur from custTrans
        #            where custTrans.Voucher == _vendTrans.Voucher
        #               && custTrans.TransDate == _vendTrans.TransDate;
        #
        #        if (custTrans.RecId && (custTrans.SettleAmountCur != 0))
        #        {
        #            // check if the settled amount is set because it was reversed
        #            if (!transactionReversalTrans.Reversed)
        #            {
        #                ret = false;
        #            }
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #chkVendTransReorg
        #public static server boolean chkVendTransReorg(
        #    TableId     _tableId,
        #    RecId       _recId,
        #    VendAccount _vendAccount)
        #{
        #    SpecTrans       specTransLocal;
        #    VendTransOpen   vendTransOpenLocal;
        #    VendTrans       vendTransLocal;
        #    CurrencyCode    currencyCodeLocal = '';
        #    RecId           controlId;
        #    Voucher         voucherLocal;
        #
        #    vendTransLocal.skipPostLoad(true);
        #    // This is called in the context of a changeCompany statement which explains the use of curext()
        #    while select forceselectorder crossCompany RefTableId, RefRecId, Code, Balance01 from specTransLocal
        #        where specTransLocal.SpecTableId == _tableId
        #            && specTransLocal.SpecRecId == _recId
        #            && specTransLocal.SpecCompany == curext()
        #        join RefRecId, AmountCur from vendTransOpenLocal
        #            where vendTransOpenLocal.TableId == specTransLocal.RefTableId
        #                && vendTransOpenLocal.RecId == specTransLocal.RefRecId
        #                && vendTransOpenLocal.DataAreaId == specTransLocal.RefCompany
        #        join CurrencyCode, AmountCur, Invoice, Voucher from vendTransLocal
        #            where vendTransLocal.RecId == vendTransOpenLocal.RefRecId &&
        #                  vendTransLocal.AccountNum == _vendAccount
        #    {
        #        if (specTransLocal.Code != currencyCodeLocal)
        #        {
        #            if (currencyCodeLocal)
        #            {
        #                return false;
        #            }
        #            currencyCodeLocal = vendTransLocal.CurrencyCode;
        #        }
        #        if (vendTransLocal.RecId != controlId)
        #        {
        #            if(!controlId)
        #            {
        #                controlId = vendTransLocal.RecId;
        #            }
        #            else
        #            {
        #                return false;
        #            }
        #        }
        #
        #        if (vendTransLocal.Voucher != voucherLocal)
        #        {
        #            if(!voucherLocal)
        #            {
        #                voucherLocal = vendTransLocal.Voucher;
        #            }
        #            else
        #            {
        #                return false;
        #            }
        #        }
        #        if (vendTransOpenLocal.AmountCur != specTransLocal.Balance01)
        #        {
        #            return false;
        #        }
        #    }
        #
        #    return true;
        #}
        #
      ENDSOURCE
      SOURCE #exist
        #public static boolean exist(RecId _recId )
        #{
        #    boolean found;
        #    ;
        #
        #    found = (select firstonly
        #                 RecId
        #            from
        #                 vendTrans
        #             where
        #                 vendTrans.RecId == _recId).RecId != 0;
        #
        #    return found;
        #}
      ENDSOURCE
      SOURCE #existForSubledgerJournal
        #/// <summary>
        #/// Indicates whether a subledger voucher is used by a vendor subledger journal transaction.
        #/// </summary>
        #/// <param name="_subledgerVoucher">
        #/// The subledger voucher.
        #/// </param>
        #/// <param name="_subledgerVoucherDataAreaId">
        #/// The subledger voucher data area ID.
        #/// </param>
        #/// <param name="_accountingDate">
        #/// The accounting date.
        #/// </param>
        #/// <param name="_reverseExistCheck">
        #/// A Boolean value that determines whether to reverse the exist check; optional.
        #/// </param>
        #/// <returns>
        #/// true if the subledger voucher is used by a vendor subledger voucher transaction; otherwise, false.
        #/// </returns>
        #public static boolean existForSubledgerJournal(
        #    Voucher _subledgerVoucher,
        #    SelectableDataArea _subledgerVoucherDataAreaId,
        #    TransDate _accountingDate,
        #    boolean _reverseExistCheck = false)
        #{
        #    VendTrans vendTrans;
        #    SubledgerVoucherGeneralJournalEntry subledgerVoucherLink;
        #    GeneralJournalEntry generalJournalEntry;
        #    GeneralJournalAccountEntry generalJournalAccountEntry;
        #    AccountingEvent accountingEvent;
        #    SubledgerJournalAccountEntry subledgerJournalAccountEntry;
        #    SubledgerJournalEntry subledgerJournalEntry;
        #
        #    changecompany(_subledgerVoucherDataAreaId)
        #    {
        #        select RecId from vendTrans
        #            where vendTrans.Voucher == _subledgerVoucher
        #                && vendTrans.TransDate == _accountingDate
        #        exists join accountingEvent
        #            where accountingEvent.RecId == vendTrans.AccountingEvent
        #        exists join subledgerJournalEntry
        #            where subledgerJournalEntry.AccountingEvent == accountingEvent.RecId
        #        exists join subledgerJournalAccountEntry
        #            where subledgerJournalAccountEntry.SubledgerJournalEntry == subledgerJournalEntry.RecId
        #        exists join generalJournalAccountEntry
        #            where generalJournalAccountEntry.RecId == subledgerJournalAccountEntry.GeneralJournalAccountEntry
        #        exists join generalJournalEntry
        #            where generalJournalEntry.RecId == generalJournalAccountEntry.GeneralJournalEntry
        #                && generalJournalEntry.Ledger == Ledger::current()
        #        exists join subledgerVoucherLink
        #            where subledgerVoucherLink.GeneralJournalEntry == generalJournalEntry.RecId
        #                && subledgerVoucherLink.AccountingDate == vendTrans.TransDate
        #                && subledgerVoucherLink.Voucher == vendTrans.Voucher
        #                && subledgerVoucherLink.VoucherDataAreaId == vendTrans.DataAreaId;
        #
        #        if (_reverseExistCheck)
        #        {
        #            return vendTrans == null;
        #        }
        #        else
        #        {
        #            return vendTrans != null;
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #existForSubledgerJournal_BR
        #/// <summary>
        #/// Verifies whether there is a <c>VendInvoiceJour</c> associated with the voucher and whether it generates vendor transactions.
        #/// </summary>
        #/// <param name="_subledgerVoucher">
        #/// The subledger voucher.
        #/// </param>
        #/// <param name="_subledgerVoucherDataAreaId">
        #/// The subledger voucher data area ID.
        #/// </param>
        #/// <param name="_accountingDate">
        #/// The accounting date.
        #/// </param>
        #/// <returns>
        #/// true if there is a <c>VendInvoiceJour</c> associated with the voucher and whether it generates vendor
        #/// transactions; otherwise, false.
        #/// </returns>
        #public static boolean existForSubledgerJournal_BR(
        #    Voucher _subledgerVoucher,
        #    SelectableDataArea _subledgerVoucherDataAreaId,
        #    TransDate _accountingDate)
        #{
        #    VendInvoiceJour     vendInvoiceJour;
        #
        #    changecompany(_subledgerVoucherDataAreaId)
        #    {
        #        select firstonly vendInvoiceJour
        #            where vendInvoiceJour.LedgerVoucher == _subledgerVoucher
        #                && vendInvoiceJour.InvoiceDate == _accountingDate;
        #        if (vendInvoiceJour
        #            && !vendInvoiceJour.createVendTrans_BR())
        #        {
        #            return true;
        #        }
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existsVendPaymReconciliationImport_SEBG
        #/// <summary>
        #/// Determines if the <c>VendPaymReconciliationImport_SEBG</c> is being used as a return format on an open vendor invoice.
        #/// </summary>
        #/// <returns>
        #/// True if the <c>VendPaymReconciliationImport_SEBG</c> is being used as a return format on an open vendor invoice.
        #/// </returns>
        #public static boolean existsVendPaymReconciliationImport_SEBG()
        #{
        #    VendTrans           vendTrans;
        #    VendTransOpen       vendTransOpen;
        #    VendPaymModeTable   vendPaymModeTable;
        #    boolean             isFound;
        #
        #    select firstonly RecId from vendTransOpen
        #        exists join vendTrans
        #            where vendTrans.RecId == vendTransOpen.RefRecId
        #        exists join vendPaymModeTable
        #            where vendPaymModeTable.PaymMode == vendTrans.PaymMode
        #                && vendPaymModeTable.ClassIdReturn == classNum(VendPaymReconciliationImport_SEBG);
        #
        #    isFound = (vendTransOpen.RecId != 0);
        #
        #    return isFound;
        #
        #}
      ENDSOURCE
      SOURCE #find
        #public static VendTrans find(
        #    RecId _recId ,
        #    boolean                 _forupdate = false,
        #    ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    VendTrans vendTrans;
        #
        #    vendTrans.selectForUpdate(_forupdate);
        #    if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        #    {
        #        vendTrans.concurrencyModel(_concurrencyModel);
        #    }
        #
        #    select firstonly
        #        vendTrans
        #        where
        #        vendTrans.RecId == _recId;
        #
        #    return vendTrans;
        #}
      ENDSOURCE
      SOURCE #findAccountVoucherDate
        #public static VendTrans findAccountVoucherDate(VendAccount _vendAccount, Voucher _voucher, TransDate _transDate)
        #{
        #    VendTrans   vendTrans;
        #
        #    select firstonly vendTrans
        #        where vendTrans.AccountNum == _vendAccount &&
        #              vendTrans.Voucher    == _voucher     &&
        #              vendTrans.TransDate  == _transDate;
        #
        #    return vendTrans;
        #}
      ENDSOURCE
      SOURCE #findByCompany
        #public static VendTrans findByCompany(
        #    CompanyId _companyId,
        #    RecId _recId ,
        #    boolean                 _forupdate = false,
        #    ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    VendTrans vendTrans;
        #
        #    changecompany (_companyId)
        #    {
        #        vendTrans = VendTrans::find(_recId, _forupdate, _concurrencyModel);
        #    }
        #
        #    return vendTrans;
        #}
        #
      ENDSOURCE
      SOURCE #findByJournalNum
        #public static VendTrans findByJournalNum(
        #    JournalNumNotPosted  _journalNum,
        #    TransDate   _transDate)
        #{
        #    VendTrans vendTrans;
        #
        #    if (_journalNum && _transDate)
        #    {
        #        select firstonly vendTrans
        #            index hint VoucherDateIdx
        #            where vendTrans.JournalNum == _journalNum &&
        #                  vendTrans.TransDate == _transDate;
        #    }
        #
        #    return vendTrans;
        #}
        #
      ENDSOURCE
      SOURCE #findRefVoucher_IN
        #/// <summary>
        #/// Finds ref voucher information.
        #/// </summary>
        #/// <param name="_voucher">
        #/// The voucher information.
        #/// </param>
        #/// <returns>
        #/// The instance of the <c>VendTrans</c> class.
        #/// </returns>
        #// <GIN>
        #public static VendTrans findRefVoucher_IN(Voucher _voucher)
        #{
        #    VendTrans   vendTrans;
        #    VendTrans_W vendTrans_W;
        #
        #    if (_voucher)
        #    {
        #        select firstonly vendTrans
        #                where vendTrans.Voucher             == _voucher
        #            exists join vendTrans_W
        #                where vendTrans_W.VendTrans         == vendTrans.RecId &&
        #                      vendTrans_W.AdvancePayment_IN   == NoYes::Yes;
        #    }
        #
        #    return vendTrans;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #findVoucherDate
        #public static VendTrans findVoucherDate(
        #    Voucher     _voucher,
        #    TransDate   _transDate)
        #{
        #    VendTrans vendTrans;
        #
        #    if (_voucher && _transDate)
        #    {
        #        select firstonly vendTrans
        #            index hint VoucherDateIdx
        #            where vendTrans.Voucher    == _voucher &&
        #                  vendTrans.TransDate  == _transDate;
        #    }
        #
        #    return vendTrans;
        #}
      ENDSOURCE
      SOURCE #findVoucherDateType
        #/// <summary>
        #///    Returns a <c>VendTrans</c> table record for a given voucher, transaction, and transaction type.
        #/// </summary>
        #/// <param name="_voucher">
        #///    The <c>Voucher</c> to search for.
        #/// </param>
        #/// <param name="_transDate">
        #///    The <c>TransDate</c> to search for.
        #/// </param>
        #/// <param name="_transType">
        #///    The <c>TransType</c> to search for.
        #/// </param>
        #/// <returns>
        #///    A <c>VendTrans</c> table record if found.
        #/// </returns>
        #public static VendTrans findVoucherDateType(
        #    Voucher           _voucher,
        #    TransDate         _transDate,
        #    LedgerTransType   _transType)
        #{
        #    VendTrans vendTrans;
        #
        #    if (_voucher && _transDate)
        #    {
        #        select firstonly vendTrans
        #            where vendTrans.Voucher    == _voucher &&
        #                  vendTrans.TransDate  == _transDate &&
        #                  vendTrans.TransType  == _transType;
        #    }
        #
        #    return vendTrans;
        #}
        #
      ENDSOURCE
      SOURCE #getSettleInvoiceCount
        #/// <summary>
        #/// Retrieves the number of invoices settled with the given payment record ID.
        #/// </summary>
        #/// <param name="_vendTransRecID">
        #/// The payment record ID.
        #/// </param>
        #/// <returns>
        #/// The number of invoices settled.
        #/// </returns>
        #public static int getSettleInvoiceCount(RecId _vendTransRecID)
        #{
        #    VendTrans vendTrans;
        #    ;
        #
        #    select crosscompany count(RecId) from vendTrans
        #    where vendTrans.OffsetRecid == _vendTransRecID;
        #
        #
        #    return any2int(vendTrans.RecId);
        #}
      ENDSOURCE
      SOURCE #hasLCRelatedTransToBeReversed
        #/// <summary>
        #/// Indicates whether there is any Letter of Credit that is related to the <c>VendTrans</c> record that
        #/// has to be reversed.
        #/// </summary>
        #/// <param name="_vendTable">
        #/// The vender to check.
        #/// </param>
        #/// <returns>
        #/// true if there is any Letter of Credit that is related to the <c>VendTrans</c> record that has to be
        #/// reversed; otherwise, false.
        #/// </returns>
        #public static boolean hasLCRelatedTransToBeReversed(VendTable _vendTable)
        #{
        #    boolean         ret = false;
        #    SpecTrans       specTransLocal;
        #    VendSettlement  vendSettlementLocal;
        #    VendTrans       vendTransLocal;
        #
        #    if (BankLCImportFeatureChecker::checkBankLCImportEnabled())
        #    {
        #        select firstonly RecId from specTransLocal
        #            where specTransLocal.SpecCompany  == _vendTable.company()
        #                && specTransLocal.SpecTableId == _vendTable.TableId
        #                && specTransLocal.SpecRecId   == _vendTable.RecId
        #            exists join RecId from vendSettlementLocal
        #                where vendSettlementLocal.TableId     == specTransLocal.RefTableId
        #                    && vendSettlementLocal.RecId      == specTransLocal.RefRecId
        #                    && vendSettlementLocal.DataAreaId == specTransLocal.RefCompany
        #            exists join RecId from vendTransLocal
        #                where vendTransLocal.RecId             == vendSettlementLocal.TransRecId
        #                    && vendTransLocal.AccountNum       == vendSettlementLocal.AccountNum
        #                    && vendTransLocal.DataAreaId       == vendSettlementLocal.TransCompany
        #                    && vendTransLocal.BankLCImportLine != 0;
        #        if (specTransLocal.RecId != 0)
        #        {
        #            // Letter of Credit related transaction could not be reversed.
        #            checkFailed("@SYS321799");
        #            ret = true;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #initVendBalance
        #public static server AmountMST initVendBalance(CustVendAC   _custVendAC)
        #{
        #    VendTrans  vendTrans;
        #    ;
        #    select sum (AmountMST) from vendTrans
        #    where vendTrans.AccountNum == _custVendAC;
        #
        #    return vendTrans.AmountMST;
        #}
      ENDSOURCE
      SOURCE #reverseTransact
        #public server static boolean reverseTransact(
        #    Common          _common,
        #    LedgerVoucher   _parentLedgerVoucher  = null,
        #    SettleDatePrinc _datePrinciple  = SettleDatePrinc::DateOfPayment,
        #    // <GEERU>
        #    TransDate       _saveDate       = dateNull(),
        #    boolean         _useDatePrinciple = true,
        #    // </GEERU>
        #    // <GBR>
        #    Voucher         _paymentVoucher = '')
        #    // </GBR>
        #{
        #    LedgerVoucher           reversalLedgerVoucher;
        #    CustVendReversePosting  custVendReversePosting;
        #    TransDate               transDate;
        #    LedgerVoucherGroup      ledgerVoucherGroup;
        #    VendTable               vendTable;
        #    LedgerJournalTrans      ledgerJournalTrans;
        #    str                     account;
        #    // <GEERU>
        #    SettleDatePrinc         datePrinciple;
        #    #ISOCountryRegionCodes
        #    boolean                 countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        #    // </GEERU>
        #    ;
        #
        #    switch (_common.TableId)
        #    {
        #        case tableNum(VendTable) :
        #            vendTable = _common;
        #            transDate = vendTable.getSettleDate(_datePrinciple, _saveDate);
        #            account = vendTable.AccountNum;
        #            break;
        #
        #        case tableNum(LedgerJournalTrans) :
        #            ledgerJournalTrans = _common;
        #            transDate = ledgerJournalTrans.TransDate;
        #            account = ledgerJournalTrans.parmAccount();
        #            break;
        #
        #        default:
        #            throw error(Error::wrongUseOfFunction(funcName()));
        #    }
        #
        #    ttsbegin;
        #
        #    ledgerVoucherGroup = LedgerVoucherGroup::construct();
        #
        #    custVendReversePosting = CustVendReversePosting::construct(_common, ledgerVoucherGroup);
        #    custVendReversePosting.parmTransDate(transDate);
        #    // <GEERU>
        #    if (! TaxParameters::find().ReverseSettlementDatePrinciple_W
        #     && ! countryRegion_RU)
        #    {
        #    // </GEERU>
        #        custVendReversePosting.parmDatePrinciple(_datePrinciple);
        #    // <GEERU>
        #    }
        #    if (countryRegion_RU)
        #    {
        #        datePrinciple = custVendReversePosting.parmDatePrinciple();
        #    }
        #    // </GEERU>
        #    if (_parentLedgerVoucher != null)
        #    {
        #        custVendReversePosting.parmParentVoucher(_parentLedgerVoucher.lastVoucher());
        #    }
        #    // <GEERU>
        #    if (countryRegion_RU
        #        && ! _useDatePrinciple)
        #    {
        #        custVendReversePosting.parmDatePrinciple(_datePrinciple);
        #        custVendReversePosting.parmSaveDate_W(_saveDate);
        #    }
        #    // </GEERU>
        #
        #    // <GBR>
        #    if (BrazilParameters::isEnabled())
        #    {
        #        custVendReversePosting.parmPaymentVoucher_BR(_paymentVoucher);
        #    }
        #    // <GBR>
        #
        #    custVendReversePosting.updateNow();
        #    // <GEERU>
        #    if (countryRegion_RU)
        #    {
        #        custVendReversePosting.parmDatePrinciple(datePrinciple);
        #    }
        #    // </GEERU>
        #
        #    // Validate and post the ledger voucher group for reverse settlement
        #    ledgerVoucherGroup.end();
        #
        #    if (countryRegion_RU)
        #    {
        #        CustVendReversePostingLog_RU::createTransLink(custVendReversePosting.parmReversePostingLogSet_RU());
        #    }
        #
        #    // if the _parentLedgerVoucher was passed is not null this means that this reversal is being done in the
        #    // same database transactions as the some other transaction, and these transaction must be linked.
        #    // The _parentLedgerVoucher is null this means that the reversal is not being done as part of a larger
        #    // transaction, this is not an error.
        #    if (_parentLedgerVoucher != null && _parentLedgerVoucher.parmCompanyId() == curext())
        #    {
        #        reversalLedgerVoucher = ledgerVoucherGroup.findLedgerVoucher(curext(), custVendReversePosting.findNumberSequenceCodeByCompany(curext()));
        #
        #        if (reversalLedgerVoucher != null)
        #        {
        #            reversalLedgerVoucher.createVoucherLinks(_parentLedgerVoucher.lastVoucher(), _parentLedgerVoucher.lastTransDate());
        #        }
        #    }
        #
        #    TransactionLog::create(TransactionLogType::VendTransEdit, strFmt("@SYS82246", account));
        #
        #    ledgerVoucherGroup.createTransactionLog(TransactionLogType::VendTransEdit, "@SYS91317");
        #
        #    ttscommit;
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #reverseTransactOld
        #public server static boolean reverseTransactOld(VendTable _vendTable)
        #{
        #    LedgerVoucher               ledgerVoucher;
        #    NumberSeq                   numberSeq;
        #    CustVendReversePostingOld   custVendReversePostingOld;
        #    TransDate                   transactionDate;
        #    SpecTrans                   specTransFieldList;
        #    VendTrans                   vendTransFieldList;
        #    AmountMST                   settleAmountMST;
        #
        #    ;
        #
        #    transactionDate = systemDateGet();
        #
        #    while select Balance01 from specTransFieldList
        #        where specTransFieldList.SpecTableId   == _vendTable.TableId
        #           && specTransFieldList.SpecRecId     == _vendTable.RecId
        #    join CurrencyCode, TransDate from vendTransFieldList
        #        where vendTransFieldList.TableId    == specTransFieldList.RefTableId
        #           && vendTransFieldList.RecId      == specTransFieldList.RefRecId
        #    {
        #        settleAmountMST -= Currency::mstAmount(specTransFieldList.Balance01,
        #                                               vendTransFieldList.CurrencyCode,
        #                                               vendTransFieldList.TransDate);
        #    }
        #    if (settleAmountMST > VendParameters::find().MaxMSTDiff)
        #        return checkFailed(strFmt("@SYS19048",settleAmountMST));
        #
        #    ttsbegin;
        #    numberSeq     = NumberSeq::newGetVoucher(VendParameters::numRefVendPaymentVoucher());
        #
        #    ledgerVoucher = LedgerVoucher::newLedgerPost(DetailSummary::Summary,
        #                                                SysModule::Vend,
        #                                                numberSeq.parmVoucherSequenceCode());
        #
        #    ledgerVoucher.parmCheckBlockedDimensions(false);
        #
        #    ledgerVoucher.addVoucher(
        #        LedgerVoucherObject::newVoucher(numberSeq.voucher(),
        #                                        transactionDate,
        #                                        SysModule::Vend,
        #                                        LedgerTransType::Vend));
        #
        #    custVendReversePostingOld = CustVendReversePostingOld::construct(SysModule::Vend,
        #                                                               _vendTable,
        #                                                               ledgerVoucher);
        #
        #    custVendReversePostingOld.updateNow();
        #
        #    ledgerVoucher.end();
        #
        #    TransactionLog::create(TransactionLogType::VendTransEdit, strFmt("@SYS82246", _vendTable.AccountNum));
        #
        #    ttscommit;
        #    return true;
        #}
      ENDSOURCE
      SOURCE #settleTransact
        #public server static boolean settleTransact(
        #    VendTable       _vendTable,
        #    LedgerVoucher   _ledgerVoucher          = null,
        #    boolean         _balancePostingProfile  = true,
        #    SettleDatePrinc _saveDatePrinciple      = SettleDatePrinc::DateOfPayment,
        #    TransDate       _saveDate               = dateNull()
        #    // <GEERU>
        #    ,DimSettlementType_RU _dimSettlementType      = DimSettlementType_RU::None
        #    // </GEERU>
        #    )
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #
        #    #OCCRetryCount
        #    LedgerVoucher   ledgerVoucher = _ledgerVoucher;
        #    TransDate       transDate;
        #    VendTrans       vendTrans;
        #    VendTransData   vendTransData;
        #    ;
        #
        #    transDate = _vendTable.getSettleDate(_saveDatePrinciple, _saveDate);
        #
        #    try
        #    {
        #        ttsbegin;
        #
        #        vendTransData = vendTrans.transData();
        #        // set the datePrinciple and selected date variable before calling updateOffsetVoucher.
        #        // These variables are used in the updateOffsetVoucher method.
        #        vendTransData.parmDatePrinciple(_saveDatePrinciple);
        #        vendTransData.parmSelectedDate(_saveDate);
        #        vendTransData.updateOffsetVoucher(SettlementType::SelectedTransact,
        #                                                  ledgerVoucher,
        #                                                  _vendTable,
        #                                                  _balancePostingProfile
        #                                                  // <GEERU>
        #                                                  ,SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) ? _dimSettlementType : DimSettlementType_RU::None
        #                                                  // </GEERU>
        #                                                  );
        #
        #        TransactionLog::create(TransactionLogType::VendTransEdit, strFmt("@SYS82246", _vendTable.AccountNum));
        #
        #        ttscommit;
        #    }
        #
        #    catch (Exception::Deadlock)
        #    {
        #        retry;
        #    }
        #
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #
        #    return true;
        #
        #}
      ENDSOURCE
      SOURCE #txtNotExist
        #public static TxtNotExist txtNotExist()
        #{
        #    return "@SYS102169";
        #}
      ENDSOURCE
    ENDMETHODS
    EVENTS
      METHOD #checkReversal
        EVENTHANDLERS
          EVENTHANDLER #checkReverseEventHandler
            PROPERTIES
              CalledWhen          #Post
              Class               #CustBillOfExchangeEndorseEventHandler
              Method              #checkReversalHandler
              AOTlink             #\Classes\CustBillOfExchangeEndorseEventHandler\checkReversalHandler
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #existForSubledgerJournal
        EVENTHANDLERS
          EVENTHANDLER #existForSubledgerJournalHandler_BR
            PROPERTIES
              CalledWhen          #Post
              Class               #vendtranshandler_BR
              Method              #postExistForSubledgerJournal
              AOTlink             #\Classes\vendtranshandler_BR\postExistForSubledgerJournal
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
    ENDEVENTS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : TmpCustVendTransReorg unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #TmpCustVendTransReorg
    EnforceFKRelation 0
    PROPERTIES
      Name                #TmpCustVendTransReorg
      Label               #@SYS58460
      TableType           #InMemory
      TableGroup          #Transaction
      Origin              #{2C1503B1-0000-1000-A1A2-0881B7F20054}
      LegacyId            #945
    ENDPROPERTIES
    
    FIELDS
      FIELD #AmountCur
        REAL
        PROPERTIES
          Name                #AmountCur
          Table               #TmpCustVendTransReorg
          Origin              #{0E116A14-60BC-45B9-8303-91C4A9B463E5}
          LegacyId            #3
          ExtendedDataType    #NonNegAmountCur
        ENDPROPERTIES
        
      FIELD #AmountMST
        REAL
        PROPERTIES
          Name                #AmountMST
          Table               #TmpCustVendTransReorg
          Origin              #{69A8244C-375B-4E88-BB40-761951B8CA5A}
          LegacyId            #4
          ExtendedDataType    #AmountMST
        ENDPROPERTIES
        
      FIELD #CustVendTransPct
        REAL
        PROPERTIES
          Name                #CustVendTransPct
          Table               #TmpCustVendTransReorg
          Origin              #{0DF255DF-7151-4521-8F5B-ADB868EF9A67}
          LegacyId            #2
          ExtendedDataType    #CustVendTransPct
        ENDPROPERTIES
        
      FIELD #Description
        STRING
        PROPERTIES
          Name                #Description
          Table               #TmpCustVendTransReorg
          Origin              #{5EA224F5-5D88-426C-87BC-56BF889CE983}
          ExtendedDataType    #Description
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #DueDate
        DATE
        PROPERTIES
          Name                #DueDate
          Label               #@SYS14588
          Mandatory           #Yes
          Table               #TmpCustVendTransReorg
          Origin              #{304E6F2C-3A57-429F-9103-766F898189C4}
          LegacyId            #1
          ExtendedDataType    #TransDate
        ENDPROPERTIES
        
      FIELD #RefRecId
        INT64
        PROPERTIES
          Name                #RefRecId
          Table               #TmpCustVendTransReorg
          Origin              #{24C98AC4-1685-4154-9E63-513118F56EA2}
          LegacyId            #5
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #RefTableId
        INT
        PROPERTIES
          Name                #RefTableId
          Visible             #No
          Table               #TmpCustVendTransReorg
          Origin              #{F347BF9A-45CB-450B-BE0E-2795BC5BDDE9}
          LegacyId            #7
          ExtendedDataType    #RefTableId
        ENDPROPERTIES
        
      FIELD #ReportingCurrencyAmount
        REAL
        PROPERTIES
          Name                #ReportingCurrencyAmount
          Visible             #No
          Table               #TmpCustVendTransReorg
          Origin              #{154BBAC8-4924-4299-97BE-848F6EE332BA}
          LegacyId            #8
          ExtendedDataType    #AmountMSTSecondary
        ENDPROPERTIES
        
      FIELD #TransDate
        DATE
        PROPERTIES
          Name                #TransDate
          Table               #TmpCustVendTransReorg
          Origin              #{022B69E1-07A3-47DF-BFF8-8A7A138D9749}
          LegacyId            #6
          ExtendedDataType    #TransDate
        ENDPROPERTIES
        
      FIELD #VendorBankAccount
        STRING
        PROPERTIES
          Name                #VendorBankAccount
          Table               #TmpCustVendTransReorg
          Origin              #{5246FE21-FEEF-4BB0-AC26-B84017F236DF}
          ExtendedDataType    #VendorBankAccount
          StringSize          #20
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
    ENDGROUPS
    
    INDICES
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #CustTransOpen
        PROPERTIES
          Name                #CustTransOpen
          Table               #CustTransOpen
          Validate            #No
          RelationshipType    #Link
          RelatedTableRole    #CustTransOpen
          Role                #TmpCustVendTransReorg
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #RefTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #RefRecId
            RelatedField        #RefRecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTransOpen
        PROPERTIES
          Name                #VendTransOpen
          Table               #VendTransOpen
          Validate            #No
          RelationshipType    #Link
          RelatedTableRole    #VendTransOpen
          Role                #TmpCustVendTransReorg
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #RefTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #RefRecId
            RelatedField        #RefRecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
    ENDMETHODS
  ENDTABLE
  

***Element: UTS

; Microsoft Dynamics AX String: VendorBankAccount unloaded
; --------------------------------------------------------------------------------
  USERTYPEVERSION 6
  
  USERTYPE #VendorBankAccount
  STRING
    PROPERTIES
      Name                #VendorBankAccount
      Label               #Vendor bank account
      Origin              #{74190691-22A1-426E-9B05-C425F424760D}
      Extends             #VendAccount
      StringSize          #20
    ENDPROPERTIES
    
    TYPEELEMENTS
    ENDTYPEELEMENTS
    
    TYPEREFERENCES
    ENDTYPEREFERENCES
    
    TYPELOOKUPS
    ENDTYPELOOKUPS
    
  ENDUSERTYPE
  

***Element: UTS

; Microsoft Dynamics AX String: Description unloaded
; --------------------------------------------------------------------------------
  USERTYPEVERSION 6
  
  USERTYPE #Description
  STRING
    PROPERTIES
      Name                #Description
      Label               #@SYS7576
      HelpText            #@SYS5206
      DisplayLength       #30
      Origin              #{290B0349-0000-1000-5724-124283697074}
      LegacyId            #841
      StringSize          #60
    ENDPROPERTIES
    
    TYPEELEMENTS
    ENDTYPEELEMENTS
    
    TYPEREFERENCES
    ENDTYPEREFERENCES
    
    TYPELOOKUPS
    ENDTYPELOOKUPS
    
  ENDUSERTYPE
  

***Element: CLS

; Microsoft Dynamics AX Class: CustVendTransReorg unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #CustVendTransReorg
    PROPERTIES
      Name                #CustVendTransReorg
      Origin              #{2D1209BA-0000-1000-2597-F20054ADAD93}
      LegacyId            #2490
    ENDPROPERTIES
    
    METHODS
      SOURCE #amountCur
        #AmountCur amountCur()
        #{
        #    return amountCur;
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #public class CustVendTransReorg
        #{
        #    CustVendTransOpen       custVendTransOpen;
        #    CustVendTrans           custVendTrans;
        #    CustVendTable           custVendTable;
        #    TmpCustVendTransReorg   tmpCustVendTransReorgNew;
        #    SpecTrans               specTrans;
        #    CustVendAC              accountNum;
        #    AmountCur               amountCur;
        #    boolean                 reorganized;
        #
        #    recId                   refRecId;
        #    tableId                 refTableId;
        #    CompanyId               specCompanyId;
        #}
        #
        #
      ENDSOURCE
      SOURCE #currencyCode
        #CurrencyCode currencyCode()
        #{
        #    return custVendTrans.CurrencyCode;
        #}
      ENDSOURCE
      SOURCE #end
        #void end()
        #{
        #    while select sum(AmountCur), sum(AmountMST), sum(ReportingCurrencyAmount) from tmpCustVendTransReorgNew
        #        group by RefRecId, DueDate, TransDate
        #    {
        #        this.post(tmpCustVendTransReorgNew);
        #    }
        #    reorganized = true;
        #}
      ENDSOURCE
      SOURCE #new
        #void new(CustVendTrans  _custVendTrans,
        #         AmountCur      _amountCur,
        #         tableId        _tableId,
        #         recId          _recId,
        #         CompanyId      _specCompanyId)
        #{
        #    CustVendTransData   custVendTransData = CustVendTransData::construct(_custVendTrans);
        #
        #    accountNum          = _custVendTrans.AccountNum;
        #    amountCur           = _amountCur;
        #    refTableId          = _tableId;
        #    refRecId            = _recId;
        #    specCompanyId       = _specCompanyId;
        #
        #    custVendTransOpen   = custVendTransData.parmCustVendTransStatic().custVendTransOpen();
        #    custVendTable       = custVendTransData.custVendTable();
        #    custVendTrans       = _custVendTrans;
        #}
        #
      ENDSOURCE
      SOURCE #paymentSchedSplit
        #void paymentSchedSplit(TmpCustVendTransReorg _tmpCustVendTransReorg)
        #{
        #    Dialog              dialog = new Dialog("@SYS23027");
        #    DialogField         dialogPaymentSchedId;
        #    DialogField         dialogTransDate;
        #
        #    PaymSched           paymSched;
        #    PaymSchedLine       paymSchedLine;
        #    PaymSchedId         paymSchedId;
        #    TransDate           transDate;
        #    AmountCur           remainAmountCur;
        #    Futures             futures;
        #    AmountCur           unsignedAmountCur;
        #    Percent             totalPercent;
        #
        #    remainAmountCur     = this.reverseAmountCur(amountCur);
        #    unsignedAmountCur   = this.reverseAmountCur(amountCur);
        #
        #    dialogPaymentSchedId = dialog.addField(extendedTypeStr(PaymSchedId),"@SYS23027");
        #    dialogTransDate      = dialog.addFieldValue(extendedTypeStr(TransDate), systemDateGet(), "@SYS28716");
        #
        #    if (dialog.run())
        #    {
        #        paymSchedId     = dialogPaymentSchedId.value();
        #        transDate       = dialogTransDate.value();
        #
        #        if (!paymSchedId || !transDate)
        #        {
        #            throw error("@SYS24640");
        #        }
        #
        #        paymSched = PaymSched::find(paymSchedId);
        #
        #        if (!paymSched)
        #        {
        #            throw error(strFmt("@SYS28115", paymSchedId));
        #        }
        #
        #        switch (paymSched.PaymBy)
        #        {
        #            case PaymSchedBy::Total :
        #                delete_from _tmpCustVendTransReorg;
        #                _tmpCustVendTransReorg.CustVendTransPct  = 100;
        #                _tmpCustVendTransReorg.AmountCur         = remainAmountCur;
        #                _tmpCustVendTransReorg.DueDate           = transDate;
        #                this.reverseAmountCur(_tmpCustVendTransReorg.AmountCur);
        #                _tmpCustVendTransReorg.insert();
        #                break;
        #
        #            case PaymSchedBy::AmountByPayment :
        #                delete_from _tmpCustVendTransReorg;
        #                futures = new Futures(transDate,
        #                                      paymSched.QtyUnit,
        #                                      paymSched.PeriodUnit);
        #                _tmpCustVendTransReorg.AmountCur         = paymSched.AmountCur;
        #                _tmpCustVendTransReorg.CustVendTransPct  = _tmpCustVendTransReorg.AmountCur / this.reverseAmountCur(amountCur) * 100;
        #                while (remainAmountCur)
        #                {
        #                    if (remainAmountCur < paymSched.AmountCur)
        #                    {
        #                        _tmpCustVendTransReorg.AmountCur         = remainAmountCur;
        #                        _tmpCustVendTransReorg.CustVendTransPct  = _tmpCustVendTransReorg.AmountCur / this.reverseAmountCur(amountCur) * 100;
        #                        remainAmountCur = 0;
        #                    }
        #                    else
        #                    {
        #                        remainAmountCur -= _tmpCustVendTransReorg.AmountCur;
        #                        if (remainAmountCur < paymSched.LowestAmount)
        #                        {
        #                            _tmpCustVendTransReorg.AmountCur         += remainAmountCur;
        #                            _tmpCustVendTransReorg.CustVendTransPct  = _tmpCustVendTransReorg.AmountCur / this.reverseAmountCur(amountCur) * 100;
        #                            remainAmountCur = 0;
        #                        }
        #                    }
        #                    _tmpCustVendTransReorg.DueDate = futures.next();
        #                    this.reverseAmountCur(_tmpCustVendTransReorg.AmountCur);
        #                    _tmpCustVendTransReorg.insert();
        #                }
        #                break;
        #
        #            case PaymSchedBy::NumOfPayment :
        #                delete_from _tmpCustVendTransReorg;
        #                futures = new Futures(transDate,
        #                                      paymSched.QtyUnit,
        #                                      paymSched.PeriodUnit);
        #                _tmpCustVendTransReorg.AmountCur         = Currency::amount(this.reverseAmountCur(amountCur) / paymSched.NumOfPayment, this.currencyCode());
        #                if (_tmpCustVendTransReorg.AmountCur < paymSched.LowestAmount)
        #                {
        #                    _tmpCustVendTransReorg.AmountCur     = paymSched.LowestAmount;
        #                }
        #                _tmpCustVendTransReorg.CustVendTransPct  = _tmpCustVendTransReorg.AmountCur / this.reverseAmountCur(amountCur) * 100;
        #                while (remainAmountCur && paymSched.NumOfPayment)
        #                {
        #                    paymSched.NumOfPayment--;
        #                    if (!paymSched.NumOfPayment)
        #                    {
        #                        _tmpCustVendTransReorg.AmountCur        = remainAmountCur;
        #                        _tmpCustVendTransReorg.CustVendTransPct = this.reverseAmountCur(_tmpCustVendTransReorg.AmountCur) / amountCur * 100;
        #                    }
        #                    remainAmountCur -= _tmpCustVendTransReorg.AmountCur;
        #                    _tmpCustVendTransReorg.DueDate   = futures.next();
        #                    _tmpCustVendTransReorg.AmountCur = this.reverseAmountCur(_tmpCustVendTransReorg.AmountCur);
        #                    _tmpCustVendTransReorg.insert();
        #                    _tmpCustVendTransReorg.AmountCur = this.reverseAmountCur(_tmpCustVendTransReorg.AmountCur);
        #                }
        #                break;
        #
        #            case PaymSchedBy::Specified :
        #                delete_from _tmpCustVendTransReorg;
        #                totalPercent = 0;
        #
        #                while select PercentAmount, Value, Qty from paymSchedLine
        #                    where paymSchedLine.Name == paymSched.Name
        #                {
        #                    if (paymSchedLine.PercentAmount == PercentAmount::Percent)
        #                    {
        #                        totalPercent += paymSchedLine.Value;
        #
        #                        if (totalPercent != 100.0)
        #                        {
        #                            _tmpCustVendTransReorg.AmountCur = Currency::amount(this.reverseAmountCur(amountCur) * paymSchedLine.Value / 100, this.currencyCode());
        #                        }
        #                        else
        #                        {
        #                            _tmpCustVendTransReorg.AmountCur = remainAmountCur;
        #                        }
        #                        _tmpCustVendTransReorg.CustVendTransPct = paymSchedLine.Value;
        #                    }
        #                    else
        #                    {
        #                        _tmpCustVendTransReorg.AmountCur        = Currency::amount(paymSchedLine.Value, this.currencyCode());
        #                        _tmpCustVendTransReorg.CustVendTransPct = _tmpCustVendTransReorg.AmountCur / this.reverseAmountCur(amountCur) * 100;
        #                    }
        #
        #                    if (_tmpCustVendTransReorg.AmountCur > remainAmountCur)
        #                    {
        #                        _tmpCustVendTransReorg.AmountCur        = remainAmountCur;
        #                        _tmpCustVendTransReorg.CustVendTransPct = Currency::amount(_tmpCustVendTransReorg.AmountCur / this.reverseAmountCur(amountCur) * 100);
        #                    }
        #
        #                    remainAmountCur -= _tmpCustVendTransReorg.AmountCur;
        #                    futures = new Futures(transDate,
        #                                          paymSchedLine.Qty,
        #                                          paymSched.PeriodUnit);
        #                    _tmpCustVendTransReorg.DueDate = futures.next();
        #                    _tmpCustVendTransReorg.insert();
        #
        #                    if (!remainAmountCur)
        #                    {
        #                        break;
        #                    }
        #                }
        #                break;
        #
        #            default :
        #                throw error(strFmt("@SYS28115", paymSchedId));
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #post
        #void post(TmpCustVendTransReorg _tmpCustVendTransReorg)
        #{
        #    CustVendPaymSchedReorg   custVendPaymSchedReorg;
        #
        #    custVendPaymSchedReorg = CustVendPaymSchedReorg::construct(custVendTrans);
        #
        #
        #    custVendTransOpen.clear();
        #
        #    custVendTransOpen.DueDate       = _tmpCustVendTransReorg.DueDate;
        #    custVendTransOpen.RefRecId      = _tmpCustVendTransReorg.RefRecId;
        #    custVendTransOpen.AccountNum    = accountNum;
        #    custVendTransOpen.TransDate     = _tmpCustVendTransReorg.TransDate;
        #
        #    custVendTransOpen.AmountCur               = _tmpCustVendTransReorg.AmountCur;
        #    custVendTransOpen.AmountMST               = _tmpCustVendTransReorg.AmountMST;
        #    custVendTransOpen.ReportingCurrencyAmount = _tmpCustVendTransReorg.ReportingCurrencyAmount;
        #
        #    custVendTransOpen.insert();
        #
        #    custVendPaymSchedReorg.createPaymSchedTransLine(custVendTransOpen);
        #
        #}
        #
      ENDSOURCE
      SOURCE #reorganize
        #void reorganize(TmpCustVendTransReorg _tmpCustVendTransReorg)
        #{
        #    AmountMST           amountMST;
        #    AmountMSTSecondary  amountReporting;
        #
        #    while (_tmpCustVendTransReorg.AmountCur)
        #    {
        #        custVendTransOpen = this.transOpen();
        #
        #        // <GEEPL>
        #        if (!OverdueJournalSettings_W::canDueDateBeModified(custVendTransOpen, _tmpCustVendTransReorg.DueDate, custVendTransOpen.DueDate))
        #        {
        #            throw error("@SYS21533");
        #        }
        #        // </GEEPL>
        #
        #        amountCur = this.setAmountCur(_tmpCustVendTransReorg, custVendTransOpen);
        #        if (amountCur == abs(custVendTransOpen.AmountCur))
        #        {
        #            amountMST = abs(custVendTransOpen.AmountMST);
        #            amountReporting = abs(custVendTransOpen.ReportingCurrencyAmount);
        #        }
        #        else
        #        {
        #            amountMST = Currency::amount(custVendTransOpen.AmountMST/ custVendTransOpen.AmountCur * amountCur);
        #            amountReporting = Currency::amount(custVendTransOpen.ReportingCurrencyAmount / custVendTransOpen.AmountCur * amountCur);
        #        }
        #
        #        _tmpCustVendTransReorg.AmountCur -= amountCur;
        #
        #        if (custVendTransOpen.AmountCur < 0)
        #        {
        #            custVendTransOpen.AmountCur += amountCur;
        #            custVendTransOpen.AmountMST += amountMST;
        #            custVendTransOpen.ReportingCurrencyAmount += amountReporting;
        #
        #            tmpCustVendTransReorgNew.AmountCur  = -amountCur;
        #            tmpCustVendTransReorgNew.AmountMST  = -amountMST;
        #            tmpCustVendTransReorgNew.ReportingCurrencyAmount = -amountReporting;
        #        }
        #        else
        #        {
        #            custVendTransOpen.AmountCur -= amountCur;
        #            custVendTransOpen.AmountMST -= amountMST;
        #            custVendTransOpen.ReportingCurrencyAmount -= amountReporting;
        #
        #            tmpCustVendTransReorgNew.AmountCur  = amountCur;
        #            tmpCustVendTransReorgNew.AmountMST  = amountMST;
        #            tmpCustVendTransReorgNew.ReportingCurrencyAmount = amountReporting;
        #        }
        #
        #        if (!custVendTransOpen.AmountCur)
        #        {
        #            custVendTransOpen.delete();
        #            specTrans.delete();
        #        }
        #        else
        #        {
        #            custVendTransOpen.update();
        #        }
        #        tmpCustVendTransReorgNew.DueDate    = _tmpCustVendTransReorg.DueDate;
        #        tmpCustVendTransReorgNew.RefTableId = custVendTransOpen.TableId;
        #        tmpCustVendTransReorgNew.RefRecId   = custVendTransOpen.RefRecId;
        #        tmpCustVendTransReorgNew.TransDate  = custVendTransOpen.TransDate;
        #        tmpCustVendTransReorgNew.insert();
        #        custVendTransOpen = this.transOpen();
        #
        #    }
        #}
        #
        #
      ENDSOURCE
      SOURCE #reverseAmountCur
        #AmountCur reverseAmountCur(AmountCur _amountCur )
        #{
        #    AmountCur   reverseAmountCur = _amountCur;
        #
        #    reverseAmountCur = abs(reverseAmountCur);
        #    return reverseAmountCur;
        #}
        #
      ENDSOURCE
      SOURCE #run
        #boolean run()
        #{
        #    Args        parameters = new Args();
        #    FormRun     custVendTransReorg;
        #
        #    reorganized = false;
        #    parameters.name(formStr(CustVendTransReorg));
        #    parameters.caller(this);
        #    custVendTransReorg  = classfactory.formRunClass(parameters);
        #
        #    custVendTransReorg.init();
        #    custVendTransReorg.run();
        #    custVendTransReorg.wait();
        #    return reorganized;
        #}
      ENDSOURCE
      SOURCE #setAmountCur
        #AmountCur setAmountCur( TmpCustVendTransReorg _tmpCustVendTransReorg,
        #                        CustVendTransOpen _custVendTransOpen)
        #{
        #    AmountCur reorgAmountCur;
        #
        #    if ( _tmpCustVendTransReorg.AmountCur < abs(_custVendTransOpen.AmountCur))
        #    {
        #        reorgAmountCur = _tmpCustVendTransReorg.AmountCur;
        #    }
        #    else
        #    {
        #        reorgAmountCur = abs(_custVendTransOpen.AmountCur);
        #    }
        #
        #    return reorgAmountCur;
        #}
        #
      ENDSOURCE
      SOURCE #transOpen
        #CustVendTransOpen transOpen()
        #{
        #    select forupdate firstonly crossCompany specTrans
        #        where specTrans.SpecTableId == refTableId &&
        #              specTrans.SpecRecId   == refRecId &&
        #              specTrans.SpecCompany == specCompanyId
        #    join forupdate custVendTransOpen
        #        where custVendTransOpen.TableId     == specTrans.RefTableId
        #           && custVendTransOpen.RecId       == specTrans.RefRecId
        #           && custVendTransOpen.DataAreaId  == specTrans.RefCompany
        #           && custVendTransOpen.AccountNum  == accountNum;
        #
        #    return custVendTransOpen;
        #}
        #
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #VendOpenTrans
  PROPERTIES
    Name                #VendOpenTrans
    Origin              #{F76E19C6-0481-4BA6-9E18-7A3BF02A6364}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #    #ResAppl
      #
      #    CustVendOpenTransManager manager;
      #    TaxWithhold_CustPaym taxWithhold;
      #
      #    container companies;
      #
      #    Common originator;
      #    FormRun callingForm;
      #    LedgerJournalType ledgerJournalType;
      #    LogisticsLocationRecId  postalAddressLocation;
      #
      #    NoYes showError;
      #    boolean promptToDeleteSpecTrans;
      #    ImageListAppl_CustVend imageList;
      #
      #    PaymProposalRun runPaymProposal;
      #
      #    boolean         paymentGroupBeingModified;
      #
      #    QueryBuildRange qbrPartyId;
      #    // <GIN>
      #    boolean                 checkStatus;
      #    // </GIN>
      #
      #    CurrencyCode    currentDisplayCurrency;
      #
      #    // <GEERU>
      #    CustVendTransDetails     custVendTransDetails;
      #    CustVendSettle_Vend      custVendSettle;
      #    boolean                  countryRegion_RU;
      #    // </GEERU>
      #    #define.CurrentVersion(4)
      #    #localmacro.CurrentList
      #        runPaymProposal
      #    #endmacro
      #
      #    DimensionDefaultingController dimensionDefaultingController;
      #    DataAreaId                      currentCompany;
      #
      #    LedgerDimensionDefaultAccountController ledgerDimensionDefaultAccountController;
      #
      #    BankLCVendTransHelper           bankLCTransHelper;
      #
      #    Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessagePane   messagePane;
      #    Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBar    messageBar;
      #    Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBar    messageBarNew;
      #
      #    // <GJP>
      #    boolean                         isConsEnabled;
      #    // </GJP>
      #    // <GIN>
      #    boolean                         countryRegion_IN;
      #    // </GIN>
      #    // <GIN><GEERU><GJP>
      #    #ISOCountryRegionCodes
      #    // </GJP></GEERU></GIN>
      #
      #    // <GTH>
      #    boolean                 isTaxWithholdTransExtensionTHEnabled;
      #    // </GTH>
      #
      #    // <GBR>
      #    boolean currentlyUnmarkingAll;
      #    // </GBR>
      #}
    ENDSOURCE
    SOURCE #activate
      #// <GIN>
      #public void activate(boolean _active)
      #{
      #    TaxWithholdSettleTrans_IN    taxWithholdSettleTrans;
      #    LedgerJournalTrans           ledgerJournalTrans;
      #    TaxWithholdParameters_IN     taxWithholdParameter = TaxWithholdParameters_IN::find();
      #
      #    super(_active);
      #
      #    if ((taxWithholdParameter.tdsActivate || taxWithholdParameter.tcsActivate) && checkStatus && vendTransOpen.TaxWithholdStatus_IN == NoYes::Yes)
      #    {
      #        if(originator.TableId == tableNum(LedgerJournalTrans))
      #        {
      #            ledgerJournalTrans = originator;
      #        }
      #
      #        if (TaxWithholdSettleTrans_IN::findSumOfTaxmountFrmVoucher_IN(vendTrans.Voucher) && markTrans.checked())
      #        {
      #            manager.updateSettleAmountPaymCur(vendTransOpen, TaxWithholdSettleTrans_IN::findSumOfTaxmountFrmVoucher_IN(vendTrans.Voucher));
      #            taxWithholdSettleTrans.updateLedgerVoucher(ledgerJournalTrans.Voucher, vendTrans.Voucher);
      #        }
      #        checkStatus =  false;
      #    }
      #}
      #// </GIN>
    ENDSOURCE
    SOURCE #bankDocumentTypeFilterModified
      #/// <summary>
      #/// Called after the <c>BankDocumentTypeFilter</c> control is modified.
      #/// </summary>
      #public void bankDocumentTypeFilterModified()
      #{
      #    bankLCTransHelper.buildQuery(vendTrans_DS.query());
      #
      #    vendTransOpen_DS.executeQuery();
      #}
    ENDSOURCE
    SOURCE #canClose
      #public boolean canClose()
      #{
      #    CustVendPaymProposal paymProposal;
      #    boolean              ret;
      #    FormDataSource       formDataSource;
      #
      #    ret = super();
      #
      #    if (this.mustRunPaymProposal())
      #    {
      #        paymProposal = this.runPaymProposal();
      #
      #        ret = ret && paymProposal.totalNumOfTransOpen() == 0;
      #
      #        if (originator.isFormDataSource())
      #        {
      #            formDataSource = originator.dataSource();
      #            formDataSource.research();
      #        }
      #
      #        paymProposal.clear();
      #    }
      #
      #    // determine if user wants to close when marked total is not within over/under amount
      #    ret = manager.validateMarkedTotalWithinOverUnder();
      #
      #    if (ret)
      #    {
      #        ret = manager.validateBankLCSettlement();
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #close
      #public void close()
      #{
      #    if (this.mustRunPaymProposal() != true)
      #    {
      #        // If transactions were marked, write back to originating record if needed
      #        manager.updateOriginatorForMarkedTrans();
      #    }
      #
      #    // update all SpecTrans records with date used to calculate discount
      #    manager.updateSpecTransWithSelectedDate();
      #
      #    super();
      #
      #    TaxWithhold::clearCache();
      #}
    ENDSOURCE
    SOURCE #displayCashDiscTotalCur
      #//BP Deviation Documented
      #public display AmountCur displayCashDiscTotalCur()
      #{
      #    ;
      #
      #    return manager.getCashDiscTotalDisplayCur();
      #}
    ENDSOURCE
    SOURCE #displayCashDiscTotalMst
      #//BP Deviation Documented
      #public display AmountMST displayCashDiscTotalMst()
      #{
      #    ;
      #
      #    return manager.getCashDiscTotalMst();
      #}
      #
    ENDSOURCE
    SOURCE #displayMarkedTotalCur
      #//BP Deviation Documented
      #public display AmountCur displayMarkedTotalCur()
      #{
      #    ;
      #
      #    return manager.getMarkedTotalDisplayCur();
      #}
    ENDSOURCE
    SOURCE #displayMarkedTotalMst
      #//BP Deviation Documented
      #public display AmountMST displayMarkedTotalMst()
      #{
      #    ;
      #
      #    return manager.getMarkedTotalMst();
      #}
    ENDSOURCE
    SOURCE #displayTransferredAmountCur
      #//BP Deviation Documented
      #public display AmountCur displayTransferredAmountCur()
      #{
      #    ;
      #
      #    return manager.getJournalTransAmountDisplayCur();
      #}
      #
    ENDSOURCE
    SOURCE #displayTransferredAmountMst
      #//BP Deviation Documented
      #public display AmountCur displayTransferredAmountMst()
      #{
      #    ;
      #
      #    return manager.getJournalTransAmountMst();
      #}
    ENDSOURCE
    SOURCE #displayVendBalanceMst
      #//BP Deviation Documented
      #public display AmountMST displayVendBalanceMst()
      #{
      #    ;
      #
      #    return manager.getCustVendBalanceMst();
      #}
      #
      #
    ENDSOURCE
    SOURCE #doesCallerAllowEdit
      #public boolean doesCallerAllowEdit()
      #{
      #    LedgerJournalTrans      ledgerJournalTrans;
      #    PurchTable              purchTable;
      #    FormDataSource          callerDataSource;
      #    boolean                 allowEdit = true;
      #    boolean                 alwaysAllowEdit = false;
      #    boolean                 isVendReleaseDateExpired;
      #    CustVendorBlocked       vendBlocked;
      #    InvoiceReleaseDate      paymTransDate;
      #    InvoiceReleaseDate      vendReleaseDate;
      #    InvoiceReleaseDate      invoiceReleaseDate;
      #    boolean                 callerDataSourceAllowEdit;
      #    ;
      #
      #    //initializations
      #    vendBlocked                 = (vendTable.Blocked == CustVendorBlocked::Never) ? CustVendorBlocked::No : vendTable.Blocked;
      #    vendReleaseDate             = vendTable.BlockedReleaseDate;
      #    invoiceReleaseDate          = vendTrans.InvoiceReleaseDate;
      #
      #    callerDataSource            = element.args().record().dataSource();
      #    callerDataSourceAllowEdit   = callerDataSource.allowEdit();
      #
      #    switch (originator.TableId)
      #    {
      #        case tableNum(LedgerJournalTrans) :
      #            ledgerJournalTrans = element.args().record();
      #            paymTransDate = DateTimeUtil::newDateTime(ledgerJournalTrans.TransDate,0);
      #
      #            // Change to account company because this is where the payment terms exists
      #            changecompany(ledgerJournalTrans.Company)
      #            {
      #                // Don't allow edit when payment status is sent or
      #                // when the term of payment has a cash account.
      #                if ((ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Sent)
      #                    || (PaymTerm::find(ledgerJournalTrans.Payment).CashLedgerDimension != 0)
      #                    // <GBR>
      #                    || (BrazilParameters::isEnabled()
      #                            && ledgerJournalTrans.getPaymentExtension_BR().TaxWithholdEditStatus_BR == LedgerTransTaxWithholdEditStatus_BR::Closed)
      #                    // </GBR>
      #                    )
      #                {
      #                    allowEdit = false;
      #                }
      #            }
      #            break;
      #
      #        case tableNum(PurchTable) :
      #            purchTable = element.args().record();
      #
      #            if (PaymTerm::find(purchTable.Payment).CashLedgerDimension != 0)
      #            {
      #                allowEdit = false;
      #            }
      #            else
      #            {
      #                alwaysAllowEdit = true;
      #            }
      #            break;
      #
      #        case tableNum(VendTable) :
      #            // Coming from VendTable (Or the list pages since they all pass in
      #            // VendTable record with args) this we always be editable.
      #            alwaysAllowEdit = true;
      #            break;
      #    }
      #
      #    isVendReleaseDateExpired = VendTable::isVendReleaseDateExpired(vendTable.AccountNum, paymTransDate);
      #    // to disable the individual line on which vendor stop occurs
      #    if ((vendBlocked != CustVendorBlocked::No       &&
      #        vendBlocked != CustVendorBlocked::Requisition &&
      #        vendBlocked != CustVendorBlocked::Invoice &&
      #        !isVendReleaseDateExpired)                  ||
      #        (invoiceReleaseDate !=  utcDateTimeNull()   &&
      #        (invoiceReleaseDate > paymTransDate)))
      #        {
      #            allowEdit = false;
      #        }
      #
      #
      #    return (alwaysAllowEdit || (allowEdit && callerDataSourceAllowEdit));
      #}
    ENDSOURCE
    SOURCE #editBankDocumentTypeFilter
      #/// <summary>
      #/// Provides the edit method for control <c>BankDocumentTypeFilter</c>.
      #/// </summary>
      #/// <param name="_set">
      #/// A Boolean value that indicates whether to set or read the value.
      #/// </param>
      #/// <param name="_value">
      #/// The value set from the form control.
      #/// </param>
      #/// <returns>
      #/// The value should be displayed on the form control.
      #/// </returns>
      #// BP deviation documented
      #edit BankLCBankDocument editBankDocumentTypeFilter(
      #    boolean             _set,
      #    BankLCBankDocument  _value)
      #{
      #    if (_set)
      #    {
      #        bankLCTransHelper.parmBankDocumentTypeFilter(_value);
      #    }
      #
      #    return bankLCTransHelper.parmBankDocumentTypeFilter();
      #}
    ENDSOURCE
    SOURCE #editDateTypeUsedToCalcDisc
      #// BP Deviation Documented
      #public edit CashDiscUsedToCalcDisc editDateTypeUsedToCalcDisc(boolean _set, CashDiscUsedToCalcDisc _discCalcDateType)
      #{
      #    ;
      #
      #    if (_set)
      #    {
      #        manager.updateDateTypeUsedToCalcDisc(_discCalcDateType);
      #        manager.parmDateTypeUsedToCalcDisc(_discCalcDateType);
      #
      #        this.updateDesignDynamic();
      #
      #        // Set current table buffer record for CustTransCashDisc
      #        vendTransCashDisc_ds.findRecord(manager.findApplicableCustVendTransCashDisc(vendTransOpen));
      #
      #        element.redraw();
      #    }
      #
      #    return manager.parmDateTypeUsedToCalcDisc();
      #}
      #
    ENDSOURCE
    SOURCE #editDateUsedToCalcDisc
      #// BP Deviation Documented
      #public edit TransDate editDateUsedToCalcDisc(boolean _set, TransDate _cashDiscCalcDate)
      #{
      #    if (_set)
      #    {
      #        manager.updateDateUsedToCalcDisc(_cashDiscCalcDate);
      #        manager.parmDateUsedToCalcDisc(_cashDiscCalcDate);
      #
      #        // Update dynamic controls & refresh form as auto-redraw is not triggered
      #        element.updateDesignDynamic();
      #
      #        // Set current table buffer record for VendTransCashDisc
      #        vendTransCashDisc_ds.findRecord(manager.findApplicableCustVendTransCashDisc(vendTransOpen));
      #
      #        element.redraw();
      #    }
      #
      #    return manager.parmDateUsedToCalcDisc();
      #}
    ENDSOURCE
    SOURCE #editRunPaymProposal
      #//BP Deviation Documented
      #public edit PaymProposalRun editRunPaymProposal(
      #    boolean         _set,
      #    PaymProposalRun _runPaymProposal)
      #{
      #    ;
      #
      #    if (_set)
      #    {
      #        runPaymProposal = _runPaymProposal;
      #    }
      #
      #    return runPaymProposal;
      #}
    ENDSOURCE
    SOURCE #editSettlePostingDate
      #// BP Deviation Documented
      #public edit TransDate editSettlePostingDate(boolean _set, TransDate _settlePostingDate)
      #{
      #    if (_set)
      #    {
      #        manager.parmSettlePostingDate(_settlePostingDate);
      #        // <GEERU>
      #
      #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
      #        {
      #            custVendSettle.datePrinciple(manager.parmSettlePostingType());
      #            custVendSettle.saveDate(manager.parmSettlePostingDate());
      #            xSysLastValue::saveLast(custVendSettle);
      #        }
      #        // </GEERU>
      #    }
      #
      #    return manager.parmSettlePostingDate();
      #}
    ENDSOURCE
    SOURCE #editSettlePostingType
      #// BP Deviation Documented
      #public edit SettleDatePrinc editSettlePostingType(boolean _set, SettleDatePrinc _settlePostingType)
      #{
      #    if (_set)
      #    {
      #        manager.parmSettlePostingType(_settlePostingType);
      #
      #        this.updateDesignDynamic();
      #        // <GEERU>
      #
      #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
      #        {
      #            custVendSettle.datePrinciple(manager.parmSettlePostingType());
      #            custVendSettle.saveDate(manager.parmSettlePostingDate());
      #            xSysLastValue::saveLast(custVendSettle);
      #        }
      #        // </GEERU>
      #    }
      #
      #    return manager.parmSettlePostingType();
      #}
      #
    ENDSOURCE
    SOURCE #filterByPurchOrder_CZ
      ##resource
      #void filterByPurchOrder_CZ()
      #{
      #    str                     recIdStr;
      #    QueryBuildDataSource    qbds;
      #
      #    void clearRange()
      #    {
      #        qbds.clearRange(fieldNum(CustTransOpen, RecId));
      #        filterByPurchOrder_CZ.normalResource(#RES_AM_FILTER);
      #    }
      #
      #    if (isConfigurationkeyEnabled(configurationKeyNum(CzCustVendAdvanceInvoices)))
      #    {
      #        qbds = vendTransOpen_ds.query().dataSourceTable(tableNum(VendTransOpen));
      #
      #        if (qbds.findRange(fieldNum(VendTransOpen, RecId)))
      #        {
      #            clearRange();
      #        }
      #        else
      #        {
      #            recIdStr = CzCustVendTransOpenFilter::filter(element, originator);
      #            if (recIdStr)
      #            {
      #                findOrCreateRange_W(qbds, fieldNum(VendTransOpen, RecId), recIdStr);
      #                filterByPurchOrder_CZ.normalResource(#RES_AM_KILLFILTER);
      #            }
      #            else
      #            {
      #                clearRange();
      #            }
      #        }
      #
      #        vendTransOpen_ds.executeQuery();
      #    }
      #}
    ENDSOURCE
    SOURCE #firstField
      #public void firstField(int flags=1)
      #{
      #    ;
      #
      #    markTrans.setFocus();
      #}
    ENDSOURCE
    SOURCE #getTransDate_BR
      #/// <summary>
      #/// Retrieves the transaction date that will be used for this settlement.
      #/// </summary>
      #/// <returns>
      #/// Transaction date for this settlement.
      #/// </returns>
      #public TransDate getTransDate_BR()
      #{
      #    TransDate           transDate;
      #    LedgerJournalTrans  ledgerJournalTrans;
      #
      #    if (originator.TableId == tableNum(LedgerJournalTrans))
      #    {
      #        ledgerJournalTrans  = originator;
      #        transDate           =  ledgerJournalTrans.TransDate;
      #    }
      #    else
      #    {
      #        transDate           =  dateNull();
      #    }
      #
      #    return transDate;
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    LedgerJournalTrans ledgerJournalTrans;
      #    BankPromissoryNoteTable bankPromissoryNoteTable;
      #    // <GBR>
      #    FormTabPageControl paymentTabPage;
      #    // </GBR>
      #    #ISOCountryRegionCodes
      #
      #    // <GIN>
      #    countryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
      #    // </GIN>
      #    // <GEERU>
      #    countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
      #    // </GEERU>
      #
      #    originator = element.args().record();
      #    callingForm = element.args().caller();
      #
      #    if (originator.RecId == 0)
      #    {
      #        throw error(Error::missingParameter(this));
      #    }
      #
      #    super();
      #    FormSecurity::setFormDataSourceMaxAccessRight(this);
      #
      #    dimensionDefaultingController = DimensionDefaultingController::constructInTabWithValues(false, true, false, 0, this, tabFinancialDimensions, "@SYS101181");
      #    dimensionDefaultingController.parmAttributeValueSetDataSource(vendTrans_ds, fieldStr(VendTrans, DefaultDimension));
      #
      #    switch (originator.TableId)
      #    {
      #        case tableNum(LedgerJournalTrans):
      #            ledgerJournalTrans = element.args().record();
      #            ledgerJournalType = ledgerJournalTrans.ledgerJournalTable().JournalType;
      #
      #            if (ledgerJournalType == LedgerJournalType::Daily                       ||
      #                ledgerJournalType == LedgerJournalType::Payment                     ||
      #                ledgerJournalType == LedgerJournalType::VendPaymRemittance          ||
      #                ledgerJournalType == LedgerJournalType::VendPromissoryNoteDraw      ||
      #                ledgerJournalType == LedgerJournalType::VendPromissoryNoteRedraw    ||
      #                ledgerJournalType == LedgerJournalType::VendPromissoryNoteSettle)
      #            {
      #                this.updateDataSourcePromissoryNote(ledgerJournalTrans, ledgerJournalType);
      #            }
      #
      #            if (ledgerJournalType == LedgerJournalType::VendPromissoryNoteDraw &&
      #                ledgerJournalTrans.BankPromissoryNoteNum != '')
      #            {
      #                bankPromissoryNoteTable = BankPromissoryNoteTable::findBankPNDocStatus(ledgerJournalTrans.BankAccountId,ledgerJournalTrans.BankPromissoryNoteNum,BankPromissoryNoteStatus::Printed,true);
      #
      #                if (bankPromissoryNoteTable.PromissoryNoteNum)
      #                {
      #                    bankPromissoryNoteTable.DocumentStatus = BankPromissoryNoteStatus::Posted;
      #                    bankPromissoryNoteTable.update();
      #                }
      #
      #                ledgerJournalTrans.BankPromissoryNoteNum = '';
      #                ledgerJournalTrans.PaymentStatus         = CustVendPaymStatus::None;
      #                ledgerJournalTrans.NoEdit                = NoYes::No;
      #                ledgerJournalTrans.update();
      #            }
      #
      #            if (ledgerJournalType == LedgerJournalType::Daily  ||
      #                ledgerJournalType == LedgerJournalType::Payment)
      #            {
      #                if (BrazilParameters::isEnabled())
      #                {
      #                    if (!ledgerJournalTrans.handleWriteTaxWithholdEditStatus_BR())
      #                    {
      #                        throw Exception::Error;
      #                    }
      #                }
      #                taxWithhold = new TaxWithhold(ledgerJournalTrans);
      #            }
      #
      #            break;
      #
      #        case tableNum(VendTable),tableNum(PurchTable):
      #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoGB, #isoIE, #isoSA]))
      #            {
      #                taxWithhold = new TaxWithhold(ledgerJournalTrans);
      #            }
      #            // NOTE: These tables do not require any specific data source manipulation.
      #            break;
      #
      #        default:
      #            Debug::assert(false);
      #            break;
      #
      #    }
      #
      #    if (callingForm && (callingForm.name() == formStr(VendOpenInvoicesListPage)))
      #    {
      #        // VendOpenInvoicesListPage will always be marking the selected transaction in the
      #        // list.
      #
      #        promptToDeleteSpecTrans = false;
      #    }
      #    else
      #    {
      #        promptToDeleteSpecTrans = element.doesCallerAllowEdit();
      #    }
      #
      #    showError = NoYes::Yes;
      #    imageList = new ImageListAppl_CustVend();
      #
      #    isMarked.imageList(imageList.imageList());
      #    paymentSpec.imageList(imageList.imageList());
      #
      #    // <GJP>
      #    isConsEnabled = VendConsInvoiceType_JP::isVendConsInvoiceEnabled();
      #    // </GJP>
      #    // <GEERU>
      #    this.setVisibleTransferLogFields_RU(ledgerJournalTrans.BankTransType);
      #    // </GEERU>
      #
      #    // Update data source & design aspects that don't change for the lifespan of the form
      #    this.updateDataSourceStatic();
      #    this.updateDesignStatic();
      #
      #    //show/hide the payment groups
      #    vendTrans_VendPaymentGroup.visible(VendParameters::find().VendPaymentGroupingEnable && (originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable) || originator.TableId == tableNum(PurchTable)));
      #    vendTrans_VendPaymentGroup1.visible(VendParameters::find().VendPaymentGroupingEnable && (originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable) || originator.TableId == tableNum(PurchTable)));
      #
      #    //Hide remittance tab when originator table is other than LedgerJournalTrans,VendTable, PurchTable.
      #    remittanceTab.visible(originator.TableId == tableNum(LedgerJournalTrans) ||
      #                          originator.TableId == tableNum(VendTable) ||
      #                          originator.TableId == tableNum(PurchTable));
      #
      #    ledgerDimensionDefaultAccountController = LedgerDimensionDefaultAccountController::construct(vendTransOpen_ds, fieldStr(VendTransOpen, CashDiscountLedgerDimension));
      #    ledgerDimensionDefaultAccountController.parmControl(vendTransOpen_CashDiscAccount);
      #    ledgerDimensionDefaultAccountController.parmFilterLedgerPostingType(LedgerPostingType::None);
      #
      #    // <GIN>
      #    if (countryRegion_IN)
      #    {
      #        element.setTaxWithholdVisible_IN();
      #    }
      #
      #    if (TaxParameters::isServiceTaxEnable_IN())
      #    {
      #        serviceTax_IN.visible(true);
      #    }
      #    // </GIN>
      #
      #    // <GBR>
      #    if (BrazilParameters::isEnabled())
      #    {
      #        paymentTabPage = this.control(this.controlId(formControlStr(VendOpenTrans, PaymentTab)));
      #        paymentTabPage.columns(3);
      #    }
      #    // </GBR>
      #
      #    this.initBankLCTransHelper();
      #
      #    manager = CustVendOpenTransManager::construct(originator);
      #
      #    this.initMessagePane();
      #
      #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
      #    {
      #        vendTransOpen_DueDate1.enabled(false);
      #    }
      #
      #    // <GTH>
      #    if (TaxThaiGovCertificationFeatureChecker::isTaxWithholdEnabled())
      #    {
      #        taxWithholdTrans_ds.object(fieldNum(TaxWithholdTrans, TaxWithholdItemGroupHeading_TH)).mandatory(true);
      #        taxWithholdTrans_TaxWithholdGroup.mandatory(true);
      #    }
      #    // </GTH>
      #}
    ENDSOURCE
    SOURCE #initBankLCTransHelper
      #/// <summary>
      #/// Inits the instance of <c>BankLCCustVendTransHelper</c>.
      #/// </summary>
      #private void initBankLCTransHelper()
      #{
      #    bankLCTransHelper = BankLCVendTransHelper::construct();
      #    bankLCTransHelper.parmBankLCVendTransDS(bankLCVendTrans_DS);
      #    bankLCTransHelper.parmBankDocumentTypeFilterControl(bankDocumentTypeFilter);
      #    bankLCTransHelper.configBankLCControls(vendTrans_DS.query());
      #}
    ENDSOURCE
    SOURCE #initFromCaller
      #public void initFromCaller()
      #{
      #    ;
      #
      #    // Validate that calling record exists
      #    if (originator.RecId == 0)
      #    {
      #        switch (originator.TableId)
      #        {
      #            case tableNum(VendTable) :
      #                throw error("@SYS22904");
      #
      #            case tableNum(PurchTable), tableNum(LedgerJournalTrans):
      #                throw error(Error::missingRecord(this.name()));
      #
      #            default:
      #                Debug::assert(false);
      #                break;
      #        }
      #    }
      #
      #    // <GEERU>
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
      #    {
      #        custVendSettle = new CustVendSettle_Vend();
      #
      #        manager.parmSettlePostingType(custVendSettle.datePrinciple());
      #        if (manager.parmSettlePostingType() == SettleDatePrinc::SelectDate)
      #        {
      #            manager.parmSettlePostingDate(custVendSettle.saveDate());
      #        }
      #    }
      #    // </GEERU>
      #    // Update dynamic data source & design aspects based on changing data from the caller
      #    this.updateDataSourceDynamic();
      #    this.updateDesignDynamic();
      #}
    ENDSOURCE
    SOURCE #initMessagePane
      #public void initMessagePane()
      #{
      #    Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBarType messageBarType;
      #
      #    messagePane = messagePaneHost.control();
      #
      #    messageBarType = Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBarType::Warning;
      #
      #    messageBar = new Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBar();
      #    messageBar.set_MessageBarType(messageBarType);
      #    messageBar.set_Text(strFmt("@SYS329024", "@SYS10396", "@SYS65363"));
      #
      #    messagePane.Add(messageBar);
      #}
    ENDSOURCE
    SOURCE #initTaxBranchControls_TH
      #/// <summary>
      #/// Inits the status of controls that for Thailand Multiple Tax branches feature.
      #/// </summary>
      #// <GTH>
      #public void initTaxBranchControls_TH()
      #{
      #    // For Thailand MTB controls based on sys fields, they are set as invisiable by default.
      #    // Needs to init their status here.
      #    displayTaxBranchDimension_TH.visible(true);
      #}
      #// </GTH>
    ENDSOURCE
    SOURCE #isQueryModificationRequired
      #/// <summary>
      #/// Determines if the form's query need to be modified.
      #/// </summary>
      #/// <returns>
      #/// true if the form's query needs to be modified; otherwise, false
      #/// </returns>
      #/// <remarks>
      #/// If the intercompany accounting configuration key is enabled and the journal is not a promissory note redraw
      #/// or settled journal, the query needs to be modified.
      #/// </remarks>
      #protected boolean isQueryModificationRequired()
      #{
      #    boolean isQueryModificationRequired;
      #    ;
      #
      #    if (originator.TableId == tableNum(LedgerJournalTrans) &&
      #        (ledgerJournalType == LedgerJournalType::VendPromissoryNoteRedraw ||
      #        ledgerJournalType == LedgerJournalType::VendPromissoryNoteSettle))
      #    {
      #        isQueryModificationRequired = false;
      #    }
      #    else
      #    {
      #        isQueryModificationRequired = isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting));
      #    }
      #
      #    return isQueryModificationRequired;
      #}
    ENDSOURCE
    SOURCE #lastValueDataAreaId
      #DataAreaId lastValueDataAreaId()
      #{
      #    return curext();
      #}
      #
    ENDSOURCE
    SOURCE #lastValueDesignName
      #private IdentifierName lastValueDesignName()
      #{
      #    return '';
      #}
      #
    ENDSOURCE
    SOURCE #lastValueElementName
      #private IdentifierName lastValueElementName()
      #{
      #    return this.name();
      #}
      #
    ENDSOURCE
    SOURCE #lastValueType
      #private UtilElementType lastValueType()
      #{
      #    return UtilElementType::Form;
      #}
      #
    ENDSOURCE
    SOURCE #lastValueUserId
      #private UserId lastValueUserId()
      #{
      #    return curUserId();
      #}
      #
    ENDSOURCE
    SOURCE #markAll_JP
      #/// <summary>
      #/// Marks all fetched open transactions.
      #/// </summary>
      #/// <param name="_markAll">
      #/// Indicates whether mark all open transactions.
      #/// </param>
      #// <GJP>
      #void markAll_JP(boolean _markAll = true)
      #{
      #    if (isConsEnabled)
      #    {
      #        ttsbegin;
      #        vendTransOpen_ds.first();
      #        if (vendTransOpen.RecId
      #            && !manager.getTransMarked(vendTransOpen))
      #        {
      #            vendTransOpen_ds.editMarkTrans(true, vendTransOpen, _markAll);
      #        }
      #        while (vendTransOpen_ds.next())
      #        {
      #            if (vendTransOpen.RecId
      #                && !manager.getTransMarked(vendTransOpen))
      #            {
      #                vendTransOpen_ds.editMarkTrans(true, vendTransOpen, _markAll);
      #            }
      #        }
      #        ttscommit;
      #
      #        element.arrange();
      #    }
      #}
      #// </GJP>
      #
    ENDSOURCE
    SOURCE #mustRunPaymProposal
      #public boolean mustRunPaymProposal()
      #{
      #    ;
      #
      #    return (originator.TableId == tableNum(LedgerJournalTrans) &&
      #            runPaymProposal == NoYes::Yes   &&
      #            chkBoxRunPaymProposal.visible() &&
      #            chkBoxRunPaymProposal.enabled());
      #}
    ENDSOURCE
    SOURCE #pack
      #public container pack()
      #{
      #    return [#CurrentVersion,#CurrentList];
      #}
      #
    ENDSOURCE
    SOURCE #parmPostalAddressLocation
      #public LogisticsLocationRecId parmPostalAddressLocation(LogisticsLocationRecId _postalAddressLocation = vendTrans.RemittanceLocation)
      #{
      #    if (!prmisDefault(_postalAddressLocation))
      #    {
      #        postalAddressLocation = _postalAddressLocation;
      #    }
      #
      #    return postalAddressLocation;
      #}
    ENDSOURCE
    SOURCE #promptToUnmarkTrans
      #public void promptToUnmarkTrans()
      #{
      #    ;
      #
      #    if (manager.getSpecTransCount() > 0 && promptToDeleteSpecTrans == true)
      #    {
      #        if (SpecTrans::promptRemoveMarkedTransactions() == true)
      #        {
      #            manager.resetMarkedTrans();
      #
      #            //when no transaction marked so default the date used to calc discount to trans date
      #            manager.parmDateUsedToCalcDisc(dateNull());
      #            manager.parmDateTypeUsedToCalcDisc(CashDiscUsedToCalcDisc::TransactionDate);
      #
      #            this.updateDesignDynamic();
      #        }
      #    }
      #
      #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
      #    {
      #        manager.existTransWithDifferentVendBank();
      #    }
      #
      #    // Only ask the first time
      #    promptToDeleteSpecTrans = false;
      #}
    ENDSOURCE
    SOURCE #runPaymProposal
      #public CustVendPaymProposal runPaymProposal()
      #{
      #    LedgerJournalTrans ledgerJournalTrans;
      #    CustVendPaymProposalEditForm paymProposalEditForm;
      #    CustVendPaymProposal paymProposal;
      #    ;
      #
      #    if (originator.TableId == tableNum(LedgerJournalTrans))
      #    {
      #        ledgerJournalTrans = originator;
      #
      #        paymProposal = CustVendPaymProposal::newLedgerJournalTransProposal(ledgerJournalTrans);
      #
      #        vendTrans_ds.allowEdit(false);
      #        vendTrans_W_ds.allowEdit(false);
      #        vendTransCashDisc_ds.allowEdit(false);
      #        paymProposalEditForm = CustVendPaymProposalEditForm::newPaymProposal(paymProposal, false);
      #        paymProposalEditForm.parmCtrlProposalMode().visible(true);
      #        paymProposalEditForm.run();
      #        vendTrans_ds.allowEdit(element.doesCallerAllowEdit());
      #        vendTrans_W_ds.allowEdit(vendTrans_ds.allowEdit());
      #        vendTransCashDisc_ds.allowEdit(vendTrans_ds.allowEdit());
      #    }
      #
      #    return paymProposal;
      #}
    ENDSOURCE
    SOURCE #setInfoBar
      #/// <summary>
      #/// Sets the info bar visiblitiy.
      #/// </summary>
      #/// <param name="_refRecId">
      #/// The RecId of the table for which payment hold needs to be checked.
      #/// </param>
      #/// <param name="_tableId">
      #/// The TableId of the table for which payment hold needs to be checked.
      #/// </param>
      #public void setInfoBar(RefRecId _refRecId, TableId _tableId)
      #{
      #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
      #    {
      #        messageBarNew = new Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBar();
      #
      #        if (VendInvoiceHoldHistory::isPlaceInHold(_refRecId, _tableId))
      #        {
      #            messageBarNew.set_Text(strFmt("@SPS2499"));
      #            messagePane.Add(messageBarNew);
      #            messagePaneHost.visible(true);
      #        }
      #        else
      #        {
      #            messageBarNew.Hide();
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #setTaxWithholdVisible_IN
      #// <GIN>
      #void setTaxWithholdVisible_IN()
      #{
      #    TaxWithholdParameters_IN    taxWithholdParameters;
      #
      #    taxWithholdParameters = TaxWithholdParameters_IN::find();
      #    vendTransOpen_ds.object(fieldNum(VendTransOpen, tdsAmount_IN)).visible(taxWithholdParameters.tdsActivate);
      #    vendTransOpen_ds.object(fieldNum(VendTransOpen, tcsAmount_IN)).visible(taxWithholdParameters.tcsActivate);
      #    vendTransOpen_ds.object(fieldNum(VendTransOpen, TaxWithholdAmountOrigin_IN)).visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
      #    vendTransReferenceVoucher_IN.visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
      #}
      #// </GIN>
    ENDSOURCE
    SOURCE #setVisibleTransferLogFields_RU
      #void setVisibleTransferLogFields_RU(BankTransactionType _bankTransactionType)
      #{
      #    if (countryRegion_RU)
      #    {
      #        if ((element.args() && element.args().menuItemName() == menuitemDisplayStr(VendOpenTransBank_RU)) ||
      #            (_bankTransactionType && BankTransType::find(_bankTransactionType).BankAdvancedTransType_RU != BankAdvancedTransType_RU::None))
      #        {
      #            bankSpecAccountId_RU.visible(true);
      #            bankEntryAccountID_RU.visible(true);
      #
      #            vendTrans_DS.updateQuery_RU(true);
      #        }
      #        else
      #        {
      #            vendTrans_DS.updateQuery_RU(false);
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #unpack
      #public boolean unpack(container _packedClass)
      #{
      #    Version version = conPeek(_packedClass,1);
      #
      #    switch (version)
      #    {
      #        case #CurrentVersion :
      #            [version,#CurrentList] = _packedClass;
      #            break;
      #
      #        default :
      #            return false;
      #    }
      #
      #    return true;
      #}
    ENDSOURCE
    SOURCE #updateDataSourceDynamic
      #public void updateDataSourceDynamic()
      #{
      #    Query query;
      #    int i;
      #    ;
      #
      #    if (this.isQueryModificationRequired())
      #    {
      #        query = vendTransOpen_ds.query();
      #
      #        // Clear company range
      #        query.clearCompanyRange();
      #
      #        // Get current shared service companies
      #        companies = manager.parmSharedServiceCompanies();
      #
      #        for (i = 1; i <= conLen(companies); i++)
      #        {
      #            query.addCompanyRange(conPeek(companies, i));
      #        }
      #    }
      #
      #    // Set the PartyId range to the current vendor's PartyId
      #    Debug::assert(qbrPartyId != null);
      #    qbrPartyId.value(queryValue(manager.getParty()));
      #}
      #
    ENDSOURCE
    SOURCE #updateDataSourcePromissoryNote
      #public void updateDataSourcePromissoryNote(LedgerJournalTrans _ledgerJournalTrans,
      #                         LedgerJournalType  _ledgerJournalType)
      #{
      #    #Define.promissoryNoteDSNum(2)
      #
      #    FormDataSource  formDataSource = this.dataSource(#promissoryNoteDSNum);
      #    QueryBuildRange qbr_Status;
      #    ;
      #
      #    if (_ledgerJournalType == LedgerJournalType::VendPromissoryNoteDraw     ||
      #        _ledgerJournalType == LedgerJournalType::VendPromissoryNoteRedraw   ||
      #        _ledgerJournalType == LedgerJournalType::VendPaymRemittance         ||
      #        _ledgerJournalType == LedgerJournalType::VendPromissoryNoteSettle)
      #    {
      #        qbr_Status  = formDataSource.query().dataSourceTable(tableNum(VendTrans)).addRange(fieldNum(VendTrans,PromissoryNoteStatus));
      #
      #        switch (_ledgerJournalType)
      #        {
      #            case LedgerJournalType::VendPromissoryNoteDraw :
      #                qbr_Status.value(queryValue(CustVendNegInstStatus::None)    +  ',' +
      #                                 queryValue(CustVendNegInstStatus::Invoiced));
      #                break;
      #
      #            case LedgerJournalType::VendPaymRemittance :
      #                qbr_Status.value(queryValue(CustVendNegInstStatus::None)    +  ',' +
      #                                 queryValue(CustVendNegInstStatus::Drawn)   +  ',' +
      #                                 queryValue(CustVendNegInstStatus::Redrawn) +  ',' +
      #                                 queryValue(CustVendNegInstStatus::Invoiced));
      #
      #                break;
      #
      #            case LedgerJournalType::VendPromissoryNoteSettle :
      #                if (_ledgerJournalTrans.BankAccountId)
      #                {
      #                    qbr_Status.value(queryValue(CustVendNegInstStatus::Remitted)    +  ',' +
      #                                     queryValue(CustVendNegInstStatus::InvoiceRemitted));
      #                    formDataSource.query().dataSourceTable(tableNum(VendTrans)).addRange(fieldNum(VendTrans,CompanyBankAccountId)).value(queryValue(_ledgerJournalTrans.BankAccountId));
      #
      #                }
      #                else
      #                {
      #                    qbr_Status.value(queryValue(CustVendNegInstStatus::Drawn)       + ',' +
      #                                     queryValue(CustVendNegInstStatus::Redrawn)     + ',' +
      #                                     queryValue(CustVendNegInstStatus::Remitted)    + ',' +
      #                                     queryValue(CustVendNegInstStatus::InvoiceRemitted));
      #                }
      #
      #                break;
      #
      #            case LedgerJournalType::VendPromissoryNoteRedraw :
      #                throw error(Error::wrongUseOfFunction(this.name())); // Redraw of promissory notes cannot be used with open transactions
      #
      #            default :
      #        }
      #    }
      #    else
      #    {
      #        formDataSource.query().dataSourceTable(tableNum(VendTrans)).addRange(fieldNum(VendTrans, PromissoryNoteStatus)).value(
      #            strFmt('%1,%2',queryValue(CustVendNegInstStatus::None),
      #                           queryValue(CustVendNegInstStatus::Invoiced)));
      #    }
      #}
      #
    ENDSOURCE
    SOURCE #updateDataSourceStatic
      #public void updateDataSourceStatic()
      #{
      #    Query query;
      #    QueryBuildDataSource qbdsVendTransOpen;
      #    QueryBuildDataSource qbdsVendTrans;
      #    QueryBuildDataSource qbdsVendTable;
      #    ;
      #
      #    query = vendTransOpen_ds.query();
      #
      #    // Clear dynalinks for the VendTransOpen data source so that the caller's dataAreaId doesn't restrict the query
      #    qbdsVendTransOpen = query.dataSourceTable(tableNum(VendTransOpen));
      #    qbdsVendTransOpen.clearDynalinks();
      #
      #    // Add VendTable data source with Party range off VendTrans data source
      #    qbdsVendTrans = query.dataSourceTable(tableNum(VendTrans));
      #
      #    qbdsVendTable = qbdsVendTrans.addDataSource(tableNum(VendTable));
      #    qbdsVendTable.relations(true);
      #    qbdsVendTable.joinMode(JoinMode::InnerJoin);
      #
      #    // This needs to be set as it could be the second data source joined to the VendTrans.
      #    // This will force it to be treated as an inner join if it is the second joined data source.
      #    qbdsVendTable.fetchMode(0);
      #
      #    // minimize data returned from the query by specifying selection fields for only the required columns
      #    qbdsVendTable.addSelectionField(fieldNum(VendTable, Party));
      #
      #    qbrPartyId = qbdsVendTable.addRange(fieldNum(VendTable, Party));
      #}
    ENDSOURCE
    SOURCE #updateDesignConsInvoice_JP
      #/// <summary>
      #/// Updates the design for the consolidation invoice related controls.
      #/// </summary>
      #// <GJP>
      #public void updateDesignConsInvoice_JP()
      #{
      #    if (!isConsEnabled)
      #    {
      #        vendConsInvoiceSettle_JP.visible(false);
      #        dispConsId_JP.visible(false);
      #    }
      #}
      #// </GJP>
      #
    ENDSOURCE
    SOURCE #updateDesignDynamic
      #public void updateDesignDynamic()
      #{
      #    CurrencyCode displayCurrencyForLabels = manager.getDisplayCurrency();
      #    LedgerJournalTrans ledgerJournalTrans;
      #
      #    element.lockWindowUpdate(true);
      #
      #    if (currentDisplayCurrency != displayCurrencyForLabels ||
      #        currentDisplayCurrency == '')
      #    {
      #        // Set labels
      #        element.lock();
      #        possibleCashDiscPaymCur.label(strFmt("@SYS62020", displayCurrencyForLabels));
      #        cashDiscTakenPaymCur.label(strFmt("@SYS128750", displayCurrencyForLabels));
      #        cashDiscToTakePaymCur.label(strFmt("@SYS128751", displayCurrencyForLabels));
      #        fullSettlementCashDiscPaymCur.label(strFmt("@SYS319332", displayCurrencyForLabels));
      #        settlePaymCur.label(strFmt("@SYS114017", displayCurrencyForLabels));
      #        showRemainAmountCur.label(strFmt("@SYS110919", displayCurrencyForLabels));
      #        showTransferredAmountCur.label(strFmt("@SYS62023", displayCurrencyForLabels));
      #        showCashDiscTotalCur.label(strFmt("@SYS110921",displayCurrencyForLabels));
      #        element.unLock();
      #        currentDisplayCurrency = displayCurrencyForLabels;
      #    }
      #
      #    // Payment proposal checkbox control
      #    if (vendTrans_ds.allowEdit())
      #    {
      #        chkBoxRunPaymProposal.enabled(true);
      #    }
      #    else
      #    {
      #        chkBoxRunPaymProposal.enabled(false);
      #    }
      #
      #    // Settlement posting date control
      #    if (settlePostingDate.visible() && manager.parmSettlePostingType() == SettleDatePrinc::SelectDate)
      #    {
      #        settlePostingDate.enabled(true);
      #    }
      #    else
      #    {
      #        settlePostingDate.enabled(false);
      #    }
      #
      #    // Date to use for calculating discount control
      #    if(dateUsedToCalcDisc.visible())
      #    {
      #        if (SpecTrans::existMarkedPayment(originator.company(), originator.TableId, originator.RecId))
      #        {
      #            // Disable when primary payment is selected
      #            dateUsedToCalcDisc.enabled(false);
      #            dateTypeUsedToCalcDisc.enabled(false);
      #        }
      #        else if (manager.parmDateTypeUsedToCalcDisc() == CashDiscUsedToCalcDisc::SelectedDate)
      #        {
      #            dateUsedToCalcDisc.enabled(true);
      #            dateTypeUsedToCalcDisc.enabled(true);
      #        }
      #        else if (manager.parmDateTypeUsedToCalcDisc() == CashDiscUsedToCalcDisc::TransactionDate)
      #        {
      #            dateUsedToCalcDisc.enabled(false);
      #            dateTypeUsedToCalcDisc.enabled(true);
      #        }
      #    }
      #    else
      #    {
      #        dateUsedToCalcDisc.enabled(false);
      #        dateTypeUsedToCalcDisc.enabled(false);
      #    }
      #
      #    // Cross rate control - Overview grid
      #    if (settleExchRate.visible() &&
      #        originator.TableId == tableNum(LedgerJournalTrans)  ||
      #        (originator.TableId != tableNum(LedgerJournalTrans) &&
      #        SpecTrans::existMarkedPayment(originator.company(), originator.TableId, originator.RecId)))
      #    {
      #        settleExchRate.enabled(true);
      #    }
      #    else
      #    {
      #        settleExchRate.enabled(false);
      #    }
      #
      #    // Transaction reorganization button
      #    if (manager.canReorganizeTrans(vendTrans))
      #    {
      #        custVendTransReorgButton.enabled(true);
      #    }
      #    else
      #    {
      #        custVendTransReorgButton.enabled(false);
      #    }
      #
      #    // Enable or disabled based on transaction being marked
      #    if (manager.getTransMarked(vendTransOpen) == NoYes::Yes)
      #    {
      #        // Enable Amount to settle fields
      #        settleField.allowEdit(true);
      #
      #        if (settlePaymCur.visible())
      #        {
      #            settlePaymCur.allowEdit(true);
      #        }
      #
      #        // Enable Cross rate field
      #        if (settleExchRate.visible())
      #        {
      #            settleExchRate.allowEdit(true);
      #        }
      #
      #        remittanceTab.enabled(false);
      #    }
      #    else
      #    {
      #        // Disable Amount to settle fields
      #        settleField.allowEdit(false);
      #
      #        if (settlePaymCur.visible())
      #        {
      #            settlePaymCur.allowEdit(false);
      #        }
      #
      #        // Disable Cross rate field
      #        if (settleExchRate.visible())
      #        {
      #            settleExchRate.allowEdit(false);
      #        }
      #
      #        remittanceTab.enabled(true);
      #    }
      #
      #    this.updateDesignDynamicCashDiscount();
      #
      #    if (vendTrans.RecId != 0)
      #    {
      #        // Editing of CompanyBankAccountId field of vendTrans data source
      #        if (vendTrans.allowEditCompanyBankAccountId())
      #        {
      #            vendTrans_ds.object(fieldNum(VendTrans, CompanyBankAccountId)).allowEdit(true);
      #        }
      #        else
      #        {
      #            vendTrans_ds.object(fieldNum(VendTrans, CompanyBankAccountId)).allowEdit(false);
      #        }
      #
      #        // Editing of ThirdPartyBankAccountId field of vendTrans data source
      #        if (vendTrans.allowEditThirdPartyBankAccountId())
      #        {
      #            vendTrans_ds.object(fieldNum(VendTrans, ThirdPartyBankAccountId)).allowEdit(true);
      #        }
      #        else
      #        {
      #            vendTrans_ds.object(fieldNum(VendTrans, ThirdPartyBankAccountId)).allowEdit(false);
      #        }
      #    }
      #
      #    if (originator.TableId == tableNum(LedgerJournalTrans))
      #    {
      #        ledgerJournalTrans = originator;
      #
      #        if (ledgerJournalTrans.TaxWithholdGroup != '' &&
      #            vendTrans.Invoice != '' &&
      #            manager.getTransMarked(vendTransOpen) == NoYes::Yes)
      #        {
      #            // Allow creates, edits, and deletions on the tax withhold trans datasource
      #            taxWithholdTrans_ds.allowCreate(true);
      #            taxWithholdTrans_ds.allowEdit(true);
      #            taxWithholdTrans_ds.allowDelete(true);
      #        }
      #        else
      #        {
      #            // Disallow creates, edits, and deletions on the tax withhold trans datasource
      #            taxWithholdTrans_ds.allowCreate(false);
      #            taxWithholdTrans_ds.allowEdit(false);
      #            taxWithholdTrans_ds.allowDelete(false);
      #        }
      #    }
      #
      #    if (originator.TableId == tableNum(LedgerJournalTrans))
      #    {
      #        if (settleExchRate.visible()
      #            && CompanyInfo::standardCurrency() != vendTrans.CurrencyCode
      #            && CompanyInfo::standardCurrency() != ledgerJournalTrans.CurrencyCode
      #            && vendTrans.CurrencyCode != ledgerJournalTrans.CurrencyCode)
      #        {
      #            settleExchRate.allowEdit(true);
      #        }
      #        else
      #        {
      #            settleExchRate.allowEdit(false);
      #        }
      #    }
      #
      #    // Editing of cash discount amount to take, is only editable when line is marked and date to use for calculating
      #    // discount is selected date and use cash discount always or
      #    // when use cash discount is normal and partial discounts are allowed
      #    if ((manager.getTransMarked(vendTransOpen) == NoYes::Yes)
      #        && (manager.parmDateTypeUsedToCalcDisc() == CashDiscUsedToCalcDisc::SelectedDate)
      #        && ((vendTransOpen.UseCashDisc == UseCashDisc::Always)
      #            || (vendTransOpen.UseCashDisc == UseCashDisc::Normal
      #                && VendParameters::find().CashDiscForPartialPaym)))
      #    {
      #        // Enable Disc to take fields
      #        cashDiscToTake.allowEdit(true);
      #
      #        if (cashDiscToTakePaymCur.visible())
      #        {
      #            cashDiscToTakePaymCur.allowEdit(true);
      #        }
      #    }
      #    else
      #    {
      #        cashDiscToTake.allowEdit(false);
      #
      #        if (cashDiscToTakePaymCur.visible())
      #        {
      #            cashDiscToTakePaymCur.allowEdit(false);
      #        }
      #    }
      #
      #    // <GBR>
      #    if (BrazilParameters::isEnabled())
      #    {
      #        if (originator.TableId == tableNum(LedgerJournalTrans))
      #        {
      #            ledgerJournalTrans = originator;
      #        }
      #
      #        // Enable or disabled based on transaction being marked
      #        if (manager.getTransMarked(vendTransOpen) == NoYes::Yes)
      #        {
      #            vendTransOpen_ds.enableDisableInterestAndFine_BR(vendTransOpen, true);
      #        }
      #        else
      #        {
      #            vendTransOpen_ds.enableDisableInterestAndFine_BR(vendTransOpen, false);
      #        }
      #    }
      #    // </GBR>
      #
      #    if(manager.getSpecTransCount() > 1)
      #    {
      #        updateNow.enabled(true);
      #    }
      #    else
      #    {
      #        updateNow.enabled(false);
      #    }
      #
      #    // Info bar warning message
      #    if (dateUsedToCalcDiscGroup.visible()
      #        && markPayment.visible()
      #        && manager.parmDateTypeUsedToCalcDisc() != CashDiscUsedToCalcDisc::SelectedDate
      #        && manager.getSpecTransCount() > 0)
      #    {
      #        messagePaneHost.visible(true);
      #    }
      #    else
      #    {
      #        messagePaneHost.visible(false);
      #    }
      #
      #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
      #    {
      #        psaPwpInvoiceInquiry.visible(vendTransOpen.checkPwpEnabled(vendTransOpen));
      #    }
      #
      #    // <GEERU>
      #    vatTaxAgent_RU.visible(vendTrans.isVATTaxAgentPaymentFromVendorFunds_RU());
      #    // </GEERU>
      #    element.lockWindowUpdate(false);
      #}
    ENDSOURCE
    SOURCE #updateDesignDynamicCashDiscount
      #private void updateDesignDynamicCashDiscount()
      #{
      #    NoYes cashDiscOnInvoice;
      #
      #    if (vendTransOpen.RecId != 0)
      #    {
      #        // Enable editing of the cash discount data source if there is an open record
      #        vendTransCashDisc_ds.allowEdit(true);
      #
      #        // TaxParameters need to come from the company of the current open transaction
      #        changecompany(vendTransOpen.company())
      #        {
      #            cashDiscOnInvoice = TaxParameters::find().CashDiscOnInvoice;
      #        }
      #
      #        if (cashDiscOnInvoice)
      #        {
      #            // Disable Cash discount group on Overview tab
      #            groupCashDisc.enabled(false);
      #
      #            // Disable Cash discount tab
      #            cashDiscTab.enabled(false);
      #
      #            // Restrict editing of Use cash disc field
      #            vendTransOpen_UseCashDisc.allowEdit(false);
      #        }
      #        else
      #        {
      #            // Enable Cash discount group on Overview tab
      #            groupCashDisc.enabled(true);
      #
      #            // Disable Cash discount tab
      #            cashDiscTab.enabled(true);
      #
      #            // Allow editing of Use cash disc field
      #            vendTransOpen_UseCashDisc.allowEdit(true);
      #        }
      #
      #        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
      #        {
      #            if (vendTransOpen.allowEditThirdPartyBankAccountId() == true)
      #            {
      #                vendTransOpen_ds.object(fieldNum(VendTransOpen, ThirdPartyBankAccountId)).allowEdit(true);
      #            }
      #            else
      #            {
      #                vendTransOpen_ds.object(fieldNum(VendTransOpen, ThirdPartyBankAccountId)).allowEdit(false);
      #            }
      #        }
      #    }
      #    else
      #    {
      #        // There is no open transaction record, disable the cash discount data source editing
      #        vendTransCashDisc_ds.allowEdit(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #updateDesignStatic
      #public void updateDesignStatic()
      #{
      #    boolean taxWithholdCISEnabled = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoSA, #isoGB, #isoIE]);
      #
      #    switch (originator.TableId)
      #    {
      #        case tableNum(LedgerJournalTrans):
      #            // Show Transferred balances controls
      #            showtransferredAmount.visible(true);
      #            showTransferredAmountCur.visible(true);
      #
      #            // Show Payment proposal control
      #            chkBoxRunPaymProposal.visible(true);
      #
      #            // Hide Settlement posting date group
      #            // <GEERU>
      #            settlePostingTypeDate.visible(countryRegion_RU);
      #            // </GEERU>
      #
      #            //Hide Date to use to calc discount group
      #            dateUsedToCalcDiscGroup.visible(false);
      #
      #            // Hide Payment marked control
      #            paymentSpec.visible(false);
      #
      #            // Show Cross rate control
      #            settleExchRate.visible(true);
      #
      #            // Show Amount to settle in CUR control
      #            settlePaymCur.visible(true);
      #
      #            // Show Discount amount in CUR control
      #            possibleCashDiscPaymCur.visible(true);
      #            cashDiscTakenPaymCur.visible(true);
      #            cashDiscToTakePaymCur.visible(true);
      #
      #            // Show Alternate cash discount account control
      #            groupCashDiscAccount.visible(true);
      #
      #            // Hide Update button
      #            updateNow.visible(false);
      #
      #            // Hide Inquiry button
      #            queryButton.visible(false);
      #
      #            // Hide Mark payment button
      #            markPayment.visible(false);
      #
      #            // Show or hide fields based on journal type
      #            if (ledgerJournalType == LedgerJournalType::VendPromissoryNoteRedraw)
      #            {
      #                // Show Promissory note group
      #                promissoryNoteGroup.visible(true);
      #
      #                // Hide Transaction reorganization button
      #                custVendTransReorgButton.visible(false);
      #            }
      #            else
      #            {
      #                // Hide Promissory note group
      #                promissoryNoteGroup.visible(false);
      #
      #                // Show Transaction reorganization button
      #                custVendTransReorgButton.visible(true);
      #            }
      #
      #            if (ledgerJournalType == LedgerJournalType::Daily ||
      #                ledgerJournalType == LedgerJournalType::Payment)
      #            {
      #                // Show Full settlement control
      #                fullSettlement.visible(true);
      #
      #                // Show Tax withhold tab
      #                taxWithholdTab.visible(true);
      #            }
      #            else
      #            {
      #                // Hide Full settlement control
      #                fullSettlement.visible(false);
      #
      #                // Show/Hide Tax withhold tab based on Country context (visible for  GB, IE, TH and SA)
      #                taxWithholdTab.visible(taxWithholdCISEnabled);
      #            }
      #
      #            //Disable editing if Country context GB, IE, TH and SA
      #            if (taxWithholdCISEnabled)
      #            {
      #                element.updateWHTControls();
      #            }
      #
      #            // <GJP>
      #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
      #            {
      #                element.updateDesignConsInvoice_JP();
      #            }
      #            // </GJP>
      #
      #           break;
      #
      #        case tableNum(VendTable):
      #            // Hide Transferred balances controls
      #            showtransferredAmount.visible(false);
      #            showTransferredAmountCur.visible(false);
      #
      #            // Hide Payment proposal control
      #            chkBoxRunPaymProposal.visible(false);
      #
      #            // Show Settlement posting date group
      #            settlePostingTypeDate.visible(true);
      #
      #            //Show Date to use to calc discount group
      #            dateUsedToCalcDiscGroup.visible(true);
      #
      #            // Hide Full settlement control
      #            // . . . has been deactivated because the remaining amount is not calculated correctly
      #            //fullSettlement.visible(false);
      #
      #            // Show Payment marked control
      #            paymentSpec.visible(true);
      #
      #            // Hide PN group
      #            promissoryNoteGroup.visible(false);
      #
      #            // Show Cross rate control
      #            settleExchRate.visible(true);
      #
      #            // Hide Amount to settle in CUR control
      #            settlePaymCur.visible(false);
      #
      #            // Hide Discount amount in CUR control
      #            possibleCashDiscPaymCur.visible(false);
      #            cashDiscTakenPaymCur.visible(false);
      #            cashDiscToTakePaymCur.visible(false);
      #
      #            // Show Alternate cash discount account control
      #            groupCashDiscAccount.visible(true);
      #
      #            // Show Transaction reorganization button
      #            custVendTransReorgButton.visible(true);
      #
      #            // Show Update button
      #            updateNow.visible(true);
      #
      #            // Show Inquiry button
      #            queryButton.visible(true);
      #
      #            // Show Mark payment button
      #            markPayment.visible(true);
      #
      #            // Show/Hide Tax withhold tab based on Country context (visible for  GB, IE, TH and SA)
      #            taxWithholdTab.visible(taxWithholdCISEnabled);
      #
      #            //Disable editing if Country context GB, IE, TH and SA
      #            if (taxWithholdCISEnabled)
      #            {
      #                element.updateWHTControls();
      #            }
      #
      #            break;
      #
      #        case tableNum(PurchTable):
      #            // Hide Transferred balances controls
      #            showtransferredAmount.visible(false);
      #            showTransferredAmountCur.visible(false);
      #
      #            // Hide Payment proposal control
      #            chkBoxRunPaymProposal.visible(false);
      #
      #            // Hide Settlement posting date group
      #            settlePostingTypeDate.visible(false);
      #
      #            // Show Date to use for cash discount group
      #            dateUsedToCalcDiscGroup.visible(true);
      #
      #            // Hide Payment marked control
      #            paymentSpec.visible(false);
      #
      #            // Hide Full settlement control
      #            fullSettlement.visible(false);
      #
      #            // Hide PN group
      #            promissoryNoteGroup.visible(false);
      #
      #            // Hide Cross rate control
      #            settleExchRate.visible(false);
      #
      #            // Hide Amount to settle in CUR control
      #            settlePaymCur.visible(false);
      #
      #            // Hide Discount amount in CUR control
      #            possibleCashDiscPaymCur.visible(false);
      #            cashDiscTakenPaymCur.visible(false);
      #            cashDiscToTakePaymCur.visible(false);
      #
      #            // Hide Alternate cash discount account control
      #            groupCashDiscAccount.visible(false);
      #
      #            // Hide Transaction reorganization button
      #            custVendTransReorgButton.visible(false);
      #
      #            // Hide Update button
      #            updateNow.visible(false);
      #
      #            // Show Inquiry button
      #            queryButton.visible(true);
      #
      #            // Hide Mark payment button
      #            markPayment.visible(false);
      #
      #            // Show/Hide Tax withhold tab based on Country context (visible for  GB, IE, TH and SA)
      #            taxWithholdTab.visible(taxWithholdCISEnabled);
      #
      #            break;
      #
      #        default:
      #            Debug::assert(false);
      #            break;
      #    }
      #    // <GEERU>
      #    promissoryNoteGroup.visible(!countryRegion_RU);
      #
      #    balances_W.visible(TaxParameters::find().ReverseSettlementDatePrinciple_W || countryRegion_RU);
      #    if (custVendTransDetails && balances_W.visible())
      #    {
      #        custVendTransDetails.initBalanceList_RU(balanceList);
      #    }
      #    // </GEERU>
      #}
    ENDSOURCE
    SOURCE #updateTaxWithhold
      #public void updateTaxWithhold(
      #    VendTransOpen _vendTransOpen,
      #    AmountCur _settleAmountCur,
      #    CrossExchRate _crossRate)
      #{
      #    SpecTrans specTrans;
      #    container company = [_vendTransOpen.company()];
      #    LedgerJournalTrans ledgerJournalTrans;
      #    TaxWithholdTrans localTaxWithholdTrans;
      #    #ISOCountryRegionCodes
      #
      #    // Find the spec trans for the transaction
      #    specTrans = manager.getSpecTrans(_vendTransOpen);
      #
      #    // <GBR>
      #    // Delete all the taxWithholdTrans for the transaction, unmark possible selected tax transactions
      #    // and recreate TaxWithholdTrans.
      #    if (BrazilParameters::isEnabled() && originator.TableId == tableNum(LedgerJournalTrans))
      #    {
      #        ttsbegin;
      #        delete_from localTaxWithholdTrans
      #            where localTaxWithholdTrans.SpecTransId == specTrans.RecId;
      #        ttscommit;
      #
      #        ledgerJournalTrans = originator;
      #
      #        TaxWithhold::uncheckWithholdTrans_BR(ledgerJournalTrans);
      #
      #        if (taxWithhold)
      #        {
      #            taxWithhold.createTaxWithholdTrans(
      #                vendTrans,
      #                manager.getSpecTrans(_vendTransOpen),
      #                manager.getSettleAmount(_vendTransOpen) ,
      #                manager.getSpecTrans(_vendTransOpen).CrossRate);
      #        }
      #    }
      #    else
      #    // </GBR>
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoSA, #isoGB, #isoIE]))
      #    {
      #        if (taxWithhold)
      #        {
      #            ttsbegin;
      #            delete_from localTaxWithholdTrans
      #                where localTaxWithholdTrans.SpecTransId == specTrans.RecId;
      #            ttscommit;
      #
      #            taxWithhold.createTaxWithholdTrans_TH(
      #                manager.getSpecTrans(_vendTransOpen),
      #                manager.getSpecTrans(_vendTransOpen).CrossRate);
      #        }
      #    }
      #    else
      #    {
      #        ttsbegin;
      #
      #        // Find all the taxWithholdTrans for the transaction and update the amounts on the TaxWithholdTrans.
      #        while select forupdate crossCompany:company localTaxWithholdTrans
      #            where localTaxWithholdTrans.SpecTransId == specTrans.RecId
      #        {
      #            taxWithhold.changeInvoiceAmountSettle(localTaxWithholdTrans,
      #                vendTrans,
      #                _settleAmountCur,
      #                _crossRate);
      #
      #            localTaxWithholdTrans.update();
      #        }
      #
      #        ttscommit;
      #    }
      #
      #    taxWithholdTrans_ds.research();
      #}
    ENDSOURCE
    SOURCE #updateWHTControls
      #public void updateWHTControls()
      #{
      #    taxWithholdTrans_InvoiceAmount.allowEdit(false);
      #    taxWithholdTrans_InvoiceTaxAmount.allowEdit(false);
      #
      #    if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH]))
      #    {
      #        taxWithholdTrans_TaxWithholdAmount.allowEdit(false);
      #    }
      #
      #    groupTaxWithholdNotTaxable.visible(false);
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendTrans
          Table               #VendTrans
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #VendTransOpen
          LinkType            #InnerJoin
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD AccountNum
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TransDate
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Voucher
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Invoice
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Txt
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AmountCur
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD SettleAmountCur
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AmountMST
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD SettleAmountMST
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CurrencyCode
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD LastSettleVoucher
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD LastSettleDate
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Closed
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TransType
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Approved
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PaymId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ExchAdjustment
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD DocumentNum
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD DocumentDate
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Arrival
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD LastExchAdj
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Correct
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PostingProfile
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Settlement
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Cancel
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PostingProfileClose
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PostingProfileApprove
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PostingProfileCancel
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PostingProfileReOpen
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PostingChangeVoucher
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ThirdPartyBankAccountId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CompanyBankAccountId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PaymMode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    // <GBR>
                #    if (BrazilParameters::isEnabled())
                #    {
                #        vendTransEPRemit_BR_ds.reread();
                #        vendTransEPRemit_BR_ds.refresh();
                #        vendTransPayment_BR.paymspecModified_BR(vendTrans.PaymMode, vendTrans.PaymSpec);
                #        vendTransPayment_BR_ds.refresh();
                #    }
                #    // </GBR>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Tax1099Date
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Tax1099Amount
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Tax1099Num
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD OffsetRecid
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD PaymSpec
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    // <GBR>
                #    if (BrazilParameters::isEnabled())
                #    {
                #        vendTransEPRemit_BR_ds.reread();
                #        vendTransEPRemit_BR_ds.refresh();
                #        vendTransPayment_BR.paymspecModified_BR(vendTrans.PaymMode, vendTrans.PaymSpec);
                #        vendTransPayment_BR_ds.refresh();
                #    }
                #    // </GBR>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD VendPaymentGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    SysTableLookup          sysTableLookup          = SysTableLookup::newParameters(tableNum(VendPaymentGroupLookup),_formControl);
                #    Query                   query                   = new Query();
                #    QueryBuildDataSource    queryBuildDataSource    = query.addDataSource(tableNum(VendPaymentGroupLookup));
                #
                #    sysTableLookup.addLookupfield(fieldNum(VendPaymentGroupLookup, VendPaymentGroup));
                #
                #    queryBuildDataSource.addRange(fieldNum(VendPaymentGroupLookup, AccountNum)).value(vendTrans.AccountNum);
                #
                #    sysTableLookup.parmQuery(query);
                #
                #    sysTableLookup.performFormLookup();
                #
                #    super(_formControl, _filterStr);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    VendPaymentGrouping     origPaymentGroup = vendTrans.orig().VendPaymentGroup;
                #    super();
                #
                #    if(vendTrans.validateWrite())
                #    {
                #        vendTrans.write();
                #
                #    }
                #
                #    vendTrans_ds.executeQuery();
                #    vendTrans_ds.reread();
                #    vendTrans_ds.refresh();
                #
                #    //if a payment group is deleted, and the settlement is currently marked, and there are other invoices in the payment group, then unmark this invoice.
                #    if(vendTrans.VendPaymentGroup == '' && vendTransOpen_ds.editMarkTrans(false, vendTransOpen, NoYes::No == NoYes::Yes)
                #            && SpecTrans::findNumberOfMarkedVendPaymentGroups(origPaymentGroup, vendTrans.company()) > 0)
                #    {
                #        vendTransOpen_ds.editMarkTrans(true, vendTransOpen, NoYes::No);
                #    }
                #    //if the settlement is marked and payment group is changed to another payment group, then mark the entire group.
                #    else if(vendTrans.VendPaymentGroup != '' && vendTransOpen_ds.editMarkTrans(false, vendTransOpen, NoYes::No == NoYes::Yes))
                #    {
                #        paymentGroupBeingModified = true;
                #        vendTransOpen_ds.editMarkTrans(true, vendTransOpen, NoYes::Yes);
                #        paymentGroupBeingModified = false;
                #    }
                #    //if the payment group is changed to a marked payment group, mark that payment group.
                #    else if(SpecTrans::findNumberOfMarkedVendPaymentGroups(vendTrans.VendPaymentGroup, vendTrans.company()) > 0)
                #    {
                #        vendTransOpen_ds.editMarkTrans(true, vendTransOpen, NoYes::Yes);
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD RemittanceLocation
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    if(vendTrans_ds.validateWrite())
                #    {
                #        vendTrans_ds.write();
                #    }
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (!ret)
                #    {
                #        if (DialogButton::Ok == Box::okCancel("@SYS300934", DialogButton::Ok))
                #        {
                #            vendTrans_ds.refreshEx();
                #        }
                #        else
                #        {
                #            return false;
                #        }
                #    }
                #    return true;
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    ret = LogisticsLocation::lookupRemittanceLocation(_formReferenceControl, vendTrans.AccountNum);
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD modifiedDateTime
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD modifiedBy
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD modifiedTransactionId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD createdDateTime
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD createdBy
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD createdTransactionId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD dataAreaId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD RecId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TableId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD sequenceNum
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #updateQuery_RU
          #void updateQuery_RU(boolean _showTransfer = false)
          #{
          #    QueryFilter queryFilter = SysQuery::findOrCreateQueryFilter(
          #        this.query(),
          #        this.query().dataSourceTable(tableNum(VendTrans_W)),
          #        fieldStr(VendTrans_W, BankCurrencyTransferId_RU));
          #
          #    queryFilter.value(_showTransfer ? SysQuery::valueNotEmptyString() : SysQuery::valueEmptyString());
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    super();
          #    dimensionDefaultingController.deleted();
          #}
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    FormTabPageControl formControl;
          #
          #    ret = super();
          #
          #    // Reload the dimension defaulting controller as the company may have changed
          #    if (vendTrans.company() != currentCompany)
          #    {
          #        currentCompany = vendTrans.company();
          #        formControl = tabControl.getActivePage();
          #        dimensionDefaultingController.reactivate(currentCompany);
          #        formControl.activatePage();
          #
          #        // Reset the dimension controller default accounts as the company may have changed
          #        ledgerDimensionDefaultAccountController.parmControl(vendTransOpen_CashDiscAccount);
          #        ledgerDimensionDefaultAccountController.parmFilterLedgerPostingType(LedgerPostingType::None);
          #        ledgerDimensionDefaultAccountController.parmCurrentLedgerCOA(LedgerChartOfAccounts::current());
          #        ledgerDimensionDefaultAccountController.setDataAreaId(currentCompany);
          #    }
          #    else
          #    {
          #        dimensionDefaultingController.activated();
          #    }
          #
          #    vendTrans_ds.allowEdit(element.doesCallerAllowEdit());
          #
          #    element.updateDesignDynamic();
          #
          #    // <GEERU>
          #    if (custVendTransDetails && balances_W.visible())
          #    {
          #        custVendTransDetails.setCustVendTrans(vendTrans);
          #        custVendTransDetails.createBalanceList_RU(balanceList);
          #    }
          #    // </GEERU>
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    QueryBuildRange criteriaApproved;
          #
          #    super();
          #
          #    criteriaApproved = this.query().dataSourceTable(tableNum(VendTrans)).addRange(fieldNum(VendTrans,Approved));
          #    criteriaApproved.value('1');
          #    // <GEERU>
          #    if (TaxParameters::find().ReverseSettlementDatePrinciple_W || countryRegion_RU)
          #    {
          #        custVendTransDetails = new CustVendTransDetails(vendTrans);
          #    }
          #
          #    if (countryRegion_RU)
          #    {
          #        this.cacheAddMethod(tableMethodStr(VendTrans, agreementId_RU));
          #        this.cacheAddMethod(tableMethodStr(VendTrans, agreementDocumentTitle_RU));
          #    }
          #    // </GEERU>
          #
          #    // <GBR>
          #    if (BrazilParameters::isEnabled())
          #    {
          #        this.cacheAddMethod(tableMethodStr(VendTrans, fiscalEstablishmentId_BR));
          #    }
          #    // </GBR>
          #}
        ENDSOURCE
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    QueryBuildRange promissoryNoteStatusRange;
          #    ;
          #    if(originator.TableId != tableNum(LedgerJournalTrans))
          #    {
          #        promissoryNoteStatusRange = this.query().dataSourceTable(tableNum(VendTrans)).addRange(fieldNum(VendTrans, PromissoryNoteStatus));
          #        promissoryNoteStatusRange.value(queryRangeConcat(queryValue(CustVendNegInstStatus::Invoiced), queryValue(CustVendNegInstStatus::None)));
          #    }
          #
          #    super();
          #
          #
          #}
          #
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    dimensionDefaultingController.writing();
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendTransOpen
          Table               #VendTransOpen
          AllowCreate         #No
          AllowDelete         #No
          CrossCompanyAutoQuery #Yes
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD DueDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #// <GBR>
                #public void modified()
                #{
                #    TransDate           transDate;
                #
                #    super();
                #
                #    transDate = element.getTransDate_BR();
                #
                #    if (manager.getTransMarked(vendTransOpen) == NoYes::Yes)
                #    {
                #
                #        if (vendTransOpen.InterestCode_BR && vendTransOpen.FineCode_BR)
                #        {
                #            if((Box::yesNo(strFmt("@GLS1268",
                #                                    fieldPName(VendTransOpen, DueDate),
                #                                    fieldPName(VendTransOpen, InterestAmount_BR),
                #                                    fieldPName(VendTransOpen, FineAmount_BR)),
                #                                    DialogButton::No) == DialogButton::Yes))
                #            {
                #                manager.calcAndUpdateInterest_BR(vendTransOpen.company(),
                #                                             vendTransOpen,
                #                                             transDate);
                #                manager.calcAndUpdateFine_BR(vendTransOpen.company(),
                #                                      vendTransOpen,
                #                                      transDate);
                #            }
                #        }
                #        else
                #        {
                #            if (vendTransOpen.InterestCode_BR)
                #            {
                #                if (Box::yesNo(strFmt("@GLS1009",fieldPName(VendTransOpen, DueDate),
                #                                fieldPName(VendTransOpen, InterestAmount_BR)), DialogButton::No) == DialogButton::Yes)
                #                {
                #                    manager.calcAndUpdateInterest_BR(vendTransOpen.company(),
                #                                                 vendTransOpen,
                #                                                 transDate);
                #                }
                #            }
                #            else
                #            {
                #                if (vendTransOpen.FineCode_BR)
                #                {
                #                    if ((Box::yesNo(strFmt("@GLS1009",fieldPName(VendTransOpen, DueDate),
                #                                    fieldPName(VendTransOpen, FineAmount_BR)), DialogButton::No) == DialogButton::Yes))
                #                    {
                #                        manager.calcAndUpdateFine_BR(vendTransOpen.company(),
                #                                              vendTransOpen,
                #                                              transDate);
                #                    }
                #                }
                #            }
                #        }
                #    }
                #
                #    // Update open trans record
                #    vendTransOpen_ds.write();
                #
                #    vendTransOpen_ds.refresh();
                #
                #}
                #// </GBR>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD UseCashDisc
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    ;
                #
                #    super();
                #
                #    manager.updateUseCashDisc(vendTransOpen);
                #
                #    // Update open trans record
                #    vendTransOpen_ds.write();
                #
                #    // Set current table buffer record for CustTransCashDisc
                #    vendTransCashDisc_ds.findRecord(manager.findApplicableCustVendTransCashDisc(vendTransOpen));
                #
                #    vendTransOpen_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD CashDiscountLedgerDimension
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    return ledgerDimensionDefaultAccountController.resolveReference();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD TDSAmount_IN
            PROPERTIES
              Visible             #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TCSAmount_IN
            PROPERTIES
              Visible             #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InterestAmount_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret && vendTransOpen.InterestAmount_BR > 0)
                #    {
                #        error("@GLS931");
                #        return false;
                #    }
                #
                #    return ret;
                #}
                #
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    manager.updateInterestAmount_BR(vendTransOpen.company(),
                #                                    vendTransOpen,
                #                                    vendTransOpen.InterestAmount_BR);
                #
                #    // Update open trans record
                #    vendTransOpen_ds.write();
                #    vendTransOpen_ds.refresh();
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD FineAmount_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #// <GBR>
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret && vendTransOpen.FineAmount_BR > 0)
                #    {
                #        error("@GLS1233");
                #        return false;
                #    }
                #    return ret;
                #}
                #// </GBR>
              ENDSOURCE
              SOURCE #modified
                #// <GBR>
                #public void modified()
                #{
                #    super();
                #
                #    manager.updateFineAmount_BR(vendTransOpen.company(),
                #                                vendTransOpen,
                #                                vendTransOpen.FineAmount_BR);
                #
                #    // Update open trans record
                #    vendTransOpen_ds.write();
                #    vendTransOpen_ds.refresh();
                #}
                #// </GBR>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InterestCode_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    TransDate           transDate;
                #    LedgerJournalTrans  ledgerJournalTrans;
                #
                #    super();
                #
                #    if (manager.getTransMarked(vendTransOpen) == NoYes::Yes)
                #    {
                #        if(Box::yesNo(strFmt("@GLS1009",
                #            fieldPName(VendTransOpen, InterestCode_BR), fieldPName(VendTransOpen, InterestAmount_BR)),
                #            DialogButton::No) == DialogButton::Yes)
                #        {
                #            if(vendTrans.Invoice && vendTransOpen.AmountCur < 0)
                #            {
                #                if (originator.TableId == tableNum(LedgerJournalTrans))
                #                {
                #                    ledgerJournalTrans  = originator;
                #                    transDate           = ledgerJournalTrans.TransDate;
                #                }
                #                else
                #                {
                #                    transDate           =  dateNull();
                #                }
                #                manager.calcAndUpdateInterest_BR(vendTransOpen.company(),
                #                                                 vendTransOpen,
                #                                                 transDate);
                #            }
                #        }
                #    }
                #    else
                #    {
                #        manager.calcAndUpdateInterest_BR(vendTransOpen.company(),
                #                                         vendTransOpen,
                #                                         dateNull());
                #    }
                #
                #    // Update open trans record
                #    vendTransOpen_ds.write();
                #    vendTransOpen_ds.refresh();
                #
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD FineCode_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #// <GBR>
                #public void modified()
                #{
                #    TransDate           transDate;
                #    LedgerJournalTrans  ledgerJournalTrans;
                #
                #    super();
                #
                #    if (manager.getTransMarked(vendTransOpen) == NoYes::Yes)
                #    {
                #        if(Box::yesNo(strFmt("@GLS1009",
                #            fieldPName(VendTransOpen, FineCode_BR), fieldPName(VendTransOpen, FineAmount_BR)),
                #            DialogButton::No) == DialogButton::Yes)
                #        {
                #            if(vendTrans.Invoice && vendTransOpen.AmountCur < 0)
                #            {
                #                if (originator.TableId == tableNum(LedgerJournalTrans))
                #                {
                #                    ledgerJournalTrans  = originator;
                #                    transDate           = ledgerJournalTrans.TransDate;
                #                }
                #                else
                #                {
                #                    transDate           =  dateNull();
                #                }
                #
                #                manager.calcAndUpdateFine_BR(vendTransOpen.company(),
                #                                      vendTransOpen,
                #                                      transDate);
                #            }
                #        }
                #    }
                #    else
                #    {
                #        manager.calcAndUpdateFine_BR(vendTransOpen.company(),
                #                              vendTransOpen,
                #                              dateNull());
                #    }
                #    // Update open trans record
                #    vendTransOpen_ds.write();
                #    vendTransOpen_ds.refresh();
                #}
                #// </GBR>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #enableDisableInterestAndFine_BR
          #public void enableDisableInterestAndFine_BR(VendTransOpen _vendTransOpen, boolean _enabled)
          #{
          #    VendTrans   vendTransLoc;
          #    TransDate   transDate;
          #
          #    changecompany (vendTransOpen.company())
          #    {
          #        select RecId from vendTransLoc
          #            where vendTransLoc.RecId    == _vendTransOpen.RefRecId &&
          #                vendTransLoc.Invoice  != '';
          #    }
          #
          #    if (_enabled && vendTransLoc && !manager.getTransMarkedByOtherSpec(_vendTransOpen))
          #    {
          #        transDate = element.getTransDate_BR();
          #
          #        if (_vendTransOpen.DueDate < transDate)
          #        {
          #            vendTransOpen_ds.object(fieldNum(VendTransOpen, FineAmount_BR)).allowEdit(true);
          #            vendTransOpen_ds.object(fieldNum(VendTransOpen, InterestAmount_BR)).allowEdit(true);
          #        }
          #        else
          #        {
          #            vendTransOpen_ds.object(fieldNum(VendTransOpen, FineAmount_BR)).allowEdit(false);
          #            vendTransOpen_ds.object(fieldNum(VendTransOpen, InterestAmount_BR)).allowEdit(false);
          #        }
          #
          #        if (_vendTransOpen.AmountCur <= 0)
          #        {
          #            vendTransOpen_ds.object(fieldNum(VendTransOpen, FineCode_BR)).allowEdit(true);
          #            vendTransOpen_ds.object(fieldNum(VendTransOpen, InterestCode_BR)).allowEdit(true);
          #        }
          #        else
          #        {
          #            vendTransOpen_ds.object(fieldNum(VendTransOpen, FineCode_BR)).allowEdit(false);
          #            vendTransOpen_ds.object(fieldNum(VendTransOpen, InterestCode_BR)).allowEdit(false);
          #        }
          #    }
          #    else
          #    {
          #        vendTransOpen_ds.object(fieldNum(VendTransOpen, InterestAmount_BR)).allowEdit(false);
          #        vendTransOpen_ds.object(fieldNum(VendTransOpen, FineAmount_BR)).allowEdit(false);
          #        vendTransOpen_ds.object(fieldNum(VendTransOpen, InterestCode_BR)).allowEdit(false);
          #        vendTransOpen_ds.object(fieldNum(VendTransOpen, FineCode_BR)).allowEdit(false);
          #    }
          #}
          #
        ENDSOURCE
        SOURCE #unmarkTaxWithhold_BR
          #boolean unmarkTaxWithhold_BR(VendTransOpen _vendTransOpen, NoYes _markTrans)
          #{
          #    Common              currentLine;
          #    boolean             exceptionDuringUnselectAll;
          #    boolean             unmarkTax = NoYes::No;
          #    ;
          #
          #    if (!_markTrans && taxWithhold && originator.TableId == tableNum(LedgerJournalTrans))
          #    {
          #        if (!currentlyUnmarkingAll && taxWithhold.needsToUnselectAll_BR(_vendTransOpen, originator))
          #        {
          #            currentLine.RecId = this.cursor().RecId;
          #            if (Box::yesNo("@GLS2053", DialogButton::No, "@GLS2052") == DialogButton::Yes)
          #            {
          #                element.lockWindowUpdate(true);
          #                try
          #                {
          #                    currentlyUnmarkingAll = true;
          #                    this.first();
          #                    do
          #                    {
          #                        if (this.editMarkTrans(false, this.cursor(), NoYes::No) && TaxWithhold::hasWithhold_BR(this.cursor(), originator))
          #                        {
          #                            this.editMarkTrans(true, this.cursor(), NoYes::No);
          #                        }
          #
          #                    } while (this.next());
          #
          #                    currentlyUnmarkingAll = false;
          #                    this.refresh();
          #                    element.unLock();
          #                }
          #                catch
          #                {
          #                    exceptionDuringUnselectAll = true;
          #                }
          #
          #                this.findRecord(currentLine);
          #                element.lockWindowUpdate(false);
          #
          #                if (exceptionDuringUnselectAll)
          #                {
          #                    throw Exception::Error;
          #                }
          #
          #                unmarkTax = NoYes::No;
          #            }
          #            else
          #            {
          #                unmarkTax = NoYes::Yes;
          #            }
          #        }
          #    }
          #
          #    return unmarkTax;
          #}
          #// </GBR>
          #
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    super();
          #
          #}
        ENDSOURCE
        SOURCE #editCashDiscToTakePaymCur
          #// BP Deviation documented
          #public edit AmountCur editCashDiscToTakePaymCur(boolean _set, VendTransOpen _vendTransOpen, AmountCur _cashDiscToTakePaymCur)
          #{
          #    AmountCur returnCashDiscToTakePaymCur;
          #    ;
          #
          #    if (_set)
          #    {
          #        manager.updateCashDiscAmountToTakePaymCur(_vendTransOpen, _cashDiscToTakePaymCur);
          #    }
          #
          #    returnCashDiscToTakePaymCur = manager.getCashDiscAmountToTakePaymCur(_vendTransOpen);
          #
          #    return returnCashDiscToTakePaymCur;
          #}
          #
        ENDSOURCE
        SOURCE #displayCashDiscTakenPaymCur
          #// BP Deviation documented
          #public display AmountCur displayCashDiscTakenPaymCur(VendTransOpen _vendTransOpen)
          #{
          #    AmountCur returnCashDiscTakenPaymCur;
          #    ;
          #
          #    returnCashDiscTakenPaymCur = manager.getCashDiscAmountTakenPaymCur(_vendTransOpen);
          #
          #    return returnCashDiscTakenPaymCur;
          #}
          #
        ENDSOURCE
        SOURCE #editCashDiscToTake
          #// BP Deviation documented
          #public edit CashDiscAmount editCashDiscToTake(boolean _set, VendTransOpen _vendTransOpen, AmountCur _cashDiscToTake)
          #{
          #    CashDiscAmount returnCashDiscToTake;
          #    ;
          #
          #    if (_set)
          #    {
          #        manager.updateCashDiscToTake(_vendTransOpen, _cashDiscToTake);
          #
          #    }
          #
          #    returnCashDiscToTake = manager.getCashDiscAmountToTake(_vendTransOpen);
          #
          #    return returnCashDiscToTake;
          #}
          #
        ENDSOURCE
        SOURCE #linkActive
          #public void linkActive()
          #{
          #    ;
          #
          #    element.lockWindowUpdate(true);
          #
          #    element.initFromCaller();
          #
          #    element.promptToUnmarkTrans();
          #
          #    super();
          #
          #    element.lockWindowUpdate(false);
          #}
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #    // <GIN>
          #    LedgerJournalType           ledgerJournalTypeLoc;
          #    LedgerJournalTrans          ledgerJournalTrans;
          #    TaxWithholdParameters_IN    taxWithholdParameter = TaxWithholdParameters_IN::find();
          #    // </GIN>
          #
          #    ret = super();
          #
          #    element.updateDesignDynamic();
          #
          #    vendTransCashDisc_ds.research();
          #
          #    // Set current table buffer record for VendTransCashDisc
          #    vendTransCashDisc_ds.findRecord(manager.findApplicableCustVendTransCashDisc(vendTransOpen));
          #    // <GIN>
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
          #       && (taxWithholdParameter.tdsActivate || taxWithholdParameter.tcsActivate))
          #    {
          #        ledgerJournalTypeLoc  = ledgerJournalTrans.ledgerJournalTable().JournalType;
          #        if (element.args().dataset() != tableNum(VendTable))
          #        {
          #            if (ledgerJournalTypeLoc  == LedgerJournalType::Daily
          #              || ledgerJournalTypeLoc == LedgerJournalType::Payment)
          #            {
          #                if (vendTransOpen.TaxWithholdStatus_IN == NoYes::Yes)
          #                {
          #                    taxWithholdSettleTrans_IN.enabled(true);
          #                    settleField.enabled(false);
          #                    settlePaymCur.enabled(false);
          #                }
          #                else
          #                {
          #                    taxWithholdSettleTrans_IN.enabled(false);
          #                    settleField.enabled(true);
          #                    settlePaymCur.enabled(true);
          #                }
          #            }
          #        }
          #    }
          #    // </GIN>
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #displayTransMarkedByOtherSpec
          #//BP Deviation Documented
          #public display ImageRes displayTransMarkedByOtherSpec(VendTransOpen _vendTransOpen)
          #{
          #    int image;
          #    ;
          #
          #    if (manager.getTransMarkedByOtherSpec(_vendTransOpen))
          #    {
          #        image = imageList.image(#ImageAboveEstimate);
          #    }
          #    else
          #    {
          #        image = -1;
          #    }
          #
          #    return image;
          #}
        ENDSOURCE
        SOURCE #displayPrimaryPaymentMarked
          #//BP Deviation Documented
          #public display ImageRes displayPrimaryPaymentMarked(VendTransOpen _vendTransOpen)
          #{
          #    int image;
          #    ;
          #
          #    if (manager.getMarkedPrimaryPayment(_vendTransOpen) == NoYes::Yes)
          #    {
          #        image = imageList.image(#ImageInfo);
          #    }
          #    else
          #    {
          #        image = -1;
          #    }
          #
          #    return image;
          #}
        ENDSOURCE
        SOURCE #editMarkTrans
          #// BP Deviation documented
          #public edit NoYes editMarkTrans(boolean _set, VendTransOpen _vendTransOpen, NoYes _markTrans)
          #{
          #    #ISOCountryRegionCodes
          #    NoYes returnMarkTrans;
          #    boolean vendPaymentGroupFeatureEnabled;
          #    boolean canBeMarked = true;
          #    // <GBR>
          #    LedgerJournalTrans  ledgerJournalTrans;
          #    // </GBR>
          #
          #    vendPaymentGroupFeatureEnabled = (VendParameters::find().VendPaymentGroupingEnable == NoYes::Yes);
          #
          #    if (_set)
          #    {
          #        // <GBR>
          #        if(BrazilParameters::isEnabled() && this.unmarkTaxWithhold_BR(_vendTransOpen, _markTrans))
          #        {
          #            return manager.getTransMarked(_vendTransOpen);
          #        }
          #        // </GBR>
          #
          #        // <GEERU>
          #        if (vendTrans.VendPaymentGroup                                                        &&
          #            VendParameters::find().DimSettlementCtrlType_RU != DimSettlementCtrlType_RU::None &&
          #            ((_markTrans == NoYes::Yes && Box::yesNo("@GLS116014", DialogButton::Yes) == DialogButton::No) ||
          #             (_markTrans == NoYes::No  && Box::yesNo("@GLS116015", DialogButton::Yes) == DialogButton::No)))
          #        {
          #            vendPaymentGroupFeatureEnabled = false;
          #        }
          #        // </GEERU>
          #
          #        // <GBR>
          #        if (BrazilParameters::isEnabled() && originator.TableId == tableNum(LedgerJournalTrans) && _markTrans)
          #        {
          #            ledgerJournalTrans = originator;
          #            manager.calcAndUpdateFine_BR(_vendTransOpen.company(),
          #                                         _vendTransOpen,
          #                                         ledgerJournalTrans.TransDate);
          #            manager.calcAndUpdateInterest_BR(_vendTransOpen.company(),
          #                                             _vendTransOpen,
          #                                             ledgerJournalTrans.TransDate);
          #        }
          #        // </GBR>
          #
          #        if(vendPaymentGroupFeatureEnabled && (originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable) || originator.TableId == tableNum(PurchTable)))
          #        {
          #            element.lockWindowUpdate(true);
          #            manager.vendPaymentGroupsUpdateTransMarked(_vendTransOpen, _markTrans, this, vendTrans.VendPaymentGroup, taxWithhold, originator, paymentGroupBeingModified);
          #            element.lockWindowUpdate(false);
          #        }
          #        else
          #        {
          #            if (vendTrans.RemittanceLocation && _markTrans)
          #            {
          #                canBeMarked = manager.checkRemittanceTransCanBeMarked(_vendTransOpen);
          #            }
          #
          #            if (canBeMarked)
          #            {
          #                manager.updateTransMarked(_vendTransOpen, _markTrans);
          #                // <GIN>
          #                if (TaxWithholdParameters_IN::checkTaxParameters())
          #                {
          #                    manager.updateTransMarkedAdjustJournals_IN(_vendTransOpen, _markTrans);
          #                }
          #                // </GIN>
          #            }
          #        }
          #
          #        if (canBeMarked && _markTrans == NoYes::Yes
          #            && (originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable))
          #            && taxWithhold != null
          #            && !vendPaymentGroupFeatureEnabled)
          #        {
          #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoSA, #isoGB, #isoIE]))
          #            {
          #                taxWithhold.createTaxWithholdTrans_TH(
          #                    manager.getSpecTrans(_vendTransOpen),
          #                    manager.getSpecTrans(_vendTransOpen).CrossRate);
          #            }
          #            else
          #            {
          #                taxWithhold.createTaxWithholdTrans(
          #                    vendTrans,
          #                    manager.getSpecTrans(_vendTransOpen),
          #                    manager.getSettleAmount(_vendTransOpen, false) + vendTransCashDisc.CashDiscAmount,
          #                    manager.getSpecTrans(_vendTransOpen).CrossRate);
          #            }
          #        }
          #
          #        element.updateDesignDynamic();
          #
          #        taxWithholdTrans_ds.executeQuery();
          #    }
          #
          #    returnMarkTrans = manager.getTransMarked(_vendTransOpen);
          #
          #    return returnMarkTrans;
          #}
        ENDSOURCE
        SOURCE #editFullSettlement
          #// BP Deviation documented
          #public edit NoYes editFullSettlement(boolean _set, VendTransOpen _vendTransOpen, NoYes _fullSettlement)
          #{
          #    NoYes returnFullSettlement;
          #    ;
          #
          #    if (_set)
          #    {
          #        if (_fullSettlement && manager.getJournalTransAmountMst() == 0)
          #        {
          #            warning("@SYS122493");
          #        }
          #        else
          #        {
          #            manager.updateFullSettlement(_vendTransOpen, _fullSettlement);
          #            this.refresh();
          #        }
          #    }
          #
          #    returnFullSettlement = manager.getFullSettlement(_vendTransOpen);
          #
          #    return returnFullSettlement;
          #}
        ENDSOURCE
        SOURCE #editCrossRate
          #//BP Deviation Documented
          #public edit CrossExchRate editCrossRate(boolean _set, VendTransOpen _vendTransOpen, CrossExchRate _crossRate)
          #{
          #    CrossExchRate returnCrossRate;
          #    ;
          #
          #    if (_set)
          #    {
          #        manager.updateCrossRate(_vendTransOpen, _crossRate);
          #
          #        if ((originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable))
          #            && taxWithholdTrans.RecId != 0)
          #        {
          #            element.updateTaxWithhold(
          #                _vendTransOpen,
          #                manager.getSettleAmount(_vendTransOpen) + vendTransCashDisc.CashDiscAmount,
          #                manager.getSpecTrans(_vendTransOpen).CrossRate);
          #        }
          #    }
          #
          #    returnCrossRate = manager.getCrossRate(_vendTransOpen);
          #
          #    return returnCrossRate;
          #}
          #
        ENDSOURCE
        SOURCE #editSettleAmountCur
          #// BP Deviation documented
          #public edit AmountCur editSettleAmountCur(boolean _set, VendTransOpen _vendTransOpen, AmountCur _settleAmountCur)
          #{
          #    AmountCur returnSettleAmountCur;
          #    ;
          #
          #    if (_set)
          #    {
          #        manager.updateSettleAmount(_vendTransOpen, _settleAmountCur);
          #
          #        if ((originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable))
          #            && taxWithholdTrans.RecId != 0)
          #        {
          #            element.updateTaxWithhold(
          #                _vendTransOpen,
          #                manager.getSettleAmount(_vendTransOpen),
          #                manager.getSpecTrans(_vendTransOpen).CrossRate);
          #        }
          #        vendTransOpen_ds.refresh();
          #    }
          #
          #    returnSettleAmountCur = manager.getSettleAmount(_vendTransOpen);
          #
          #    return returnSettleAmountCur;
          #}
        ENDSOURCE
        SOURCE #editSettleAmountPaymCur
          #// BP Deviation documented
          #public edit AmountCur editSettleAmountPaymCur(boolean _set, VendTransOpen _vendTransOpen, AmountCur _settleAmountPaymCur)
          #{
          #    AmountCur returnSettleAmountPaymCur;
          #    ;
          #
          #    if (_set)
          #    {
          #        manager.updateSettleAmountPaymCur(_vendTransOpen, _settleAmountPaymCur);
          #
          #        if ((originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable))
          #            && taxWithholdTrans.RecId != 0)
          #        {
          #            element.updateTaxWithhold(
          #                _vendTransOpen,
          #                manager.getSettleAmount(_vendTransOpen),
          #                manager.getSpecTrans(_vendTransOpen).CrossRate);
          #        }
          #        vendTransOpen_ds.refresh();
          #    }
          #
          #    returnSettleAmountPaymCur = manager.getSettleAmountPaymCur(_vendTransOpen);
          #
          #    return returnSettleAmountPaymCur;
          #}
        ENDSOURCE
        SOURCE #editCashDiscAmountPaymCur
          #// BP Deviation documented
          #public edit AmountCur editCashDiscAmountPaymCur(boolean _set, VendTransOpen _vendTransOpen, AmountCur _cashDiscAmountPaymCur)
          #{
          #    AmountCur returnCashDiscAmountPaymCur;
          #    ;
          #
          #    if (_set)
          #    {
          #        manager.updateCashDiscAmountPaymCur(_vendTransOpen, vendTransCashDisc, _cashDiscAmountPaymCur);
          #
          #        // Updating the VendTransCashDisc record via the edit method requires a reread to
          #        // get the most current data on the form and refresh to refresh the values displayed.
          #        vendTransCashDisc_ds.reread();
          #        vendTransCashDisc_ds.refresh();
          #
          #        // Updating the VendTransCashDisc record updates the VendTransOpen.
          #        // Need to reread to get most current data on the form.
          #        vendTransOpen_ds.reread();
          #    }
          #
          #    returnCashDiscAmountPaymCur = manager.getCashDiscAmountPaymCur(_vendTransOpen);
          #
          #    return returnCashDiscAmountPaymCur;
          #}
          #
        ENDSOURCE
        SOURCE #displayCashDiscTaken
          #//BP Deviation Documented
          #public display CashDiscAmount displayCashDiscTaken(VendTransOpen _vendTransOpen)
          #{
          #    CashDiscAmount discountTaken;
          #    ;
          #
          #    discountTaken = manager.getCashDiscAmountTaken(_vendTransOpen);
          #
          #    return discountTaken;
          #}
        ENDSOURCE
        SOURCE #displayFullSettlementCashDiscPaymCur
          #//BP Deviation Documented
          #public display AmountCur displayFullSettlementCashDiscPaymCur(VendTransOpen _vendTransOpen)
          #{
          #
          #    return manager.getFullSettlementCashDiscPaymCur(_vendTransOpen);
          #}
          #
        ENDSOURCE
        SOURCE #displayFullSettlementCashDisc
          #//BP Deviation Documented
          #public display AmountCur displayFullSettlementCashDisc(VendTransOpen _vendTransOpen)
          #{
          #
          #    return manager.getFullSettlementCashDisc(_vendTransOpen);
          #}
          #
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendTransCashDisc
          Table               #VendTransCashDisc
          AllowCheck          #No
          JoinSource          #VendTransOpen
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD CashDiscdate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    ;
                #
                #    super();
                #
                #    // Update cash discount record before updating related
                #    vendTransCashDisc_ds.write();
                #
                #    manager.updateCashDiscDate(vendTransOpen, vendTransCashDisc);
                #
                #    vendTransOpen_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CashDiscAmount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #    ;
                #
                #    ret = super();
                #
                #    if ((vendTransCashDisc.CashDiscAmount > 0 && vendTransOpen.AmountCur < 0) ||
                #        (vendTransCashDisc.CashDiscAmount < 0 && vendTransOpen.AmountCur > 0))
                #    {
                #        // The signs of the discount & open trans amount are not the same
                #        ret = checkFailed("@SYS68141");
                #    }
                #
                #    // cash discount can't be more than the trans amount
                #    if(abs(vendTransCashDisc.CashDiscAmount) > abs(vendTransOpen.AmountCur))
                #    {
                #        ret = false;
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    ;
                #
                #    super();
                #
                #    // Update cash discount record before updating related records
                #    vendTransCashDisc_ds.write();
                #
                #    manager.updateCashDiscAmount(vendTransOpen, vendTransCashDisc);
                #
                #    // Updating the VendTransCashDisc record updates the VendTransOpen automatically.
                #    // Need to reread to display most current data on the form.
                #    vendTransOpen_ds.reread();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #delete
          #public void delete()
          #{
          #    super();
          #
          #    if (vendTransCashDisc.RecId != 0)
          #    {
          #        manager.clearCashDiscountCaches(vendTransOpen);
          #    }
          #}
        ENDSOURCE
        SOURCE #linkActive
          #public void linkActive()
          #{
          #    ;
          #
          #    super();
          #
          #    // Set current table buffer record for CustTransCashDisc
          #    vendTransCashDisc_ds.findRecord(manager.findApplicableCustVendTransCashDisc(vendTransOpen));
          #}
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #    ;
          #
          #    ret = super();
          #
          #    if (vendTransCashDisc.CashDiscDue == CashDiscDue::CashDisc)
          #    {
          #        vendTransCashDisc_ds.allowEdit(true);
          #    }
          #    else
          #    {
          #        vendTransCashDisc_ds.allowEdit(false);
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    boolean oldtabAutoChange = tabControl.tabAutoChange();
          #    ;
          #
          #    // The fields on this datasource can also be found on the Overview tab page,
          #    // to prevent the function jumping to the next tab page when a new record is created
          #    // the following code has to be executed.
          #
          #    tabControl.tabAutoChange(false);
          #    super(_append);
          #    tabControl.tabAutoChange(oldtabAutoChange);
          #
          #    if (vendTransCashDisc.RecId == 0)
          #    {
          #        // set the proper company for CP cross-company scenarios.
          #        vendTransCashDisc.company(vendTransOpen.company());
          #    }
          #}
        ENDSOURCE
        SOURCE #displaySettleAmountForCashDisc
          #// BP Deviation documented
          #public display AmountCur displaySettleAmountForCashDisc(VendTransCashDisc _vendTransCashDisc)
          #{
          #    AmountCur settleAmountForCashDisc;
          #    ;
          #
          #    settleAmountForCashDisc = manager.getSettleAmountForCashDisc(vendTransOpen, _vendTransCashDisc);
          #
          #    return settleAmountForCashDisc;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TaxWithholdTrans
          Table               #TaxWithholdTrans
          Index               #VoucherDateIdx
          AllowCheck          #No
          JoinSource          #VendTransOpen
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD TaxWithholdCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    SpecTrans specTrans;
                #
                #    super();
                #
                #    specTrans = manager.getSpecTrans(vendTransOpen);
                #
                #    taxWithhold.initFromTaxWithholdCode(taxWithholdTrans, specTrans.CrossRate);
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    LedgerJournalTrans ledgerJournalTrans;
                #
                #    // <GTH>
                #    if (TaxThaiGovCertificationFeatureChecker::isTaxWithholdEnabled())
                #    {
                #        TaxWithhold::lookupTaxWithholdCodeBasedOnGroups(
                #            _formControl,
                #            taxWithholdTrans.TaxWithholdGroup,
                #            taxWithholdTrans.TaxWithholdItemGroupHeading_TH);
                #
                #        return;
                #    }
                #    // </GTH>
                #
                #    switch (originator.TableId)
                #    {
                #        case tableNum(LedgerJournalTrans):
                #            ledgerJournalTrans = element.args().record();
                #            taxWithhold.lookupTaxWithholdCode(_formControl, ledgerJournalTrans.TaxWithholdGroup);
                #
                #        default:
                #            break;
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InvoiceAmount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    SpecTrans specTrans;
                #
                #    super();
                #
                #    specTrans = manager.getSpecTrans(vendTransOpen);
                #    taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTrans.CrossRate);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InvoiceTaxAmount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    SpecTrans specTrans;
                #
                #    super();
                #
                #    specTrans = manager.getSpecTrans(vendTransOpen);
                #    taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTrans.CrossRate);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InvoiceNotTaxableByTreaty
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    SpecTrans specTrans;
                #
                #    super();
                #
                #    specTrans = manager.getSpecTrans(vendTransOpen);
                #
                #    taxWithhold.calcNotTaxableByTreaty(taxWithholdTrans, specTrans.CrossRate);
                #    taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTrans.CrossRate);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InvoiceNotTaxableExpenses
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    SpecTrans   specTransLocal;
                #
                #    super();
                #
                #    specTransLocal = manager.getSpecTrans(vendTransOpen);
                #    taxWithhold.calcNotTaxableExpenses(taxWithholdTrans, specTransLocal.CrossRate);
                #    taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTransLocal.CrossRate);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InvoiceExemptedAmount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    SpecTrans   specTransLocal;
                #
                #    super();
                #
                #    specTransLocal = manager.getSpecTrans(vendTransOpen);
                #    taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTransLocal.CrossRate, false, true);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InvoiceTaxWithholdAmount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    SpecTrans specTrans;
                #
                #    super();
                #
                #    specTrans = manager.getSpecTrans(vendTransOpen);
                #
                #    taxWithhold.changeTaxWithholdAmount(taxWithholdTrans, specTrans.CrossRate);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxWithholdAmount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #// <GTH>
                #public void modified()
                #{
                #    SpecTrans specTrans;
                #
                #    super();
                #
                #    // The InvoiceTaxWithholdAmount has been updated based on new TaxWithholdAmount after super().
                #    specTrans = manager.getSpecTrans(vendTransOpen);
                #    taxWithhold.changeTaxWithholdAmount(taxWithholdTrans, specTrans.CrossRate);
                #}
                #// </GTH>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    super();
          #    // <GTH>
          #    if (TaxThaiGovCertificationFeatureChecker::isCountryRegionTH())
          #    {
          #        this.queryBuildDataSource().clearDynalinks();
          #    }
          #    // </GTH>
          #}
        ENDSOURCE
        SOURCE #write
          #// <GTH>
          #public void write()
          #{
          #    super();
          #
          #    if (isTaxWithholdTransExtensionTHEnabled)
          #    {
          #        taxWithholdTransExtensionTH.SysExtensionSerializerExtensionMap::insertAfterBaseTable(taxWithholdTrans);
          #    }
          #}
          #// </GTH>
        ENDSOURCE
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    QueryBuildRange qbrSpecTransId;
          #    QueryBuildRange qbrPosted;
          #
          #    this.query().dataSourceTable(tableNum(TaxWithholdTrans)).clearDynalinks();
          #    this.query().allowCrossCompany(true);
          #    this.query().clearCompanyRange();
          #    this.query().addCompanyRange(vendTransOpen.company());
          #
          #    qbrSpecTransId = this.query().dataSourceTable(tableNum(TaxWithholdTrans)).findRange(fieldNum(TaxWithholdTrans, SpecTransId));
          #
          #    if (!qbrSpecTransId)
          #    {
          #        qbrSpecTransId = this.query().dataSourceTable(tableNum(TaxWithholdTrans)).addRange(fieldNum(TaxWithholdTrans, SpecTransId));
          #    }
          #
          #    qbrSpecTransId.value(queryValue(manager.getSpecTrans(vendTransOpen).RecId));
          #
          #    qbrPosted = this.query().dataSourceTable(tableNum(TaxWithholdTrans)).findRange(fieldNum(TaxWithholdTrans, Posted));
          #
          #    if (!qbrPosted)
          #    {
          #        qbrPosted = this.query().dataSourceTable(tableNum(TaxWithholdTrans)).addRange(fieldNum(TaxWithholdTrans, Posted));
          #    }
          #
          #    qbrPosted.value(queryValue(NoYes::No));
          #
          #    super();
          #}
          #
          #
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #    VendTable vendor;
          #
          #    super();
          #
          #    vendor = VendTable::findByCompany(vendTrans.company(), vendTrans.AccountNum);
          #
          #    taxWithhold.initTaxWithholdTrans(
          #        taxWithholdTrans,
          #        vendTrans,
          #        manager.getSpecTrans(vendTransOpen),
          #        manager.getSettleAmount(vendTransOpen),
          #        vendor.TaxWithholdGroup);
          #}
        ENDSOURCE
        SOURCE #taxWithholdRoundOff
          #//BP Deviation Documented
          #public display TaxWithholdRoundOff taxWithholdRoundOff(TaxWithholdTrans _taxWithholdTrans)
          #{
          #    TmpTaxWithhold tmpTaxWithhold;
          #    ;
          #
          #    tmpTaxWithhold = taxWithhold.findTmpTaxWithhold(_taxWithholdTrans);
          #    return tmpTaxWithhold.TaxWithholdRoundOff;
          #}
        ENDSOURCE
        SOURCE #taxWithholdExclude
          #//BP Deviation Documented
          #public display TaxWithholdExclude taxWithholdExclude(TaxWithholdTrans _taxWithholdTrans)
          #{
          #    TmpTaxWithhold tmpTaxWithhold;
          #    ;
          #
          #    tmpTaxWithhold = taxWithhold.findTmpTaxWithhold(_taxWithholdTrans);
          #    return tmpTaxWithhold.TaxWithholdExclude;
          #}
        ENDSOURCE
        SOURCE #withholdOriginGross
          #//BP Deviation Documented
          #public display NoYes withholdOriginGross(TaxWithholdTrans _taxWithholdTrans)
          #{
          #    TmpTaxWithhold tmpTaxWithhold;
          #    ;
          #
          #    tmpTaxWithhold = taxWithhold.findTmpTaxWithhold(_taxWithholdTrans);
          #    return tmpTaxWithhold.WithholdOriginGross;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendTable
          Table               #VendTable
          AllowCheck          #No
          JoinSource          #VendTransOpen
          LinkType            #InnerJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #BankLCVendTrans
          Table               #BankLCVendTrans
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #VendTrans
          LinkType            #OuterJoin
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendInvoiceHoldHistory
          Table               #VendInvoiceHoldHistory
          AllowCheck          #No
          JoinSource          #VendInvoiceJour
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD InvoicePaymHold_PSN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #/// <summary>
                #/// Valids the modification of the field.
                #/// </summary>
                #/// <returns>
                #/// true if the modification is correct; otherwise, false.
                #/// </returns>
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                #    {
                #        vendInvoiceHoldHistory.VendInvoiceJour_PSN = vendInvoiceJour.RecId;
                #        vendInvoiceHoldHistory.RefTableId_PSN = tableNum(VendInvoiceJour);
                #
                #        if (ret)
                #        {
                #            if (vendInvoiceHoldHistory.InvoicePaymHold_PSN)
                #            {
                #                //Asked the confirmation message.
                #                ret = vendInvoiceHoldHistory.confirmInvoicePlaceOnHold(vendInvoiceJour);
                #            }
                #            else if (vendInvoiceHoldHistory.RecId && vendInvoiceHoldHistory.HoldReleasedBy_PSN)
                #            {
                #                // since the hold was released so update the current record.
                #                vendInvoiceHoldHistory.updateReleaseDate(vendTrans);
                #                vendInvoiceHoldHistory.update();
                #                // since the due date is updated to refresh the data
                #                vendTransOpen_ds.reread();
                #                vendTransOpen_ds.refresh();
                #                vendTrans_ds.reread();
                #                vendTrans_ds.refresh();
                #            }
                #        }
                #
                #        paymentDelay_PSN_M_editReasonCode.allowEdit(ret && vendInvoiceHoldHistory.InvoicePaymHold_PSN);
                #        paymentDelay_PSN_SecurityRole_PSN.allowEdit(ret && vendInvoiceHoldHistory.InvoicePaymHold_PSN);
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD SecurityRole_PSN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookupReference
                #/// <summary>
                #/// Performs the filter look up of security table.
                #/// </summary>
                #/// <param name="_formReferenceControl">
                #/// The control on which look up need to perform.
                #/// </param>
                #/// <returns>
                #/// A table buffer containing the filter data.
                #/// </returns>
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                #    {
                #        ret = VendInvoiceHoldHistory::performFormLookup(_formReferenceControl);
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #/// <summary>
          #/// Writes the data in the table.
          #/// </summary>
          #public void write()
          #{
          #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
          #    {
          #        if (vendInvoiceHoldHistory.HoldBy_PSN && vendInvoiceHoldHistory.SecurityRole_PSN && vendInvoiceHoldHistory.HoldReleasedBy_PSN)
          #        {
          #            super();
          #
          #            vendInvoiceHoldHistory.updateReleaseDate(vendTransOpen);
          #            vendTransOpen_DueDate1.dateValue(vendInvoiceHoldHistory.CalculatedDueDate_PSN);
          #            vendInvoiceHoldHistory.clearDataFields();
          #        }
          #        else if (vendInvoiceHoldHistory.HoldBy_PSN && vendInvoiceHoldHistory.SecurityRole_PSN && !VendInvoiceHoldHistory::isPlaceInHold(vendInvoiceHoldHistory.VendInvoiceJour_PSN, vendInvoiceHoldHistory.RefTableId_PSN))
          #        {
          #            vendInvoiceHoldHistory.insert();
          #        }
          #
          #        element.setInfoBar(vendTrans.RecId, tableNum(VendTrans));
          #    }
          #}
        ENDSOURCE
        SOURCE #executeQuery
          #/// <summary>
          #/// Adds the filter in the query before executing it.
          #/// </summary>
          #public void executeQuery()
          #{
          #    QueryBuildDataSource vendInvoiceHoldHistoryDS;
          #
          #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
          #    {
          #        vendInvoiceHoldHistoryDS = this.query().dataSourceTable(tableNum(VendInvoiceHoldHistory));
          #        vendInvoiceHoldHistoryDS.addRange(fieldNum(VendInvoiceHoldHistory, VendInvoiceJour_PSN)).value(queryValue(vendInvoiceJour.RecId));
          #        vendInvoiceHoldHistoryDS.addRange(fieldNum(VendInvoiceHoldHistory, RefTableId_PSN)).value(queryValue(tableNum(VendInvoiceJour)));
          #        vendInvoiceHoldHistoryDS.addRange(fieldNum(VendInvoiceHoldHistory, InvoicePaymHold_PSN)).value(SysQuery::valueNot(NoYes::No));
          #        vendInvoiceHoldHistoryDS.addRange(fieldNum(VendInvoiceHoldHistory, HoldReleasedBy_PSN)).value(queryValue(''));
          #
          #        super();
          #
          #        element.setInfoBar(vendTrans.RecId, tableNum(VendTrans));
          #        paymentDelay_PSN_M_editReasonCode.allowEdit(vendInvoiceHoldHistory.InvoicePaymHold_PSN);
          #        paymentDelay_PSN_SecurityRole_PSN.allowEdit(vendInvoiceHoldHistory.InvoicePaymHold_PSN);
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendInvoiceJour
          Table               #VendInvoiceJour
          JoinSource          #VendTrans
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendTrans_IN
          Table               #VendTrans_IN
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #VendTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #public void write()
          #{
          #    // do not allow to insert new record when VendTrans is edited.
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
          #    {
          #        vendTrans_IN_ds.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendTransEPRemit_BR
          Table               #VendTransEPRemit_BR
          JoinSource          #VendTransOpen
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    // <GBR>
          #    if (BrazilParameters::isEnabled())
          #    {
          #        vendTransEPRemit_BR_ds.linkType(FormLinkType::Active);
          #    }
          #    // </GBR>
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendTransPayment_BR
          Table               #VendTransPayment_BR
          JoinSource          #VendTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    // <GBR>
          #    if (BrazilParameters::isEnabled())
          #    {
          #        vendTransPayment_BR_ds.linkType(FormLinkType::Active);
          #    }
          #    // </GBR>
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TaxWithholdTransExtensionTH
          Table               #TaxWithholdTransExtensionTH
          JoinSource          #TaxWithholdTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD InvoiceCurUpdatedWithholdBaseAmount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #// <GTH>
                #public void modified()
                #{
                #    SpecTrans specTrans;
                #
                #    specTrans = manager.getSpecTrans(vendTransOpen);
                #    taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTrans.CrossRate);
                #
                #    super();
                #}
                #// </GTH>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #// <GTH>
          #public void write()
          #{
          #    if (taxWithholdTrans.RecId)
          #    {
          #        taxWithholdTransExtensionTH.TaxWithholdTrans = taxWithholdTrans.RecId;
          #        super();
          #    }
          #}
          #// </GTH>
        ENDSOURCE
        SOURCE #init
          #// <GTH>
          #public void init()
          #{
          #    isTaxWithholdTransExtensionTHEnabled = TaxWithholdTransExtensionTH::isExtensionEnabled();
          #
          #    if (isTaxWithholdTransExtensionTHEnabled)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #
          #    super();
          #}
          #// </GTH>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendTrans_W
          Table               #VendTrans_W
          JoinSource          #VendTrans
          LinkType            #Passive
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU, #isoIN, #isoJP]))
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #
          #    super();
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU, #isoIN, #isoJP]) && vendTrans_W.VendTrans != 0)
          #    {
          #        // no-op because a record with an empty FK is not valid
          #        super();
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
    VendTrans VendTransOpen
    VendTransCashDisc VendTransOpen
    TaxWithholdTrans VendTransOpen
    VendTable VendTransOpen
    BankLCVendTrans VendTrans
    VendInvoiceHoldHistory VendInvoiceJour
    VendInvoiceJour VendTrans
    VendTrans_IN VendTrans
    VendTransEPRemit_BR VendTransOpen
    VendTransPayment_BR VendTrans
    TaxWithholdTransExtensionTH TaxWithholdTrans
    VendTrans_W VendTrans
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS12115
      TitleDatasource     #VendTrans
      HideIfEmpty         #No
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #343597383
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane1
          ElementPosition     #1073741822
          HierarchyParent     #RemittanceTab
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab1
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab
          DataSource          #VendTransOpen
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup1
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid_CashDisc
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #CashDiscTab
          DataSource          #VendTransCashDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #GridTaxWithhold
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741822
          HierarchyParent     #TaxWithholdTab
          DataSource          #TaxWithholdTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #OverviewGrid
          Width               #Column width
          Height              #Column height
          ElementPosition     #306783378
          HierarchyParent     #OverviewTab
          ShowRowLabels       #No
          DataSource          #VendTransOpen
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Agreement_RU
          ElementPosition     #1342177277
          HierarchyParent     #LedgerGroup
          DataSource          #VendTrans
          DataGroup           #Agreement_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #AmountGroup
          ElementPosition     #1717986916
          HierarchyParent     #PaymentTab
          Caption             #@SYS6928
          DataSource          #VendTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BalancesCur
          ElementPosition     #1288490187
          HierarchyParent     #TopGroup
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BalancesMST
          AllowEdit           #No
          Enabled             #No
          ElementPosition     #858993458
          HierarchyParent     #TopGroup
          FrameType           #None
          Caption             #@SYS12227
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Bank
          ElementPosition     #1610612734
          HierarchyParent     #PaymentTab
          DataSource          #VendTransOpen
          DataGroup           #Bank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Boleto
          AutoDeclaration     #Yes
          ElementPosition     #1825361098
          HierarchyParent     #PaymentTab
          Caption             #@GLS668
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BottomGroup_RU
          Top                 #Bottom edge
          CountryRegionCodes  #RU
          ElementPosition     #920350134
          HierarchyParent     #OverviewTab
          FrameType           #None
          RightMargin         #15
          AlignChild          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CurrencyDeal_RU
          CountryRegionCodes  #RU
          ElementPosition     #1789569705
          HierarchyParent     #GeneralTab
          Caption             #@SYS53047
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DateUsedToCalcDiscGroup
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #SelectionDates
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ElectronicPayment
          ElementPosition     #1670265057
          HierarchyParent     #PaymentGroup
          DataSource          #VendTransEPRemit_BR
          DataGroup           #ElectronicPayment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ExchangeRates
          ElementPosition     #1610612733
          HierarchyParent     #LedgerGroup
          DataSource          #VendTrans
          DataGroup           #ExchangeRates
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Filter
          CountryRegionCodes  #RU
          Width               #Column width
          ElementPosition     #1546188224
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Group
          ElementPosition     #954437176
          HierarchyParent     #PaymTerm
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupBankDocumentType
          ConfigurationKey    #BankDocument
          ElementPosition     #1717986916
          HierarchyParent     #SelectionDates
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupCashDisc
          AutoDeclaration     #Yes
          Top                 #Bottom edge
          ElementPosition     #1227133512
          HierarchyParent     #OverviewTab
          FrameType           #None
          Columns             #Auto
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
          AlignChild          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupCashDiscAccount
          AutoDeclaration     #Yes
          Top                 #Bottom edge
          ElementPosition     #1840700268
          HierarchyParent     #OverviewTab
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupTaxWithhold
          ElementPosition     #1610612733
          HierarchyParent     #TaxWithholdTab
          FrameType           #None
          OptionValue         #2
          DataSource          #TaxWithholdTrans
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupTaxWithholdAmounts
          ElementPosition     #1610612733
          HierarchyParent     #GroupTaxWithhold
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupTaxWithholdNotTaxable
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #GroupTaxWithhold
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HoldsGroup
          ElementPosition     #1431655764
          HierarchyParent     #GeneralTab
          Caption             #@SYS128407
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InterestAndFinePayment_BR
          CountryRegionCodes  #BR
          ElementPosition     #1932735281
          HierarchyParent     #PaymentTab
          DataSource          #VendTransOpen
          DataGroup           #InterestAndFine_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Invoice
          ElementPosition     #1073741823
          HierarchyParent     #GeneralTab
          DataSource          #VendTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Ledger
          ElementPosition     #1073741822
          HierarchyParent     #LedgerGroup
          DataSource          #VendTrans
          DataGroup           #Ledger
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LedgerGroup
          ElementPosition     #715827882
          HierarchyParent     #GeneralTab
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #MessagePaneGroup
          Width               #Column width
          Height              #30
          ElementPosition     #687194766
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Payment
          ElementPosition     #1610612733
          HierarchyParent     #PaymentGroup
          FrameType           #None
          Caption             #@SYS828
          DataSource          #VendTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymentDelay_PSN
          ElementPosition     #1431655764
          HierarchyParent     #PaymTerm
          FrameType           #None
          DataSource          #VendInvoiceHoldHistory
          DataGroup           #InvoicePaymHold
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymentGroup
          ElementPosition     #858993458
          HierarchyParent     #PaymentTab
          Caption             #@SYS828
          DataSource          #VendTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymTerm
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #1207959549
          HierarchyParent     #PaymentGroup
          FrameType           #None
          DataSource          #VendInvoiceHoldHistory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Promissorynote
          ElementPosition     #1288490187
          HierarchyParent     #PaymentTab
          DataSource          #VendTrans
          DataGroup           #PromissoryNote
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PromissoryNoteGroup
          AutoDeclaration     #Yes
          ConfigurationKey    #VendPromissoryNote
          ElementPosition     #1163220305
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendTrans
          DataGroup           #PromissoryNote
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Remittance
          ElementPosition     #1610612733
          HierarchyParent     #RemittanceTab
          Caption             #@sys152838
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RemittanceBottom
          ElementPosition     #1610612733
          HierarchyParent     #Remittance
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RemittanceTop
          Height              #Column height
          ElementPosition     #1073741822
          HierarchyParent     #Remittance
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RightGroup
          ElementPosition     #1717986916
          HierarchyParent     #TopGroup
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SelectionDates
          ElementPosition     #1374389532
          FrameType           #None
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ServiceTax_IN
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #894784852
          HierarchyParent     #GeneralTab
          Caption             #@GLS5006
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Settlement
          ElementPosition     #1073741822
          HierarchyParent     #Settlementtab
          DataSource          #VendTrans
          DataGroup           #Settlement
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SettlementStatus
          ElementPosition     #1610612733
          HierarchyParent     #Settlementtab
          DataSource          #VendTrans
          DataGroup           #SettlementStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SettlePostingTypeDate
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #SelectionDates
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TopGroup
          Width               #Column width
          ElementPosition     #1030792149
          FrameType           #None
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VATTaxAgent_RU
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #BottomGroup_RU
          FrameType           #None
          DataSource          #VendTransOpen
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MANAGEDHOST
        PROPERTIES
          Name                #MessagePaneHost
          Visible             #No
          Width               #Column width
          Skip                #Yes
          ElementPosition     #1431655764
          HierarchyParent     #MessagePaneGroup
          TypeName            #Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessagePane
          AssemblyName        #Microsoft.Dynamics.Framework.UI.WinForms.Controls, Version=1.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #QueryButton
          AutoDeclaration     #Yes
          HelpText            #@SYS84035
          ElementPosition     #1431655764
          HierarchyParent     #ButtonGroup
          Text                #@SYS1657
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #VendConsInvoiceSettle_JP
          AutoDeclaration     #Yes
          CountryRegionCodes  #JP
          HelpText            #@GLS60564
          ConfigurationKey    #LedgerBasic
          SecurityKey         #VendMisc
          ElementPosition     #2058005160
          HierarchyParent     #ButtonGroup
          Text                #@GLS60235
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Invoice_Approver
          ElementPosition     #780903144
          HierarchyParent     #Invoice
          DataSource          #VendTrans
          ReferenceField      #Approver
          ReplacementFieldGroup #PersonnelNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PaymentDelay_PSN_SecurityRole_PSN
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #PaymentDelay_PSN
          DataSource          #VendInvoiceHoldHistory
          ReferenceField      #SecurityRole_PSN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxWithholdTrans_TaxWithholdItemGroupHeading
          ElementPosition     #1163220300
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          ReferenceField      #TaxWithholdItemGroupHeading_TH
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #VendTrans_RemittanceLocation
          ElementPosition     #1431655764
          HierarchyParent     #RemittanceTop
          DataSource          #VendTrans
          ReferenceField      #RemittanceLocation
          ReplacementFieldGroup #Description
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #VendTransReferenceVoucher_IN
          AutoDeclaration     #Yes
          Visible             #No
          CountryRegionCodes  #IN
          HelpText            #@GLS222695
          ElementPosition     #671088637
          HierarchyParent     #OverviewGrid
          DataSource          #VendTrans_IN
          ReferenceField      #VendTransRefRecId
          ReplacementFieldGroup #VendTransReferenceVoucher_IN
          Label               #@GLS222673
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #TabControl
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1717986916
          Tabs                #7
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Balances_W
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          ElementPosition     #2097151998
          HierarchyParent     #TabControl
          Caption             #@GLS107088
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #CashDiscTab
          AutoDeclaration     #Yes
          ElementPosition     #2113929214
          HierarchyParent     #TabControl
          Caption             #@SYS4376
          DataSource          #VendTransCashDisc
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    boolean allowEdit = true;
            #
            #    if (vendTransOpen.RecId == 0)
            #    {
            #        allowEdit = false;
            #    }
            #
            #    vendTransCashDisc_ds.allowCreate(allowEdit);
            #    vendTransCashDisc_ds.allowDelete(allowEdit);
            #    vendTransCashDisc_ds.allowEdit(allowEdit);
            #
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #GeneralTab
          Width               #Column width
          ElementPosition     #1364546899
          HierarchyParent     #TabControl
          Caption             #@SYS2952
          DataSource          #VendTrans
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #OverviewTab
          ElementPosition     #984263336
          HierarchyParent     #TabControl
          Caption             #@SYS9039
          DataSource          #VendTrans
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    ;
            #    super();
            #
            #    // Set current table buffer record for CustTransCashDisc
            #    vendTransCashDisc_ds.findRecord(manager.findApplicableCustVendTransCashDisc(vendTransOpen));
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #PaymentTab
          ElementPosition     #1744830462
          HierarchyParent     #TabControl
          Caption             #@SYS828
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #RemittanceTab
          AutoDeclaration     #Yes
          ElementPosition     #2080374782
          HierarchyParent     #TabControl
          Caption             #@sys152838
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Settlementtab
          ElementPosition     #2013265918
          HierarchyParent     #TabControl
          Caption             #@SYS10163
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabFinancialDimensions
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          ElementPosition     #2130706430
          HierarchyParent     #TabControl
          Caption             #@SYS101181
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    dimensionDefaultingController.pageActivated();
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TaxWithholdTab
          AutoDeclaration     #Yes
          Visible             #No
          ConfigurationKey    #LedgerBasicWithholdingTax
          ElementPosition     #2139095038
          HierarchyParent     #TabControl
          Caption             #@SYS7372
          DataSource          #TaxWithholdTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #CustVendTransReorgButton
          AutoDeclaration     #Yes
          Visible             #No
          NeededPermission    #Manual
          HelpText            #@SYS84036
          ConfigurationKey    #PaymSched
          ElementPosition     #1073741823
          HierarchyParent     #ButtonGroup
          Text                #@SYS58460
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    container       localVendTransOpenContainer;
            #    List            localVendTransOpenList;
            #    Enumerator      localVendTransOpenEnum;
            #    VendTransOpen   localVendTransOpen;
            #    boolean         proceed = true;
            #    int             dataSourcePosition = vendTransOpen_ds.getPosition();
            #
            #    localVendTransOpenContainer = SpecTrans::findMarkedVendPaymentGroup(vendTransOpen.AccountNum, vendTrans.company(), originator);
            #
            #    localVendTransOpenList = con2List(localVendTransOpenContainer);
            #
            #    localVendTransOpenEnum = localVendTransOpenList.getEnumerator();
            #    localVendTransOpenEnum.moveNext();
            #
            #    localVendTransOpen = localVendTransOpenEnum.current();
            #
            #    if(localVendTransOpen)
            #    {
            #        switch(Box::yesNo("@SYS134712", DialogButton::Yes))
            #        {
            #            case DialogButton::Yes:
            #                element.lockWindowUpdate(true);
            #
            #                vendTransOpen_ds.findRecord(localVendTransOpen);
            #
            #                vendTrans.VendPaymentGroup = '';
            #
            #                vendTransOpen_ds.setPosition(dataSourcePosition);
            #                element.lockWindowUpdate(false);
            #
            #                vendTrans_ds.research();
            #                vendTrans_ds.refresh();
            #            break;
            #
            #            case DialogButton::No:
            #                proceed = false;
            #            break;
            #        }
            #    }
            #
            #    if(proceed)
            #    {
            #        if (manager.reorganizeMarkedTrans() == true)
            #        {
            #            vendTransOpen_ds.executeQuery();
            #
            #            element.updateDesignDynamic();
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #FilterByPurchOrder_CZ
          AutoDeclaration     #Yes
          CountryRegionCodes  #CZ
          HelpText            #@GLS111739
          ConfigurationKey    #CzCustVendAdvanceInvoices
          ElementPosition     #1932735281
          Text                #@GLS111738
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    element.filterByPurchOrder_CZ();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #markAll
          HelpText            #@GLS60566
          ElementPosition     #1073741822
          HierarchyParent     #VendConsInvoiceSettle_JP
          Text                #@GLS60558
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #// <GJP>
            #void clicked()
            #{
            #    super();
            #
            #    element.markAll_JP();
            #}
            #// </GJP>
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #MarkPayment
          AutoDeclaration     #Yes
          HelpText            #@SYS65362
          ElementPosition     #1789569705
          HierarchyParent     #ButtonGroup
          Text                #@SYS65363
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    super();
            #
            #    if (manager.getMarkedPrimaryPayment(vendTransOpen) == NoYes::Yes)
            #    {
            #        // Remove primary designation only - does not unmark transaction
            #        manager.updateMarkedPrimaryPayment(vendTransOpen, NoYes::No);
            #
            #        // Update dynamic controls & refresh form as auto-redraw is not triggered
            #        element.updateDesignDynamic();
            #        element.redraw();
            #    }
            #    else
            #    {
            #        if (SpecTrans::existMarkedPayment(originator.company(), originator.TableId, originator.RecId))
            #        {
            #            throw error(strFmt("@SYS67734"));
            #        }
            #        if (vendTransOpen.RecId)
            #        {
            #            if (manager.getTransMarked(vendTransOpen) == NoYes::No)
            #            {
            #                // Mark transaction for settlement
            #                showError = NoYes::No;
            #                manager.updateTransMarked(vendTransOpen, NoYes::Yes);
            #                showError = NoYes::Yes;
            #            }
            #
            #            // Set as primary payment
            #            manager.updateMarkedPrimaryPayment(vendTransOpen, NoYes::Yes);
            #
            #            // Update dynamic controls & refresh form as auto-redraw is not triggered
            #            element.updateDesignDynamic();
            #            element.redraw();
            #        }
            #    }
            #
            #    vendTransOpen_ds.refresh();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #UpdateNow
          AutoDeclaration     #Yes
          HelpText            #@SYS84039
          ElementPosition     #715827882
          HierarchyParent     #ButtonGroup
          Text                #@SYS4167
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    boolean canSettle;
            #    ;
            #    // determine if user wants to close when marked total is not within over/under amount
            #    canSettle = manager.validateMarkedTotalWithinOverUnder();
            #
            #    if (canSettle)
            #    {
            #        canSettle = manager.validateMarkedWithCrossRate();
            #    }
            #
            #    if (canSettle == true)
            #    {
            #        //update all SpecTrans records with date used to calculate discount
            #        manager.updateSpecTransWithSelectedDate();
            #
            #        manager.settleMarkedTrans();
            #
            #        manager.clearAllCashDiscountCaches();
            #        manager.refreshCustVendBalances();
            #
            #        vendTransOpen_ds.research();
            #        vendTransOpen_ds.refresh();
            #
            #        element.updateDesignDynamic();
            #        element.displayVendBalanceMst();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Boleto_TypedLine_BR
          ElementPosition     #1073741822
          HierarchyParent     #Boleto
          DataSource          #VendTransPayment_BR
          DataField           #TypedLine_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ChkBoxRunPaymProposal
          AutoDeclaration     #Yes
          Visible             #No
          NeededPermission    #Manual
          ElementPosition     #1610612733
          HierarchyParent     #RightGroup
          DataMethod          #editRunPaymProposal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #EUROTriangulation
          ElementPosition     #1908874352
          HierarchyParent     #AmountGroup
          DataSource          #VendTrans
          DataField           #EUROTriangulation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #FullSettlement
          AutoDeclaration     #Yes
          Visible             #No
          CountryRegionCodes  #DE,AT,CH
          HelpText            #@SYS75400
          ElementPosition     #447392425
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          Label               #@SYS75399
          LabelCharacterSet   #471
          DataSource          #VendTransOpen
          DataMethod          #editFullSettlement
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Invoice_Approved
          ElementPosition     #585677358
          HierarchyParent     #Invoice
          DataSource          #VendTrans
          DataField           #Approved
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #MarkTrans
          AutoDeclaration     #Yes
          HelpText            #@SYS24864
          ElementPosition     #357913940
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          Label               #@SYS19120
          DataSource          #VendTransOpen
          DataMethod          #editMarkTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Payment_Prepayment
          ElementPosition     #1193046470
          HierarchyParent     #Payment
          DataSource          #VendTrans
          DataField           #Prepayment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendInvoiceHoldHistory_InvoicePaymHold_PSN
          ElementPosition     #954437176
          HierarchyParent     #Group
          DataSource          #VendInvoiceHoldHistory
          DataField           #InvoicePaymHold_PSN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendTrans_IN_BlockTaxReversal
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1610612733
          HierarchyParent     #ServiceTax_IN
          DataSource          #VendTrans_W
          DataField           #BlockTaxReversal_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendTransOpen_TaxWithholdStatus_IN
          AutoDeclaration     #Yes
          ElementPosition     #2146697214
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendTransOpen
          DataField           #TaxWithholdStatus_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #withholdOriginGross
          AllowEdit           #No
          HelpText            #@SYS81798
          ElementPosition     #1342177270
          HierarchyParent     #GridTaxWithhold
          BackgroundColor     #Window background
          Label               #@SYS81688
          DataSource          #TaxWithholdTrans
          DataMethod          #withholdOriginGross
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #BankAdvancedTransType
          AllowEdit           #No
          ElementPosition     #1610612730
          HierarchyParent     #CurrencyDeal_RU
          DataSource          #VendTransOpen
          DataMethod          #displayBankAdvancedTransType_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #BankDocumentTypeFilter
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #GroupBankDocumentType
          DataMethod          #editBankDocumentTypeFilter
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    if (ret)
            #    {
            #        element.bankDocumentTypeFilterModified();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #DateTypeUsedToCalcDisc
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #DateUsedToCalcDiscGroup
          DataMethod          #editDateTypeUsedToCalcDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ElectronicPayment_RetOccCode
          AllowEdit           #No
          ElementPosition     #1717986912
          HierarchyParent     #ElectronicPayment
          DataSource          #VendTransEPRemit_BR
          DataField           #RetOccCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #SettlePostingType
          HelpText            #@SYS114137
          ElementPosition     #1073741822
          HierarchyParent     #SettlePostingTypeDate
          Label               #@SYS114020
          DataMethod          #editSettlePostingType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendTable_Blocked
          AllowEdit           #No
          HelpText            #@SYS128408
          ElementPosition     #858993458
          HierarchyParent     #HoldsGroup
          DataSource          #VendTable
          DataField           #Blocked
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendTable_Blocked1
          AllowEdit           #No
          ElementPosition     #1700091215
          HierarchyParent     #OverviewGrid
          DataSource          #VendTable
          DataField           #Blocked
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendTrans_IN_ServiceTaxPOTStatus
          ElementPosition     #1073741822
          HierarchyParent     #ServiceTax_IN
          DataSource          #VendTrans_W
          DataField           #ServiceTaxPOTStatus_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendTransOpen_UseCashDisc
          AutoDeclaration     #Yes
          ElementPosition     #991146294
          HierarchyParent     #GroupCashDisc
          DataSource          #VendTransOpen
          DataField           #UseCashDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendTransOpen_UseCashDisc1
          ElementPosition     #536870910
          HierarchyParent     #OverviewGrid
          DataSource          #VendTransOpen
          DataField           #UseCashDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DateUsedToCalcDisc
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #DateUsedToCalcDiscGroup
          ShowLabel           #No
          DataMethod          #editDateUsedToCalcDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #ExchAdjustment_LastExchAdj
          ElementPosition     #715827882
          HierarchyParent     #ExchangeRates
          DataSource          #VendTrans
          DataField           #LastExchAdj
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Invoice_ApprovedDate
          ElementPosition     #976128930
          HierarchyParent     #Invoice
          DataSource          #VendTrans
          DataField           #ApprovedDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Invoice_DocumentDate
          ElementPosition     #1757032074
          HierarchyParent     #Invoice
          DataSource          #VendTrans
          DataField           #DocumentDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #SettlePostingDate
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #SettlePostingTypeDate
          ShowLabel           #No
          DataMethod          #editSettlePostingDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_CompetenceDate
          ElementPosition     #536870908
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #CompetenceDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendTrans_TransDate
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #894784850
          HierarchyParent     #OverviewGrid
          DataSource          #VendTrans
          DataField           #TransDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendTransCashDisc_CashDiscdate
          ElementPosition     #858993458
          HierarchyParent     #Grid_CashDisc
          DataSource          #VendTransCashDisc
          DataField           #CashDiscdate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendTransCashDisc_CashDiscdate1
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #495573147
          HierarchyParent     #GroupCashDisc
          DataSource          #VendTransCashDisc
          DataField           #CashDiscdate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendTransOpen_DueDate
          ElementPosition     #984263335
          HierarchyParent     #OverviewGrid
          DataSource          #VendTransOpen
          DataField           #DueDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendTransOpen_DueDate1
          AutoDeclaration     #Yes
          ConfigurationKey    #PublicSector
          ElementPosition     #805306366
          HierarchyParent     #PaymentGroup
          DataSource          #VendTransOpen
          DataField           #DueDate
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    // <GBR>
            #    if (BrazilParameters::isEnabled())
            #    {
            #        vendTransEPRemit_BR.RemitOccCode = EPRemitOccCode_BR::Code_03;
            #    }
            #    // </GBR>
            #
            #    return ret;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #BankLCVendTrans_LineNum
          ElementPosition     #2058005155
          HierarchyParent     #OverviewGrid
          DataSource          #BankLCVendTrans
          DataField           #LineNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL LISTVIEW
        PROPERTIES
          Name                #BalanceList
          Width               #370
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #Balances_W
          ViewType            #Report
          GridLines           #Yes
          RowSelect           #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AddAddress
          ElementPosition     #1073741822
          HierarchyParent     #ButtonGroup1
          Text                #@SYS111834
          ButtonDisplay       #Text & Image left
          DataSource          #VendTrans
          MenuItemName        #CustDirPartyPostalAddressNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerTransVoucher1
          ElementPosition     #858993458
          HierarchyParent     #QueryButton
          DataSource          #VendTrans
          MenuItemName        #LedgerTransVoucher1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PSAPwpInvoiceInquiry
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1968526675
          HierarchyParent     #ButtonGroup
          DataSource          #VendTrans
          MenuItemName        #PSAPwpInvoiceInquiry
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Remittance_ManageAddress
          ElementPosition     #1610612733
          HierarchyParent     #ButtonGroup1
          Text                #@SYS312927
          ButtonDisplay       #Text & Image left
          DataSource          #VendTrans
          MenuItemName        #VendDirPartyPostalAddressAdvanced
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxWithholdSettleTrans_IN
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #2102744402
          HierarchyParent     #ButtonGroup
          DataSource          #VendTrans
          MenuItemName        #TaxWithholdSettleTrans_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #// <GIN>
            #void clicked()
            #{
            #    super();
            #    checkStatus = true;
            #}
            #// </GIN>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendConsInvoiceSettleQuery
          ElementPosition     #1610612733
          HierarchyParent     #VendConsInvoiceSettle_JP
          DataSource          #VendTransOpen
          MenuItemType        #Action
          MenuItemName        #VendConsInvoiceSettleQuery_JP
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendInvoiceHoldHistory_MenuItem
          ElementPosition     #1431655764
          HierarchyParent     #Group
          Style               #Link
          DataSource          #VendInvoiceJour
          MenuItemName        #VendInvoiceHoldHistory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendSettlement
          ElementPosition     #1288490187
          HierarchyParent     #QueryButton
          DataSource          #VendTrans
          MenuItemName        #VendSettlement
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendSpecTransOverview
          ElementPosition     #1717986916
          HierarchyParent     #QueryButton
          DataSource          #VendTransOpen
          MenuItemName        #VendSpecTransOverview
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #AmountCur
          ElementPosition     #1193046470
          HierarchyParent     #AmountGroup
          DataSource          #VendTransOpen
          DataField           #AmountCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #AmountMST
          ElementPosition     #1431655764
          HierarchyParent     #AmountGroup
          DataSource          #VendTransOpen
          DataField           #AmountMST
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #CashDiscTaken
          AutoDeclaration     #Yes
          AllowEdit           #No
          HelpText            #@sys128700
          ElementPosition     #1156337343
          HierarchyParent     #GroupCashDisc
          Label               #@sys96101
          DataSource          #VendTransOpen
          DataMethod          #displayCashDiscTaken
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #CashDiscTakenPaymCur
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1321528392
          HierarchyParent     #GroupCashDisc
          DataSource          #VendTransOpen
          DataMethod          #displayCashDiscTakenPaymCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #CashDiscToTake
          AutoDeclaration     #Yes
          HelpText            #@sys128702
          ElementPosition     #1486719441
          HierarchyParent     #GroupCashDisc
          Label               #@sys128701
          DataSource          #VendTransOpen
          DataMethod          #editCashDiscToTake
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #CashDiscToTakePaymCur
          AutoDeclaration     #Yes
          ElementPosition     #1651910490
          HierarchyParent     #GroupCashDisc
          DataSource          #VendTransOpen
          DataMethod          #editCashDiscToTakePaymCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #displayBankCurrencyDealCourse_RU
          AllowEdit           #No
          ElementPosition     #536870910
          HierarchyParent     #CurrencyDeal_RU
          DataSource          #VendTransOpen
          DataMethod          #displayBankCurrencyDealCourse_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ExchAdjustment
          ElementPosition     #1670265058
          HierarchyParent     #AmountGroup
          DataSource          #VendTrans
          DataField           #ExchAdjustment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ExchangeRates_LastExchAdjRate
          ElementPosition     #1073741823
          HierarchyParent     #ExchangeRates
          DataSource          #VendTrans
          DataField           #LastExchAdjRate
          MinNoOfDecimals     #4
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ExchangeRates_LastExchAdjRateReporting
          ElementPosition     #1789569705
          HierarchyParent     #ExchangeRates
          DataSource          #VendTrans
          DataField           #LastExchAdjRateReporting
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #FullSettlementCashDisc
          CountryRegionCodes  #DE,AT,CH
          ElementPosition     #1817101539
          HierarchyParent     #GroupCashDisc
          Label               #@SYS319331
          DataSource          #VendTransOpen
          DataMethod          #displayFullSettlementCashDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #FullSettlementCashDiscPaymCur
          AutoDeclaration     #Yes
          CountryRegionCodes  #DE,AT,CH
          ElementPosition     #1982292588
          HierarchyParent     #GroupCashDisc
          DataSource          #VendTransOpen
          DataMethod          #displayFullSettlementCashDiscPaymCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #invoiceAmountExclTax
          AllowEdit           #No
          ElementPosition     #1073741816
          HierarchyParent     #GridTaxWithhold
          Label               #@SYS81797
          DataSource          #TaxWithholdTrans
          DataMethod          #invoiceAmountExclTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #possibleCashDiscPaymCur
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #825955245
          HierarchyParent     #GroupCashDisc
          DataSource          #VendTransOpen
          DataMethod          #editCashDiscAmountPaymCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #RemainingAmount
          AllowEdit           #No
          ElementPosition     #1717986916
          HierarchyParent     #Grid_CashDisc
          DataSource          #VendTransCashDisc
          DataMethod          #displaySettleAmountForCashDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #SettleExchRate
          AutoDeclaration     #Yes
          ElementPosition     #1431655760
          HierarchyParent     #OverviewGrid
          DataSource          #VendTransOpen
          DataMethod          #editCrossRate
          MinNoOfDecimals     #4
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #SettleField
          AutoDeclaration     #Yes
          ElementPosition     #1521134245
          HierarchyParent     #OverviewGrid
          Label               #@SYS114018
          DataSource          #VendTransOpen
          DataMethod          #editSettleAmountCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #settlePaymCur
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1610612730
          HierarchyParent     #OverviewGrid
          Label               #@SYS114017
          DataSource          #VendTransOpen
          DataMethod          #editSettleAmountPaymCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #showCashDiscTotal
          AllowEdit           #No
          ElementPosition     #1288490187
          HierarchyParent     #BalancesMST
          Label               #@SYS110920
          DataMethod          #displayCashDiscTotalMst
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #showCashDiscTotalCur
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1288490187
          HierarchyParent     #BalancesCur
          Label               #@SYS110921
          DataMethod          #displayCashDiscTotalCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ShowRemainAmount
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #858993458
          HierarchyParent     #BalancesMST
          Label               #@SYS110918
          DataMethod          #displayMarkedTotalMst
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #showRemainAmountCur
          AutoDeclaration     #Yes
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #858993458
          HierarchyParent     #BalancesCur
          Label               #@SYS110919
          DataMethod          #displayMarkedTotalCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #showtransferredAmount
          AutoDeclaration     #Yes
          AllowEdit           #No
          Skip                #Yes
          HelpText            #@SYS29010
          ElementPosition     #1717986916
          HierarchyParent     #BalancesMST
          Label               #@SYS12615
          DataMethod          #displayTransferredAmountMst
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #showTransferredAmountCur
          AutoDeclaration     #Yes
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1717986916
          HierarchyParent     #BalancesCur
          Label               #@SYS53676
          DataMethod          #displayTransferredAmountCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #showVendBalance
          AllowEdit           #No
          ElementPosition     #1073741822
          HierarchyParent     #RightGroup
          Label               #@SYS16706
          DataMethod          #displayVendBalanceMst
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdExclude
          AllowEdit           #No
          ElementPosition     #1476394997
          HierarchyParent     #GridTaxWithhold
          Label               #@SYS81799
          DataSource          #TaxWithholdTrans
          DataMethod          #TaxWithholdExclude
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdRoundOff
          AllowEdit           #No
          ElementPosition     #1227133512
          HierarchyParent     #GroupTaxWithholdAmounts
          DataSource          #TaxWithholdTrans
          DataMethod          #TaxWithholdRoundOff
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_AccountingCurDeductableAmount
          ElementPosition     #2120640098
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataMethod          #displayAccountingCurDeductableAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_AccountingCurExpenseAmount
          ElementPosition     #2066953004
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTransExtensionTH
          DataField           #AccountingCurExpenseAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_InvoiceAmount
          AutoDeclaration     #Yes
          ElementPosition     #805306362
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #InvoiceAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_InvoiceCurDeductableAmount
          ElementPosition     #2093796551
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataMethod          #displayInvoiceCurDeductableAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_InvoiceCurExpenseAmount
          ElementPosition     #2040109458
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTransExtensionTH
          DataField           #InvoiceCurExpenseAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_InvoiceCurUpdatedWithholdBaseAmount_TH
          ElementPosition     #1811939314
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTransExtensionTH
          DataField           #InvoiceCurUpdatedWithholdBaseAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_InvoiceExemptedAmount
          ElementPosition     #1610612724
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #InvoiceExemptedAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_InvoiceTaxAmount
          AutoDeclaration     #Yes
          ElementPosition     #939524089
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #InvoiceTaxAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_InvoiceTaxWithholdAmount
          ElementPosition     #1879048178
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #InvoiceTaxWithholdAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_InvoiceWithholdBaseAmount
          ElementPosition     #1744830451
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #InvoiceWithholdBaseAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_PaymTaxWithholdAmount
          ElementPosition     #1840700268
          HierarchyParent     #GroupTaxWithholdAmounts
          DataSource          #TaxWithholdTrans
          DataField           #PaymTaxWithholdAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_TaxNotTaxableByTreaty
          ElementPosition     #1073741822
          HierarchyParent     #GroupTaxWithholdNotTaxable
          DataSource          #TaxWithholdTrans
          DataField           #InvoiceNotTaxableByTreaty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_TaxNotTaxableExpenses
          ElementPosition     #1610612733
          HierarchyParent     #GroupTaxWithholdNotTaxable
          DataSource          #TaxWithholdTrans
          DataField           #InvoiceNotTaxableExpenses
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_TaxTaxWithholdAmount
          ElementPosition     #920350134
          HierarchyParent     #GroupTaxWithholdAmounts
          DataSource          #TaxWithholdTrans
          DataField           #TaxTaxWithholdAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_TaxWithholdAmount
          AutoDeclaration     #Yes
          ElementPosition     #2013265912
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #TaxWithholdAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VatTaxAgentAmount
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1431655764
          HierarchyParent     #VATTaxAgent_RU
          Label               #@GLS112876
          DataSource          #VendTransOpen
          DataMethod          #vatTaxAgentAmount_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendTrans_AmountCur
          ElementPosition     #715827882
          HierarchyParent     #AmountGroup
          Label               #@SYS81978
          DataSource          #VendTrans
          DataField           #AmountCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendTrans_AmountMST
          ElementPosition     #954437176
          HierarchyParent     #AmountGroup
          Label               #@SYS81979
          DataSource          #VendTrans
          DataField           #AmountMST
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendTransCashDisc_CashDiscAmount
          ElementPosition     #1288490187
          HierarchyParent     #Grid_CashDisc
          DataSource          #VendTransCashDisc
          DataField           #CashDiscAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendTransCashDisc_CashDiscAmount1
          AutoDeclaration     #Yes
          ElementPosition     #660764196
          HierarchyParent     #GroupCashDisc
          DataSource          #VendTransCashDisc
          DataField           #CashDiscAmount
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #    ;
            #
            #    ret = super();
            #
            #    vendTransCashDisc_ds.write();
            #
            #    if (ret)
            #    {
            #        manager.updateCashDiscAmount(vendTransOpen, vendTransCashDisc);
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendTransOpen_Amount
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1252698790
          HierarchyParent     #OverviewGrid
          Label               #@SYS12227
          DataSource          #VendTransOpen
          DataField           #AmountCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendTransOpen_FineAmount_BR
          CountryRegionCodes  #BR
          ElementPosition     #2092419960
          HierarchyParent     #GroupCashDisc
          DataSource          #VendTransOpen
          DataField           #FineAmount_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendTransOpen_InterestAmount_BR
          CountryRegionCodes  #BR
          ElementPosition     #2037356274
          HierarchyParent     #GroupCashDisc
          DataSource          #VendTransOpen
          DataField           #InterestAmount_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendTransOpen_TaxWithholdAmountOrigin_IN
          ElementPosition     #2147024894
          HierarchyParent     #OverviewGrid
          DataSource          #VendTransOpen
          DataField           #TaxWithholdAmountOrigin_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendTransOpen_TCSAmount_IN
          ElementPosition     #2147155966
          HierarchyParent     #OverviewGrid
          DataSource          #VendTransOpen
          DataField           #TCSAmount_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendTransOpen_TDSAmount_IN
          ElementPosition     #2147090430
          HierarchyParent     #OverviewGrid
          DataSource          #VendTransOpen
          DataField           #TDSAmount_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #VendTransOpen_CashDiscAccount
          AutoDeclaration     #Yes
          Left                #Right edge
          ElementPosition     #1431655764
          HierarchyParent     #GroupCashDiscAccount
          DataSource          #VendTransOpen
          ReferenceField      #CashDiscountLedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    ledgerDimensionDefaultAccountController.loadAutoCompleteData(_e);
            #    super(_e);
            #}
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #    ledgerDimensionDefaultAccountController.loadSegments();
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    vendTransOpen_ds.write();
            #    vendTransOpen_ds.refresh();
            #
            #
            #    return ret;
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #    ledgerDimensionDefaultAccountController.segmentValueChanged(_e);
            #}
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #    isValid = super();
            #    isValid = ledgerDimensionDefaultAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankEntryAccountID_RU
          AutoDeclaration     #Yes
          Visible             #No
          CountryRegionCodes  #RU
          HelpText            #@GLS114401
          ElementPosition     #2147374418
          HierarchyParent     #OverviewGrid
          Label               #@GLS114400
          DataSource          #VendTransOpen
          DataMethod          #displayBankEntryAccountID_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankLCVendTrans_BankLCNumber
          ElementPosition     #1968526670
          HierarchyParent     #OverviewGrid
          DataSource          #BankLCVendTrans
          DataField           #BankLCNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankSpecAccountId_RU
          AutoDeclaration     #Yes
          Visible             #No
          CountryRegionCodes  #RU
          ElementPosition     #2147265192
          HierarchyParent     #OverviewGrid
          Label               #@GLS107795
          DataSource          #VendTransOpen
          DataMethod          #displayBankSpecAccountId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Boleto_BR_EPBarCodeInfo_BR
          ElementPosition     #1610612734
          HierarchyParent     #Boleto
          DataSource          #VendTransOpen
          DataField           #EPBarCodeInfo_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CurrencyCode
          ElementPosition     #477218588
          HierarchyParent     #AmountGroup
          DataSource          #VendTrans
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #dispConsId_JP
          AutoDeclaration     #Yes
          AllowEdit           #No
          CountryRegionCodes  #JP
          ElementPosition     #2102351184
          HierarchyParent     #OverviewGrid
          DataSource          #VendTrans
          DataMethod          #dispConsId_JP
          CacheDataMethod     #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #displayAgreementHeaderDeal_RU
          AllowEdit           #No
          ElementPosition     #939524092
          HierarchyParent     #CurrencyDeal_RU
          Label               #@GLS114396
          DataSource          #VendTransOpen
          DataMethod          #displayAgreementHeaderDeal_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #displayTaxBranchDimension_TH
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #760567122
          HierarchyParent     #OverviewGrid
          DataSource          #VendTrans
          DataMethod          #displayTaxBranchDimension
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #displayTransferCurrency_RU
          AllowEdit           #No
          ElementPosition     #1879048185
          HierarchyParent     #CurrencyDeal_RU
          DataSource          #VendTransOpen
          DataMethod          #displayTransferCurrency_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #displayVendDealAccount_RU
          AllowEdit           #No
          ElementPosition     #1342177275
          HierarchyParent     #CurrencyDeal_RU
          Label               #@GLS114384
          DataSource          #VendTransOpen
          DataMethod          #displayVendDealAccount_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ElectronicPayment_BankInvoiceId
          AllowEdit           #No
          ElementPosition     #429496728
          HierarchyParent     #ElectronicPayment
          DataSource          #VendTransEPRemit_BR
          DataField           #BankInvoiceId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ExchangeRates_LastExchAdjVoucher
          ElementPosition     #1431655764
          HierarchyParent     #ExchangeRates
          DataSource          #VendTrans
          DataField           #LastExchAdjVoucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FilterValue_RU
          AutoDeclaration     #Yes
          HelpText            #@SYS4082002
          ElementPosition     #1431655764
          HierarchyParent     #Filter
          LookupButton        #Always
          ReplaceOnLookup     #No
          Label               #@SYS4082001
          ExtendedDataType    
            ARRAY 
              #Range
              #
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    manager.createLookupForAgreement(this, tableNum(VendTrans));
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    manager.setFilterValueForAgreement(vendTransOpen_ds,
            #                                       tableNum(VendTrans),
            #                                       filterValue_RU.text());
            #
            #    vendTransOpen_ds.research();
            #
            #    return true;
            #}
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean ret;
            #    PurchAgreementHeader purchAgreementHeader;
            #
            #    ret = super();
            #
            #    if (ret && this.valueStr())
            #    {
            #        purchAgreementHeader = PurchAgreementHeader::findAgreementId(this.valueStr());
            #
            #        if (! purchAgreementHeader || purchAgreementHeader.VendAccount != manager.getCustVendAccountNum())
            #        {
            #            ret = false;
            #        }
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #fiscalEstablishmentId_BR
          ElementPosition     #850045607
          DataSource          #VendTrans
          DataMethod          #fiscalEstablishmentId_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Invoice_DocumentNum
          ElementPosition     #1561806288
          HierarchyParent     #Invoice
          DataSource          #VendTrans
          DataField           #DocumentNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Invoice_Invoice
          ElementPosition     #390451572
          HierarchyParent     #Invoice
          DataSource          #VendTrans
          DataField           #Invoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Invoice_ReleaseDateComment
          Visible             #No
          ElementPosition     #1366580502
          HierarchyParent     #Invoice
          DataSource          #VendTrans
          DataField           #ReleaseDateComment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Invoice_TaxInvoicePurchId
          ElementPosition     #1952257860
          HierarchyParent     #Invoice
          DataSource          #VendTrans
          DataField           #TaxInvoicePurchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_BankCentralBankPurposeCode
          ElementPosition     #1670265058
          HierarchyParent     #Payment
          DataSource          #VendTrans
          DataField           #BankCentralBankPurposeCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_BankCentralBankPurposeText
          ElementPosition     #1431655764
          HierarchyParent     #Payment
          DataSource          #VendTrans
          DataField           #BankCentralBankPurposeText
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_PaymMode
          ElementPosition     #477218588
          HierarchyParent     #Payment
          DataSource          #VendTrans
          DataField           #PaymMode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_PaymReference
          ElementPosition     #954437176
          HierarchyParent     #Payment
          DataSource          #VendTrans
          DataField           #PaymReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_PaymSpec
          ElementPosition     #715827882
          HierarchyParent     #Payment
          DataSource          #VendTrans
          DataField           #PaymSpec
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PaymentDelay_M_displayReasonDescription
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1717986916
          HierarchyParent     #PaymentDelay_PSN
          Label               #@SPS1817
          DataSource          #VendInvoiceHoldHistory
          DataMethod          #displayReasonDescription
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PaymentDelay_PSN_M_editReasonCode
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #PaymentDelay_PSN
          DataSource          #VendInvoiceHoldHistory
          DataMethod          #editReasonCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #/// <summary>
            #/// Constructs a lookup for the reason code field.
            #/// </summary>
            #public void lookup()
            #{
            #    ReasonFormTable::reasonCodeLookup(
            #        this,
            #        LedgerJournalACType::Vend,
            #        LedgerJournalACType::Vend,
            #        true);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Settlement_LastSettleCompany
          ElementPosition     #1073741820
          HierarchyParent     #Settlement
          Label               #@SYS115826
          DataSource          #VendTrans
          DataField           #LastSettleCompany
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_Invoice
          ElementPosition     #402653181
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #Invoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_InvoiceCurrency
          ElementPosition     #671088635
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #InvoiceCurrency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_PaymCurrency
          ElementPosition     #1533916890
          HierarchyParent     #GroupTaxWithholdAmounts
          DataSource          #TaxWithholdTrans
          DataField           #PaymCurrency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_TaxWithholdCode
          ElementPosition     #1207959543
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #TaxWithholdCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_TaxWithholdCurrency
          ElementPosition     #613566756
          HierarchyParent     #GroupTaxWithholdAmounts
          DataSource          #TaxWithholdTrans
          DataField           #TaxWithholdCurrency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_TaxWithholdGroup
          AutoDeclaration     #Yes
          CountryRegionCodes  #TH
          ElementPosition     #1118481058
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataMethod          #editTaxWithholdGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxWithholdTrans_VoucherInvoice
          ElementPosition     #268435454
          HierarchyParent     #GridTaxWithhold
          DataSource          #TaxWithholdTrans
          DataField           #VoucherInvoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Txt
          AllowEdit           #No
          Top                 #Bottom edge
          Skip                #Yes
          ElementPosition     #1533916890
          HierarchyParent     #OverviewTab
          DisplayLength       #20
          DataSource          #VendTrans
          DataField           #Txt
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_AccountNum
          ElementPosition     #715827880
          HierarchyParent     #OverviewGrid
          Label               #@SYS24500
          DataSource          #VendTrans
          DataField           #AccountNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_Company
          HelpText            #@SYS122501
          ElementPosition     #805306365
          HierarchyParent     #OverviewGrid
          Label               #@SYS10499
          DataSource          #VendTrans
          DataField           #dataAreaId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_CurrencyCode
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1342177275
          HierarchyParent     #OverviewGrid
          Label               #@SYS7572
          DataSource          #VendTrans
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_EPPaymentType_BR
          ElementPosition     #1988410783
          HierarchyParent     #Payment
          DataSource          #VendTransPayment_BR
          DataField           #EPPaymentType_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_EPPaymentWay_BR
          ElementPosition     #2067947214
          HierarchyParent     #Payment
          DataSource          #VendTransPayment_BR
          DataField           #EPPaymentWay_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_Invoice
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1073741820
          HierarchyParent     #OverviewGrid
          DataSource          #VendTrans
          DataField           #Invoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_RemittanceAddress
          AllowEdit           #No
          ElementPosition     #1431655764
          HierarchyParent     #RemittanceBottom
          DataSource          #VendTrans
          DataMethod          #displayRemittanceAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_VendPaymentGroup
          AutoDeclaration     #Yes
          ElementPosition     #330382098
          HierarchyParent     #GroupCashDisc
          DataSource          #VendTrans
          DataField           #VendPaymentGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_VendPaymentGroup1
          AutoDeclaration     #Yes
          ElementPosition     #1908874352
          HierarchyParent     #Payment
          DataSource          #VendTrans
          DataField           #VendPaymentGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_Voucher
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #626349395
          HierarchyParent     #OverviewGrid
          DataSource          #VendTrans
          DataField           #Voucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendTrans_W_PrepaymentFactureId_W
          ElementPosition     #2049870753
          HierarchyParent     #Invoice
          DataSource          #VendTrans_W
          DataField           #PrepaymentFactureId_W
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #Invoice_InvoiceReleaseDate
          Visible             #No
          ElementPosition     #1171354716
          HierarchyParent     #Invoice
          DataSource          #VendTrans
          DataField           #InvoiceReleaseDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #VendTable_ReleaseDate
          AllowEdit           #No
          ElementPosition     #1288490187
          HierarchyParent     #HoldsGroup
          DataSource          #VendTable
          DataField           #BlockedReleaseDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #VendTable_ReleaseDate1
          AllowEdit           #No
          ElementPosition     #1789569700
          HierarchyParent     #OverviewGrid
          DisplayOption       #Date
          DataSource          #VendTable
          DataField           #BlockedReleaseDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #VendTrans_InvoiceReleaseDate
          ElementPosition     #1717986916
          HierarchyParent     #HoldsGroup
          DataSource          #VendTrans
          DataField           #InvoiceReleaseDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #VendTrans_InvoiceReleaseDate1
          AllowEdit           #No
          ElementPosition     #1879048185
          HierarchyParent     #OverviewGrid
          DisplayOption       #Date
          DataSource          #VendTrans
          DataField           #InvoiceReleaseDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #Ismarked
          AutoDeclaration     #Yes
          Width               #14
          Height              #14
          HelpText            #@SYS29065
          ElementPosition     #178956970
          HierarchyParent     #OverviewGrid
          Label               #@SYS68094
          DataSource          #VendTransOpen
          DataMethod          #displayTransMarkedByOtherSpec
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #PaymentSpec
          AutoDeclaration     #Yes
          Width               #14
          Height              #14
          HelpText            #@SYS68093
          ElementPosition     #268435455
          HierarchyParent     #OverviewGrid
          Label               #@SYS68092
          DataSource          #VendTransOpen
          DataMethod          #displayPrimaryPaymentMarked
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
      TABLE #VendSpecTransUnion
        PROPERTIES
          Table               #VendSpecTransUnion
          EffectiveAccess     #Read
          ManagedBy           #Manual
        ENDPROPERTIES
        
      ENDTABLE
      
  ENDTABLES
  
SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #CustVendTransReorg
    PROPERTIES
      Form                #CustVendTransReorg
      AccessLevel         #NoAccess
      SystemManaged       #No
      ManagedBy           #Manual
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #CustVendTransReorg
    PROPERTIES
      Form                #CustVendTransReorg
      AccessLevel         #Delete
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #CustVendTransReorg
    PROPERTIES
      Form                #CustVendTransReorg
      AccessLevel         #Delete
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #CustVendTransReorg
    PROPERTIES
      Form                #CustVendTransReorg
      AccessLevel         #Delete
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #CustVendTransReorg
  PROPERTIES
    Name                #CustVendTransReorg
    Origin              #{0B120000-0000-1000-2597-F20054ADAD93}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #    FormComboBoxControl fcbC;
      #    FormRealControl     frcPctGrid;
      #    FormRealControl     frcPctGrid1;
      #    FormRealControl     frcAmountGrid;
      #    FormRealControl     frcAmountGrid1;
      #
      #    // display variables
      #    AmountCur           amountCurSum;
      #    Percent             percentSum;
      #    AmountCur           amountCur;
      #
      #    CustVendTransReorg  custVendTransReorg;
      #}
    ENDSOURCE
    SOURCE #amountCur
      #//BP Deviation Documented
      #display AmountCur amountCur()
      #{
      #    return amountCur;
      #}
    ENDSOURCE
    SOURCE #init
      #void init()
      #{
      #    ;
      #    super();
      #
      #    custVendTransReorg  = element.args().caller();
      #
      #    amountCur           = abs(custVendTransReorg.amountCur());
      #
      #    fcbC                = percentAmount;
      #    frcPctGrid          = tmpCustVendTransReorg_CustVendTransPct;
      #    frcPctGrid1         = tmpCustVendTransReorg_CustVendTransPct1;
      #    frcAmountGrid       = tmpCustVendTransReorg_AmountCur;
      #    frcAmountGrid1      = tmpCustVendTransReorg_AmountCur1;
      #
      #    element.remain();
      #}
    ENDSOURCE
    SOURCE #remain
      #boolean remain()
      #{
      #    AmountCur               amountCurDiff;
      #    Percent                 percentDiff;
      #    TmpCustVendTransReorg   localTmpCustVendTransReorg;
      #    ;
      #
      #    amountCurSum    = 0;
      #    percentSum      = 0;
      #    localTmpCustVendTransReorg.setTmpData(tmpCustVendTransReorg);
      #
      #    select sum(CustVendTransPct),sum(AmountCur) from localTmpCustVendTransReorg;
      #
      #    percentSum = localTmpCustVendTransReorg.CustVendTransPct;
      #    amountCurSum = localTmpCustVendTransReorg.AmountCur;
      #
      #    if (amountCur != 0)
      #    {
      #        percentDiff = (amountCurSum / amountCur * 100) - percentSum;
      #    }
      #    percentSum += percentDiff;
      #
      #    amountCurDiff = Currency::amount((percentSum * amountCur / 100) - amountCurSum);
      #    amountCurSum += amountCurDiff;
      #
      #    if (fcbC.selection() == PercentAmount::Percent)
      #    {
      #        frcPctGrid.visible(true);
      #        frcPctGrid1.visible(true);
      #        frcAmountGrid.visible(false);
      #        frcAmountGrid1.visible(false);
      #        accept.enabled((100 - percentSum) == 0.00);
      #        if (100 != percentSum)
      #        {
      #            return false;
      #        }
      #    }
      #    else
      #    {
      #        // amount selected
      #        frcPctGrid.visible(false);
      #        frcPctGrid1.visible(false);
      #        frcAmountGrid.visible(true);
      #        frcAmountGrid1.visible(true);
      #        // checks if - sum of transReorg amounts fits the open tranaction
      #        accept.enabled((amountCur - amountCurSum) == 0.00);
      #        if (amountCur != amountCurSum)
      #        {
      #            return false;
      #        }
      #    }
      #    return true;
      #}
    ENDSOURCE
    SOURCE #remainder
      #//BP Deviation documented
      #display AmountCur remainder()
      #{
      #    ;
      #
      #    if (fcbC.selection() == PercentAmount::Percent)
      #    {
      #        return  100 - percentSum;
      #    }
      #    else
      #    {
      #        return  amountCur - amountCurSum;
      #    }
      #}
    ENDSOURCE
    SOURCE #reorganize
      #void reorganize()
      #{
      #    TmpCustVendTransReorg   tmpCustVendTransReorgLocal;
      #    ;
      #    ttsbegin;
      #
      #    for (tmpCustVendTransReorgLocal = tmpCustVendTransReorg_ds.getFirst();
      #         tmpCustVendTransReorgLocal;
      #         tmpCustVendTransReorgLocal = tmpCustVendTransReorg_ds.getNext())
      #    {
      #        custVendTransReorg.reorganize(tmpCustVendTransReorgLocal);
      #    }
      #
      #    custVendTransReorg.end();
      #
      #    ttscommit;
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TmpCustVendTransReorg
          Table               #TmpCustVendTransReorg
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #void write()
          #{
          #    if (fcbC.selection() == PercentAmount::Percent)
          #    {
          #        tmpCustVendTransReorg.AmountCur = Currency::amount(amountCur * tmpCustVendTransReorg.CustVendTransPct / 100);
          #    }
          #    else
          #    {
          #        if (amountCur != 0)
          #        {
          #            tmpCustVendTransReorg.CustVendTransPct = Currency::amount(tmpCustVendTransReorg.AmountCur / amountCur * 100);
          #        }
          #    }
          #
          #    super();
          #
          #    element.remain();
          #}
        ENDSOURCE
        SOURCE #init
          #void init()
          #{
          #    super();
          #
          #    tmpCustVendTransReorg_ds.query().dataSourceTable(tablenum(TmpCustVendTransReorg)).clearDynalinks();
          #}
        ENDSOURCE
        SOURCE #delete
          #void delete()
          #{
          #    super();
          #
          #    element.remain();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #BankAccountTable
          Table               #BankAccountTable
          JoinSource          #TmpCustVendTransReorg
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
    BankAccountTable TmpCustVendTransReorg
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS58460
      TitleDatasource     #TmpCustVendTransReorg
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #357913940
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1610612733
          HierarchyParent     #ActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #NewDeleteGroup
          ElementPosition     #1073741822
          HierarchyParent     #ActionPaneTab
          DataSource          #TmpCustVendTransReorg
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #Overview
          DataSource          #TmpCustVendTransReorg
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Amount
          ElementPosition     #1431655764
          HierarchyParent     #Setup
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #minFormSizeGroup
          Width               #500
          Height              #1
          ElementPosition     #536870910
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RemainAmount
          ElementPosition     #1610612733
          HierarchyParent     #Amount
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Setup
          ElementPosition     #715827880
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Transaction
          ElementPosition     #1431655764
          HierarchyParent     #General
          Caption             #@SYS15191
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741822
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #General
          ElementPosition     #1610612733
          HierarchyParent     #Tab
          Caption             #@SYS2952
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Overview
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741822
          HierarchyParent     #Tab
          Caption             #@SYS9039
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #paymentSched
          HelpText            #@SYS84049
          ConfigurationKey    #PaymSched
          ElementPosition     #1610612733
          HierarchyParent     #ButtonGroup
          Text                #@SYS23027
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    custVendTransReorg.paymentSchedSplit(tmpCustVendTransReorg);
            #    tmpCustVendTransReorg_ds.research();
            #    element.remain();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PercentAmount
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Amount
          EnumType            #PercentAmount
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    if (ret)
            #    {
            #        element.remain();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #Accept
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ButtonGroup
          Text                #@SYS57795
          Command             #263
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (element.remain())
            #    {
            #        element.reorganize();
            #    }
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #DeleteButton
          ElementPosition     #1610612733
          HierarchyParent     #NewDeleteGroup
          Text                #@sys14425
          ButtonDisplay       #Text & Image left
          NormalImage         #10121
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #NewButton
          ElementPosition     #1073741822
          HierarchyParent     #NewDeleteGroup
          ButtonDisplay       #Text & Image left
          NormalImage         #11045
          ImageLocation       #EmbeddedResource
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #TmpCustVendTransReorg_TransDate
          ElementPosition     #858993458
          HierarchyParent     #Grid
          DataSource          #TmpCustVendTransReorg
          DataField           #DueDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #TmpCustVendTransReorg_TransDate1
          ElementPosition     #858993458
          HierarchyParent     #Transaction
          DataSource          #TmpCustVendTransReorg
          DataField           #DueDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #AmountCur
          AllowEdit           #No
          Enabled             #No
          ElementPosition     #1073741822
          HierarchyParent     #RemainAmount
          DataMethod          #AmountCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Remainder
          AllowEdit           #No
          Enabled             #No
          ElementPosition     #1610612733
          HierarchyParent     #RemainAmount
          Label               #@SYS56506
          DataMethod          #remainder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TmpCustVendTransReorg_AmountCur
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #Grid
          DataSource          #TmpCustVendTransReorg
          DataField           #AmountCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TmpCustVendTransReorg_AmountCur1
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #Transaction
          DataSource          #TmpCustVendTransReorg
          DataField           #AmountCur
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TmpCustVendTransReorg_CustVendTransPct
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #Grid
          DataSource          #TmpCustVendTransReorg
          DataField           #CustVendTransPct
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #TmpCustVendTransReorg_CustVendTransPct1
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #Transaction
          DataSource          #TmpCustVendTransReorg
          DataField           #CustVendTransPct
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankAccountTable_IBAN
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #2004318068
          HierarchyParent     #Grid
          DataSource          #BankAccountTable
          DataField           #IBAN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TmpCustVendTransReorg_Description
          ElementPosition     #2075900857
          HierarchyParent     #Grid
          DataSource          #TmpCustVendTransReorg
          DataField           #Description
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TmpCustVendTransReorg_VendorBankAccount
          ElementPosition     #1861152492
          HierarchyParent     #Grid
          DataSource          #TmpCustVendTransReorg
          DataField           #VendorBankAccount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: PRN

; Microsoft Dynamics AX Project : MP_Novensys_PlatiFacturiFurnizori unloaded
; --------------------------------------------------------------------------------
  PROJECTVERSION 2
  
  PROJECT #MP_Novensys_PlatiFacturiFurnizori
  SHARED
  PROPERTIES
    Name                #MP_Novensys_PlatiFacturiFurnizori
    Origin              #{2FF1D289-1F5F-4A73-AAD7-4875DEF2D0F2}
  ENDPROPERTIES
  
    PROJECTCLASS ProjectNode
    GROUP #Data Dictionary
      PROPERTIES
        Name                #Data Dictionary
        ProjectGroupType    #DataDictionary
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      GROUP #Tables
        PROPERTIES
          Name                #Tables
          ProjectGroupType    #Tables
          GroupMask           #
          PreventEditProperties #No
        ENDPROPERTIES
        
        BEGINNODE
          FILETYPE 0
          UTILTYPE 44
          UTILOBJECTID 7
          NODETYPE 204
          NAME #BankAccountTable
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 44
          UTILOBJECTID 489
          NODETYPE 204
          NAME #VendBankAccount
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 44
          UTILOBJECTID 506
          NODETYPE 204
          NAME #VendTrans
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 44
          UTILOBJECTID 945
          NODETYPE 204
          NAME #TmpCustVendTransReorg
        ENDNODE
        ENDGROUP
        
      GROUP #Extended Data Types
        PROPERTIES
          Name                #Extended Data Types
          ProjectGroupType    #ExtendedDataTypes
          GroupMask           #
          PreventEditProperties #No
        ENDPROPERTIES
        
        BEGINNODE
          FILETYPE 0
          UTILTYPE 41
          UTILOBJECTID 104374
          NODETYPE 234
          NAME #VendorBankAccount
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 41
          UTILOBJECTID 841
          NODETYPE 234
          NAME #Description
        ENDNODE
        ENDGROUP
        
      ENDGROUP
      
    GROUP #Classes
      PROPERTIES
        Name                #Classes
        ProjectGroupType    #Classes
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 2490
        NODETYPE 329
        NAME #CustVendTransReorg
      ENDNODE
      ENDGROUP
      
    GROUP #Forms
      PROPERTIES
        Name                #Forms
        ProjectGroupType    #Forms
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #VendOpenTrans
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #CustVendTransReorg
      ENDNODE
      ENDGROUP
      
  ENDPROJECT
  

***Element: END
