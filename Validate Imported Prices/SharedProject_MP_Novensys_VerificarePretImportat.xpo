Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: DBT

; Microsoft Dynamics AX Table : PriceDiscAdmTrans unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #PriceDiscAdmTrans
    EnforceFKRelation 0
    PROPERTIES
      Name                #PriceDiscAdmTrans
      Label               #@SYS60313
      FormRef             #PriceDiscAdm
      TitleField1         #relation
      TitleField2         #ItemRelation
      ConfigurationKey    #PriceDisc
      SecurityKey         #BasicTables
      CacheLookup         #NotInTTS
      CreateRecIdIndex    #Yes
      TableGroup          #WorksheetLine
      PrimaryIndex        #JourLineNumIdx
      ClusterIndex        #JourLineNumIdx
      ModifiedDateTime    #Yes
      DeveloperDocumentation  #@SYS124526
      Origin              #{2C1103CC-0000-1000-E2FD-0333F72F1BF0}
      LegacyId            #972
    ENDPROPERTIES
    
    FIELDS
      FIELD #AccountCode
        ENUM
        PROPERTIES
          Name                #AccountCode
          Table               #PriceDiscAdmTrans
          Origin              #{94B3B9F7-963C-4DB2-8F74-B1766BBD3384}
          LegacyId            #3
          ExtendedDataType    #PriceDiscAccountCode
          EnumType            #TableGroupAll
        ENDPROPERTIES
        
      FIELD #AccountRelation
        STRING
        PROPERTIES
          Name                #AccountRelation
          Table               #PriceDiscAdmTrans
          Origin              #{0FA0403C-42A7-439E-925B-1C86C3C48A0B}
          LegacyId            #5
          ExtendedDataType    #PriceDiscAccountRelation
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Agreement
        STRING
        PROPERTIES
          Name                #Agreement
          Table               #PriceDiscAdmTrans
          Origin              #{DFC5EF67-AEE0-445D-9D81-1ED920F86C9B}
          LegacyId            #1
          ExtendedDataType    #PriceAgreement
        ENDPROPERTIES
        
      FIELD #AgreementHeaderExt_RU
        INT64
        PROPERTIES
          Name                #AgreementHeaderExt_RU
          Table               #PriceDiscAdmTrans
          Origin              #{2A150000-03CC-1000-2548-FA535E72F52E}
          ExtendedDataType    #AgreementHeaderExtRecId_RU
        ENDPROPERTIES
        
      FIELD #AllocateMarkup
        ENUM
        PROPERTIES
          Name                #AllocateMarkup
          Label               #@SYS6613
          HelpText            #@SYS10210
          Table               #PriceDiscAdmTrans
          Origin              #{E334D534-0515-4DC5-BBFC-413679EA99E9}
          LegacyId            #20
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Amount
        REAL
        PROPERTIES
          Name                #Amount
          Label               #@SYS344741
          HelpText            #@SYS10332
          Table               #PriceDiscAdmTrans
          Origin              #{C206C30F-A9C3-4864-BF98-33E515B65999}
          LegacyId            #9
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #CalendarDays
        ENUM
        PROPERTIES
          Name                #CalendarDays
          Table               #PriceDiscAdmTrans
          Origin              #{AD0177A5-E98C-49AF-AB1A-36D5787377B0}
          LegacyId            #29
          ExtendedDataType    #CalendarDays
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Currency
        STRING
        PROPERTIES
          Name                #Currency
          HelpText            #@SYS20780
          Mandatory           #Yes
          Table               #PriceDiscAdmTrans
          IgnoreEDTRelation   #Yes
          Origin              #{741D419B-379D-4AC4-AD58-A224975BCCE4}
          LegacyId            #10
          ExtendedDataType    #CurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #DeliveryTime
        INT
        PROPERTIES
          Name                #DeliveryTime
          Table               #PriceDiscAdmTrans
          Origin              #{2CA92457-1D4E-4D00-8562-32D6D345D3A6}
          LegacyId            #14
          ExtendedDataType    #LeadTime
        ENDPROPERTIES
        
      FIELD #DifferentFromPosted
        ENUM
        PROPERTIES
          Name                #DifferentFromPosted
          Visible             #No
          Table               #PriceDiscAdmTrans
          Origin              #{0FC772BD-948A-45AF-BC9B-52238785E759}
          LegacyId            #30
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #DisregardLeadTime
        ENUM
        PROPERTIES
          Name                #DisregardLeadTime
          Table               #PriceDiscAdmTrans
          Origin              #{413CDA5C-620A-4ADE-992D-3F611F000B3C}
          ExtendedDataType    #DisregardLeadTime
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #FromDate
        DATE
        PROPERTIES
          Name                #FromDate
          HelpText            #@SYS13946
          Table               #PriceDiscAdmTrans
          Origin              #{6A6EF745-142A-459F-BA73-AC9015802D83}
          LegacyId            #7
          ExtendedDataType    #FromDate
        ENDPROPERTIES
        
      FIELD #GenericCurrency
        ENUM
        PROPERTIES
          Name                #GenericCurrency
          Table               #PriceDiscAdmTrans
          Origin              #{358121C2-9291-4534-94B3-1617550F96EA}
          LegacyId            #31
          ExtendedDataType    #SalesGenericCurrency
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InventBaileeFreeDays_RU
        INT
        PROPERTIES
          Name                #InventBaileeFreeDays_RU
          Table               #PriceDiscAdmTrans
          Origin              #{29E0F652-F7E9-4325-A15F-9513DCD2CA6B}
          ExtendedDataType    #InventBaileeFreeDays_RU
        ENDPROPERTIES
        
      FIELD #InventDimId
        STRING
        PROPERTIES
          Name                #InventDimId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PriceDiscAdmTrans
          IgnoreEDTRelation   #Yes
          Origin              #{56A1727B-EE5E-477C-BE60-7E4A118EB65A}
          LegacyId            #27
          ExtendedDataType    #InventDimId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ItemCode
        ENUM
        PROPERTIES
          Name                #ItemCode
          Table               #PriceDiscAdmTrans
          Origin              #{92AC1932-ADED-46BB-8DB0-0BDBBD4AA8B7}
          LegacyId            #2
          ExtendedDataType    #PriceDiscItemCode
          EnumType            #TableGroupAll
        ENDPROPERTIES
        
      FIELD #ItemRelation
        STRING
        PROPERTIES
          Name                #ItemRelation
          Table               #PriceDiscAdmTrans
          Origin              #{6E8EEE1B-127E-41EA-83AD-B13673EC8155}
          LegacyId            #4
          ExtendedDataType    #PriceDiscItemRelation
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #JournalNum
        STRING
        PROPERTIES
          Name                #JournalNum
          Table               #PriceDiscAdmTrans
          IgnoreEDTRelation   #Yes
          Origin              #{38C40540-6F33-4E7B-A86E-681F63311872}
          LegacyId            #24
          ExtendedDataType    #PriceDiscJournalNum
        ENDPROPERTIES
        
      FIELD #LineNum
        REAL
        PROPERTIES
          Name                #LineNum
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PriceDiscAdmTrans
          Origin              #{3D70446A-FC5D-4DCA-AA56-57AA98AE1633}
          LegacyId            #23
          ExtendedDataType    #LineNum
        ENDPROPERTIES
        
      FIELD #Log
        STRING
        PROPERTIES
          Name                #Log
          Table               #PriceDiscAdmTrans
          Origin              #{C6E13AAA-6662-4857-8217-D74EF2619A7A}
          LegacyId            #26
          ExtendedDataType    #PriceJournalLogTrans
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #Markup
        REAL
        PROPERTIES
          Name                #Markup
          Table               #PriceDiscAdmTrans
          Origin              #{664D84B9-36A4-40E4-AE0E-AEC735FB910D}
          LegacyId            #19
          ExtendedDataType    #PriceMarkup
        ENDPROPERTIES
        
      FIELD #MaximumRetailPrice_IN
        REAL
        PROPERTIES
          Name                #MaximumRetailPrice_IN
          HelpText            #@GLS5544
          Table               #PriceDiscAdmTrans
          Origin              #{3752AF08-2C95-4C8E-A7FD-2888064C8ADB}
          ExtendedDataType    #MaximumRetailPrice_IN
        ENDPROPERTIES
        
      FIELD #Module
        ENUM
        PROPERTIES
          Name                #Module
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PriceDiscAdmTrans
          Origin              #{4F1E7A52-4354-4F9A-987A-24B50790CA95}
          LegacyId            #21
          ExtendedDataType    #PriceDiscModule
          EnumType            #ModuleInventCustVend
        ENDPROPERTIES
        
      FIELD #MustBeDeleted
        ENUM
        PROPERTIES
          Name                #MustBeDeleted
          Visible             #No
          Table               #PriceDiscAdmTrans
          Origin              #{D63D3B8F-4AAA-4D26-8712-CFC287DAB11C}
          LegacyId            #35
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #PDSCalculationId
        STRING
        PROPERTIES
          Name                #PDSCalculationId
          Table               #PriceDiscAdmTrans
          Origin              #{BBE79428-561B-4379-A8E2-9B0CB0C8EFB7}
          ExtendedDataType    #PDSCalculationId
        ENDPROPERTIES
        
      FIELD #Percent1
        REAL
        PROPERTIES
          Name                #Percent1
          Label               #@SYS901
          HelpText            #@SYS69418
          Table               #PriceDiscAdmTrans
          Origin              #{83F61437-13E0-4A30-8351-CCBB607BBC76}
          LegacyId            #11
          ExtendedDataType    #DiscPct
        ENDPROPERTIES
        
      FIELD #Percent2
        REAL
        PROPERTIES
          Name                #Percent2
          Label               #@SYS902
          HelpText            #@SYS69418
          Table               #PriceDiscAdmTrans
          Origin              #{7AA0C8A0-B214-4A40-9459-1082F138779F}
          LegacyId            #12
          ExtendedDataType    #DiscPct
        ENDPROPERTIES
        
      FIELD #PriceDiscTableRef
        INT64
        PROPERTIES
          Name                #PriceDiscTableRef
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PriceDiscAdmTrans
          IgnoreEDTRelation   #Yes
          Origin              #{4CF698A7-7BDE-458E-A1F8-CBDEAC6928FA}
          LegacyId            #25
          ExtendedDataType    #PriceDiscTableRefRecId
        ENDPROPERTIES
        
      FIELD #PriceUnit
        REAL
        PROPERTIES
          Name                #PriceUnit
          HelpText            #@SYS8593
          Table               #PriceDiscAdmTrans
          Origin              #{933F4AC1-8112-4610-B45B-9FCFF5B239D9}
          LegacyId            #16
          ExtendedDataType    #PriceUnit
        ENDPROPERTIES
        
      FIELD #QuantityAmountFrom
        REAL
        PROPERTIES
          Name                #QuantityAmountFrom
          Label               #@SYS4083
          HelpText            #@SYS138719
          Table               #PriceDiscAdmTrans
          Origin              #{D308E238-BE15-40E3-AC3F-9003251E1D7A}
          LegacyId            #6
          ExtendedDataType    #AmountQty
        ENDPROPERTIES
        
      FIELD #QuantityAmountTo
        REAL
        PROPERTIES
          Name                #QuantityAmountTo
          HelpText            #@SYS138719
          Table               #PriceDiscAdmTrans
          Origin              #{6ACBDC7D-6E10-4253-86CA-FBA35A3B56B7}
          LegacyId            #13
          ExtendedDataType    #AmountQuantityTo
        ENDPROPERTIES
        
      FIELD #relation
        ENUM
        PROPERTIES
          Name                #relation
          Label               #@SYS9114
          HelpText            #@SYS4404
          Table               #PriceDiscAdmTrans
          Origin              #{1A4212A0-FD8D-495C-889D-4D6B29AC8035}
          LegacyId            #17
          EnumType            #PriceType
        ENDPROPERTIES
        
      FIELD #SearchAgain
        ENUM
        PROPERTIES
          Name                #SearchAgain
          Label               #@SYS15494
          HelpText            #@SYS6533
          Table               #PriceDiscAdmTrans
          Origin              #{ABB41EFC-F08B-4085-8844-77402327E6A2}
          LegacyId            #15
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ToDate
        DATE
        PROPERTIES
          Name                #ToDate
          HelpText            #@SYS13946
          Table               #PriceDiscAdmTrans
          Origin              #{72D6ECC6-B1B5-443C-A9CD-9956E914E074}
          LegacyId            #8
          ExtendedDataType    #ToDate
        ENDPROPERTIES
        
      FIELD #UnderCost
        ENUM
        PROPERTIES
          Name                #UnderCost
          Label               #Under cost
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PriceDiscAdmTrans
          Origin              #{320844DF-313C-47E1-AD90-C74CBFDF9B41}
          EnumType            #NoYesCombo
        ENDPROPERTIES
        
      FIELD #UnitId
        STRING
        PROPERTIES
          Name                #UnitId
          HelpText            #@SYS13900
          Table               #PriceDiscAdmTrans
          Origin              #{B4125B58-C9F9-43B8-BCA3-9928D7854B05}
          LegacyId            #18
          ExtendedDataType    #UnitOfMeasureSymbol
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #JournalNum
          #Module
          #relation
          #AccountCode
          #AccountRelation
          #AgreementHeaderExt_RU
          #ItemCode
          #ItemRelation
          #FromDate
          #ToDate
          #QuantityAmountFrom
          #QuantityAmountTo
          #Amount
          #Currency
          #Percent1
          #Percent2
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Administration
        PROPERTIES
          Name                #Administration
          Label               #@SYS9853
        ENDPROPERTIES
        
        GROUPFIELDS
          #Agreement
          #SearchAgain
          #Log
          #DifferentFromPosted
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #All
        PROPERTIES
          Name                #All
          Label               #@SYS80094
        ENDPROPERTIES
        
        GROUPFIELDS
          #Agreement
          #ItemCode
          #AccountCode
          #ItemRelation
          #AccountRelation
          #QuantityAmountFrom
          #FromDate
          #ToDate
          #Amount
          #Currency
          #Percent1
          #Percent2
          #DeliveryTime
          #SearchAgain
          #PriceUnit
          #relation
          #UnitId
          #Markup
          #AllocateMarkup
          #Module
          #JournalNum
          #PriceDiscTableRef
          #Log
          #InventDimId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Amount
        PROPERTIES
          Name                #Amount
          Label               #@SYS12227
        ENDPROPERTIES
        
        GROUPFIELDS
          #Amount
          #PriceUnit
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Currency
        PROPERTIES
          Name                #Currency
          Label               #@SYS7572
        ENDPROPERTIES
        
        GROUPFIELDS
          #GenericCurrency
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Delivery
        PROPERTIES
          Name                #Delivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryTime
          #CalendarDays
          #DisregardLeadTime
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #JournalNum
          #Module
          #relation
          #AccountCode
          #AccountRelation
          #AgreementHeaderExt_RU
          #ItemRelation
          #ItemCode
          #FromDate
          #ToDate
          #Currency
          #UnitId
          #QuantityAmountFrom
          #QuantityAmountTo
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InventBailee_RU
        PROPERTIES
          Name                #InventBailee_RU
          Label               #@GLS115581
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventBaileeFreeDays_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InventDim
        PROPERTIES
          Name                #InventDim
          Label               #@SYS53627
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventDimId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #MiscCharges
        PROPERTIES
          Name                #MiscCharges
          Label               #@SYS8371
        ENDPROPERTIES
        
        GROUPFIELDS
          #Markup
          #AllocateMarkup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PDSPotency
        PROPERTIES
          Name                #PDSPotency
          Label               #@PSC61
        ENDPROPERTIES
        
        GROUPFIELDS
          #PDSCalculationId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Percent
        PROPERTIES
          Name                #Percent
          Label               #@SYS15774
        ENDPROPERTIES
        
        GROUPFIELDS
          #Percent1
          #Percent2
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #QuantityAmount
        PROPERTIES
          Name                #QuantityAmount
          Label               #@SYS59970
        ENDPROPERTIES
        
        GROUPFIELDS
          #QuantityAmountFrom
          #QuantityAmountTo
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TaxInformation_IN
        PROPERTIES
          Name                #TaxInformation_IN
          Label               #@SYS33652
        ENDPROPERTIES
        
        GROUPFIELDS
          #MaximumRetailPrice_IN
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #JourLineNumIdx
      PROPERTIES
        Name                #JourLineNumIdx
        AllowDuplicates     #No
        Origin              #{2B0E0001-03CC-1000-84B0-DFDD0F63D277}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #JournalNum
        #LineNum
        #RecId
      ENDINDEXFIELDS
      
      #PriceDiscTableRefIdx
      PROPERTIES
        Name                #PriceDiscTableRefIdx
        Origin              #{2B140002-03CC-1000-83B5-4A91348C8DB0}
        LegacyId            #2
      ENDPROPERTIES
      
      INDEXFIELDS
        #PriceDiscTableRef
        #JournalNum
      ENDINDEXFIELDS
      
      #AgreementHeaderExt_RUIdx
      PROPERTIES
        Name                #AgreementHeaderExt_RUIdx
        Origin              #{2B180000-03CC-1000-2548-FA535E25A828}
      ENDPROPERTIES
      
      INDEXFIELDS
        #AgreementHeaderExt_RU
      ENDINDEXFIELDS
      
      #JournalRelationIdx
      PROPERTIES
        Name                #JournalRelationIdx
        Origin              #{F496F030-A26A-421A-810B-DB5440FE381B}
      ENDPROPERTIES
      
      INDEXFIELDS
        #JournalNum
        #Currency
        #UnitId
        #InventDimId
        #relation
        #AccountRelation
        #AccountCode
        #ItemRelation
        #ItemCode
      ENDINDEXFIELDS
      
      #PDSCalculationTableIdx
      PROPERTIES
        Name                #PDSCalculationTableIdx
        Origin              #{2376A9A2-BCA1-416B-8583-07ACEEC6BFB8}
      ENDPROPERTIES
      
      INDEXFIELDS
        #PDSCalculationId
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #AgreementHeaderExt_RU
        PROPERTIES
          Name                #AgreementHeaderExt_RU
          Table               #AgreementHeaderExt_RU
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AgreementHeaderExt_RU
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Currency
            RelatedField        #CurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustEndGroup
        PROPERTIES
          Name                #CustEndGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustEndGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #3
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #7
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustLineGroup
        PROPERTIES
          Name                #CustLineGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustLineGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #5
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustMultiGroup
        PROPERTIES
          Name                #CustMultiGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustMultiGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #6
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustPriceGroup
        PROPERTIES
          Name                #CustPriceGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustPriceGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #4
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustTable
        PROPERTIES
          Name                #CustTable
          Table               #CustTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #CustTable
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #Module
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #AccountNum
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventDim
        PROPERTIES
          Name                #InventDim
          Table               #InventDim
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InventDimId
            RelatedField        #inventDimId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventTable
        PROPERTIES
          Name                #InventTable
          Table               #InventTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #ItemCode
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemRelation
            RelatedField        #ItemId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MCRPostageGroup
        PROPERTIES
          Name                #MCRPostageGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #248
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #249
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PDSCalculationTable
        PROPERTIES
          Name                #PDSCalculationTable
          Table               #PDSCalculationTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PDSCalculationId
            RelatedField        #CalculationId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PriceDiscAdmTable
        PROPERTIES
          Name                #PriceDiscAdmTable
          Table               #PriceDiscAdmTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Composition
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #JournalNum
            RelatedField        #JournalNum
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PriceDiscTable
        PROPERTIES
          Name                #PriceDiscTable
          Table               #PriceDiscTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PriceDiscTableRef
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchEndGroup
        PROPERTIES
          Name                #PurchEndGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchEndGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #3
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #3
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #ItemCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchLineGroup
        PROPERTIES
          Name                #PurchLineGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchLineGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #ItemCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchMultiGroup
        PROPERTIES
          Name                #PurchMultiGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchMultiGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #2
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #ItemCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchPriceGroup
        PROPERTIES
          Name                #PurchPriceGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchPriceGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #ItemCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesEndGroup
        PROPERTIES
          Name                #SalesEndGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SalesEndGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #3
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #7
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #ItemCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesLineGroup
        PROPERTIES
          Name                #SalesLineGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SalesLineGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #5
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #ItemCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesMultiGroup
        PROPERTIES
          Name                #SalesMultiGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SalesMultiGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #6
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #ItemCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesPriceGroup
        PROPERTIES
          Name                #SalesPriceGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #SalesPriceGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #4
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #ItemCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #UnitId
        PROPERTIES
          Name                #UnitId
          Table               #UnitOfMeasure
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #UnitId
            RelatedField        #Symbol
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendEndGroup
        PROPERTIES
          Name                #VendEndGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendEndGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #3
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #3
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendLineGroup
        PROPERTIES
          Name                #VendLineGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendLineGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendMultiGroup
        PROPERTIES
          Name                #VendMultiGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendMultiGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
            Value               #2
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendPriceGroup
        PROPERTIES
          Name                #VendPriceGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendPriceGroup
          Role                #PriceDiscAdmTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Type
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #relation
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTable
        PROPERTIES
          Name                #VendTable
          Table               #VendTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #Module
            Value               #2
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PriceDiscAdmTrans
            Field               #AccountCode
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AccountRelation
            RelatedField        #AccountNum
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #RetailPriceDiscAdmTrans(PriceDiscAdmTrans)
      PROPERTIES
        Table               #RetailPriceDiscAdmTrans
        DeleteAction        #Cascade
        Relation            #PriceDiscAdmTrans
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #amountQuantitiesOverlap
        #boolean amountQuantitiesOverlap(PriceDiscAdmTrans _priceDiscAdmTrans)
        #{
        #
        #    boolean isOverlap = false;
        #
        #    if (!this.QuantityAmountTo && !_priceDiscAdmTrans.QuantityAmountTo)
        #    {
        #        isOverlap = true;
        #    }
        #    else if (this.QuantityAmountTo)
        #    {
        #        isOverlap = _priceDiscAdmTrans.QuantityAmountFrom < this.QuantityAmountTo
        #            && (!_priceDiscAdmTrans.QuantityAmountTo || _priceDiscAdmTrans.QuantityAmountTo > this.QuantityAmountFrom);
        #    }
        #    else
        #    {
        #        isOverlap = this.QuantityAmountFrom < _priceDiscAdmTrans.QuantityAmountTo;
        #    }
        #
        #    return isOverlap;
        #
        #}
      ENDSOURCE
      SOURCE #canEditPriceDiscValueField
        #/// <summary>
        #/// Checks whether the trade agreement value-related fields can be modified.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The ID of the field to check.
        #/// </param>
        #/// <returns>
        #/// true if the field in question can be modified; otherwise, false.
        #/// </returns>
        #/// <exception cref="M:Exception::Error">
        #/// The field ID is unknown.
        #/// </exception>
        #public boolean canEditPriceDiscValueField(RefFieldId _fieldId)
        #{
        #    boolean ret;
        #
        #    switch(this.Relation)
        #    {
        #        case PriceType::PricePurch :
        #        case PriceType::PriceSales :
        #
        #                switch(_fieldId)
        #                {
        #                    case fieldNum(PriceDiscAdmTrans, Percent1) :
        #                    case fieldNum(PriceDiscAdmTrans, Percent2) :
        #                        ret = false;
        #                        break;
        #
        #                    case fieldNum(PriceDiscAdmTrans, Markup)            :
        #                    case fieldNum(PriceDiscAdmTrans, PriceUnit)         :
        #                    case fieldNum(PriceDiscAdmTrans, DeliveryTime)      :
        #                    case fieldNum(PriceDiscAdmTrans, DisregardLeadTime) :
        #                        ret = true;
        #                        break;
        #
        #                    default :
        #                        throw error(Error::wrongUseOfFunction(funcName()));
        #                }
        #            break;
        #
        #        default :
        #            switch(_fieldId)
        #            {
        #                case fieldNum(PriceDiscAdmTrans, Percent1) :
        #                case fieldNum(PriceDiscAdmTrans, Percent2) :
        #                    ret = true;
        #                    break;
        #
        #                case fieldNum(PriceDiscAdmTrans, Markup)            :
        #                case fieldNum(PriceDiscAdmTrans, PriceUnit)         :
        #                case fieldNum(PriceDiscAdmTrans, DeliveryTime)      :
        #                case fieldNum(PriceDiscAdmTrans, DisregardLeadTime) :
        #                    ret = false;
        #                    break;
        #
        #                default :
        #                        throw error(Error::wrongUseOfFunction(funcName()));
        #            }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkAccountCode
        #boolean  checkAccountCode()
        #{
        #    if (!PriceDiscTable::activationPossible(this.Relation, this.AccountCode, this.ItemCode))
        #        return checkFailed("@SYS14785");
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkAccountRelation
        #boolean  checkAccountRelation()
        #{
        #    boolean  oK = true;
        #
        #    switch(this.AccountCode)
        #    {
        #        case TableGroupAll::Table   :   if (! (this.module() == ModuleInventCustVend::Cust ? (CustTable::exist(this.AccountRelation))
        #                                                                                           : (VendTable::exist(this.AccountRelation))))
        #                                                oK = checkFailed("@SYS4000121");
        #                                        break;
        #
        #        case TableGroupAll::GroupId :   if (! PriceDiscGroup::exist(this.module(),
        #                                                                    this.priceGroupType(),
        #                                                                    this.AccountRelation))
        #                                        {
        #                                            oK = checkFailed("@SYS4000121");
        #                                        }
        #
        #                                        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #                                        {
        #                                            if (this.relation == PriceType::PriceSales && CatalogManager::isSnapshottedPublishedCatalogRelated(PriceDiscGroup::find(ModuleInventCustVend::Cust, PriceGroupType::PriceGroup, this.AccountRelation)))
        #                                            {
        #                                                oK = checkFailed(strFmt("@SYS4009512", this.AccountRelation));
        #                                            }
        #                                        }
        #                                        break;
        #
        #        case TableGroupAll::All     :   if (this.AccountRelation)
        #                                            oK = checkFailed("@SYS4000121");
        #                                        break;
        #    }
        #
        #    return oK;
        #}
      ENDSOURCE
      SOURCE #checkAgreement_RU
        #private boolean checkAgreement_RU()
        #{
        #    SalesAgreementHeader salesAgreementHeader;
        #    PurchAgreementHeader purchAgreementHeader;
        #    CustVendAC           custVendAccount;
        #    boolean              ok = true;
        #
        #    if (this.AgreementHeaderExt_RU)
        #    {
        #        if (this.AccountCode != TableGroupAll::Table)
        #        {
        #            ok = checkFailed("@SYS17074");
        #        }
        #        else
        #        {
        #            switch (this.module())
        #            {
        #                case ModuleInventCustVend::Cust:
        #                    salesAgreementHeader = SalesAgreementHeaderExt_RU::salesAgreementHeader(this.AgreementHeaderExt_RU);
        #
        #                    custVendAccount = salesAgreementHeader.CustAccount;
        #
        #                    if (!salesAgreementHeader.canReleaseAgreement())
        #                    {
        #                        ok = checkFailed("@SYS103075");
        #                    }
        #                    break;
        #                case ModuleInventCustVend::Vend:
        #                    purchAgreementHeader = PurchAgreementHeaderExt_RU::purchAgreementHeader(this.AgreementHeaderExt_RU);
        #
        #                    custVendAccount = purchAgreementHeader.VendAccount;
        #
        #                    if (!purchAgreementHeader.canReleaseAgreement())
        #                    {
        #                        ok = checkFailed("@SYS103075");
        #                    }
        #                    break;
        #            }
        #
        #            if (this.AccountRelation != custVendAccount)
        #            {
        #                ok = checkFailed("@SYS17074");
        #            }
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkAmount
        #/// <summary>
        #/// OBSOLETE: This method is obsolete and will be removed.
        #/// </summary>
        #/// <returns>
        #/// Returns true
        #/// </returns>
        #[SysObsoleteAttribute('Unused method removed in AX 2012 R2', false)]
        #boolean  checkAmount()
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkAmountQuantity
        #boolean checkAmountQuantity()
        #{
        #
        #    boolean  ok = true;
        #    ;
        #
        #    if ((this.QuantityAmountTo < 0) || (this.QuantityAmountFrom < 0))
        #    {
        #        ok = checkFailed("@SYS134947");
        #    }
        #    else if (this.QuantityAmountTo && this.QuantityAmountFrom  >= this.QuantityAmountTo)
        #    {
        #        ok = checkFailed("@SYS134949");
        #    }
        #
        #    return ok;
        #
        #}
      ENDSOURCE
      SOURCE #checkCurrency
        #boolean checkCurrency()
        #{
        #    boolean    ok = true;
        #
        #    if (this.Currency)
        #    {
        #        if (!Currency::exist(this.Currency))
        #        {
        #            ok = checkFailed(strFmt("@SYS1458", this.Currency));
        #        }
        #    }
        #    else
        #    {
        #        ok = checkFailed("@SYS23229");
        #    }
        #
        #
        #    return ok;
        #
        #
        #}
        #
      ENDSOURCE
      SOURCE #checkDate
        #boolean  checkDate()
        #{
        #    boolean  ok = true;
        #    ;
        #
        #    if (this.ToDate  < this.FromDate)
        #    {
        #        if (this.ToDate)
        #        {
        #            ok = checkFailed("@SYS16982");
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkForGaps
        #//The functionality done by this method has been reconstructed and included in the newly introduced checkForOverlapsAndGaps method on the PriceDiscAdmCheckPost class.
        #public void checkForGaps(PriceDiscJournalNum _journalNum, PriceDiscAdmTrans _priceDiscAdmTrans)
        #{
        #
        #}
      ENDSOURCE
      SOURCE #checkItemCode
        #boolean  checkItemCode()
        #{
        #    if (!PriceDiscTable::activationPossible(this.Relation, this.AccountCode, this.ItemCode))
        #        return checkFailed("@SYS14785");
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkItemRelation
        #boolean  checkItemRelation()
        #{
        #    boolean         ok     = true;
        #    ;
        #
        #    switch(this.priceGroupType())
        #    {
        #        case PriceGroupType::MultiLineDiscGroup     :   if (this.ItemCode == 0)
        #                                                            ok = checkFailed("@SYS14785");
        #                                                        break;
        #
        #        case PriceGroupType::EndDiscGroup           :   if (this.ItemCode <  2)
        #                                                            ok = checkFailed("@SYS14785");
        #                                                        break;
        #    }
        #
        #
        #    switch(this.ItemCode)
        #    {
        #        case TableGroupAll::Table       :   if (! InventTable::exist(this.ItemRelation))
        #                                                ok = checkFailed("@SYS4004583");
        #                                            break;
        #
        #        case TableGroupAll::GroupId     :   if (! PriceDiscGroup::exist(ModuleInventCustVend::Invent,
        #                                                                        this.priceGroupType(),
        #                                                                        this.ItemRelation))
        #                                            {
        #                                                ok = checkFailed("@SYS4004583");
        #                                            }
        #                                            break;
        #
        #        case TableGroupAll::All         :   if (this.ItemRelation)
        #                                                ok = checkFailed("@SYS4004583");
        #                                            break;
        #    }
        #
        #    return ok;
        #}
        #
        #
      ENDSOURCE
      SOURCE #checkOverlaps
        #//'The functionality done by this method has been reconstructed and included in the newly introduced checkForOverlapsAndGaps method on the PriceDiscAdmCheckPost class.'
        #boolean checkOverlaps()
        #{
        #    return false;
        #}
      ENDSOURCE
      SOURCE #checkPriceDiscRelation
        #boolean checkPriceDiscRelation()
        #{
        #    boolean    ok = true;
        #
        #    if (this.PriceDiscTableRef)
        #    {
        #        if (!PriceDiscTable::findRecId(this.PriceDiscTableRef).RecId)
        #        {
        #            ok = checkFailed("@SYS58996");
        #        }
        #    }
        #
        #    return ok;
        #
        #
        #}
      ENDSOURCE
      SOURCE #checkProductDimensions
        #boolean  checkProductDimensions()
        #{
        #    InventDim       inventDim;
        #    boolean         ok     = true;
        #
        #    inventDim = this.inventDim();
        #
        #    switch(this.ItemCode)
        #    {
        #        case TableGroupAll::Table       :
        #            ok = inventDim.validateWriteProductDimensions(this.ItemRelation,false);
        #            break;
        #
        #        case TableGroupAll::GroupId     :
        #            break;
        #
        #        case TableGroupAll::All         :
        #            break;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkUnitId
        #boolean checkUnitId()
        #{
        #    boolean    ok = true;
        #
        #    if (this.UnitId)
        #    {
        #        if (!UnitOfMeasure::find(UnitOfMeasure::unitOfMeasureIdBySymbol(this.UnitId)))
        #        {
        #            ok = checkFailed(strFmt("@SYS4108", this.UnitId));
        #        }
        #    }
        #
        #    return ok;
        #
        #
        #}
        #
      ENDSOURCE
      SOURCE #dateRangesOverlap
        #/// <summary>
        #///     Determines whether the date of the current PriceDiscAdmTrans record
        #/// overlaps with the date of the <paramref name="_priceDiscAdmTrans" />.
        #/// </summary>
        #/// <param name="_priceDiscAdmTrans">
        #///     The PriceDiscAdmTrans record will be checked with the current record.
        #/// </param>
        #/// <returns>
        #///     true if the dates are overlapping;
        #///     otherwise, false.
        #/// </returns>
        #boolean dateRangesOverlap(PriceDiscAdmTrans _priceDiscAdmTrans)
        #{
        #
        #    boolean isOverlap = false;
        #    if (!this.ToDate && !_priceDiscAdmTrans.ToDate)
        #    {
        #        isOverlap = true;
        #    }
        #    else if (this.ToDate)
        #    {
        #        isOverlap = _priceDiscAdmTrans.FromDate < this.ToDate
        #            && (!_priceDiscAdmTrans.ToDate || _priceDiscAdmTrans.ToDate > this.FromDate);
        #    }
        #    else
        #    {
        #        isOverlap = this.FromDate < _priceDiscAdmTrans.ToDate;
        #    }
        #
        #    return isOverlap;
        #
        #}
      ENDSOURCE
      SOURCE #errorExist
        #//BP Deviation documented
        #display Integer errorExist()
        #{
        #    #ResAppl
        #    if (this.Log && !this.MustBeDeleted)
        #    {
        #        return #Image_JournalLogTransError;
        #    }
        #    else if (this.Log && this.MustBeDeleted)
        #    {
        #        return #Image_JournalLogTransInfo;
        #    }
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #initFromAccountCode
        #void initFromAccountCode()
        #{
        #    VendTable   vendTable;
        #    CustTable   custTable;
        #
        #    if (this.AccountCode != TableGroupAll::Table)
        #        return;
        #
        #    // <GEERU>
        #    this.AgreementHeaderExt_RU = 0;
        #    // </GEERU>
        #
        #    if (this.Relation == PriceType::PricePurch         || this.Relation == PriceType::LineDiscPurch ||
        #        this.Relation == PriceType::MultiLineDiscPurch || this.Relation == PriceType::EndDiscPurch)
        #    {
        #        vendTable = VendTable::find(this.AccountRelation);
        #        this.Currency = vendTable.Currency;
        #        return;
        #    }
        #
        #    if (this.Relation == PriceType::PriceSales         || this.Relation == PriceType::LineDiscSales ||
        #        this.Relation == PriceType::MultiLineDiscSales || this.Relation == PriceType::EndDiscSales)
        #    {
        #        custTable = CustTable::find(this.AccountRelation);
        #        this.Currency = custTable.Currency;
        #        return;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromItemCode
        #void initFromItemCode()
        #{
        #    InventTable inventTable;
        #    ;
        #
        #    if (this.ItemCode != TableGroupAll::Table)
        #        return;
        #
        #    if (this.UnitId  &&  this.ItemRelation == this.orig().ItemRelation)
        #        return;
        #
        #    inventTable = InventTable::find(this.ItemRelation);
        #
        #    if (this.Relation == PriceType::PricePurch         || this.Relation == PriceType::LineDiscPurch ||
        #        this.Relation == PriceType::MultiLineDiscPurch || this.Relation == PriceType::EndDiscPurch)
        #    {
        #        this.UnitId =  inventTable.purchUnitId();
        #        return;
        #    }
        #
        #    if (this.Relation == PriceType::PriceSales         || this.Relation == PriceType::LineDiscSales ||
        #        this.Relation == PriceType::MultiLineDiscSales || this.Relation == PriceType::EndDiscSales)
        #    {
        #        this.UnitId =  inventTable.salesUnitId();
        #        return;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPriceDiscAdmTrans
        #/// <summary>
        #/// Initiates the current table buffer by using the specified table buffer.
        #/// </summary>
        #/// <param name="_priceDiscAdmTrans">
        #/// A <c>PriceDiscAdmTrans</c> table buffer.
        #/// </param>
        #public void initFromPriceDiscAdmTrans(PriceDiscAdmTrans _priceDiscAdmTrans)
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #    this.AccountCode           = _priceDiscAdmTrans.AccountCode;
        #    this.AccountRelation       = _priceDiscAdmTrans.AccountRelation;
        #    this.Agreement             = _priceDiscAdmTrans.Agreement;
        #    this.AllocateMarkup        = _priceDiscAdmTrans.AllocateMarkup;
        #    this.Amount                = _priceDiscAdmTrans.Amount;
        #    this.CalendarDays          = _priceDiscAdmTrans.CalendarDays;
        #    this.Currency              = _priceDiscAdmTrans.Currency;
        #    this.DeliveryTime          = _priceDiscAdmTrans.DeliveryTime;
        #    this.FromDate              = _priceDiscAdmTrans.FromDate;
        #    this.GenericCurrency       = _priceDiscAdmTrans.GenericCurrency;
        #    this.InventDimId           = _priceDiscAdmTrans.InventDimId;
        #    this.ItemCode              = _priceDiscAdmTrans.ItemCode;
        #    this.ItemRelation          = _priceDiscAdmTrans.ItemRelation;
        #    this.JournalNum            = _priceDiscAdmTrans.JournalNum;
        #    this.Markup                = _priceDiscAdmTrans.Markup;
        #    this.Module                = _priceDiscAdmTrans.Module;
        #    this.Percent1              = _priceDiscAdmTrans.Percent1;
        #    this.Percent2              = _priceDiscAdmTrans.Percent2;
        #    this.PriceUnit             = _priceDiscAdmTrans.PriceUnit;
        #    this.QuantityAmountFrom    = _priceDiscAdmTrans.QuantityAmountFrom;
        #    this.QuantityAmountTo      = _priceDiscAdmTrans.QuantityAmountTo;
        #    this.Relation              = _priceDiscAdmTrans.Relation;
        #    this.SearchAgain           = _priceDiscAdmTrans.SearchAgain;
        #    this.ToDate                = _priceDiscAdmTrans.ToDate;
        #    this.UnitId                = _priceDiscAdmTrans.UnitId;
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        this.AgreementHeaderExt_RU = _priceDiscAdmTrans.AgreementHeaderExt_RU;
        #    }
        #    // </GEERU>
        #
        #    // <GIN>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #    {
        #        this.MaximumRetailPrice_IN = _priceDiscAdmTrans.MaximumRetailPrice_IN;
        #    }
        #    // </GIN>
        #
        #}
      ENDSOURCE
      SOURCE #initFromPriceDiscTable
        #/// <summary>
        #///     Initiates a <c>PriceDiscAdmTrans</c> record from a <c>PriceDiscTable</c> record.
        #/// </summary>
        #/// <param name="_priceDiscTable">
        #///     A <c>PriceDiscTable</c> record buffer.
        #/// </param>
        #public void initFromPriceDiscTable(PriceDiscTable _priceDiscTable)
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #
        #    this.AccountCode            = _priceDiscTable.AccountCode;
        #    this.AccountRelation        = _priceDiscTable.AccountRelation;
        #    this.Agreement              = _priceDiscTable.Agreement;
        #    this.AllocateMarkup         = _priceDiscTable.AllocateMarkup;
        #    this.Amount                 = _priceDiscTable.Amount;
        #    this.Currency               = _priceDiscTable.Currency;
        #    this.GenericCurrency        = _priceDiscTable.GenericCurrency;
        #    this.CalendarDays           = _priceDiscTable.CalendarDays;
        #    this.DeliveryTime           = _priceDiscTable.DeliveryTime;
        #    this.DisregardLeadTime      = _priceDiscTable.DisregardLeadTime;
        #    this.FromDate               = _priceDiscTable.FromDate;
        #    this.ItemCode               = _priceDiscTable.ItemCode;
        #    this.ItemRelation           = _priceDiscTable.ItemRelation;
        #    this.Markup                 = _priceDiscTable.Markup;
        #    this.Module                 = _priceDiscTable.Module;
        #    this.Percent1               = _priceDiscTable.Percent1;
        #    this.Percent2               = _priceDiscTable.Percent2;
        #    this.PriceDiscTableRef      = _priceDiscTable.RecId;
        #    this.PriceUnit              = _priceDiscTable.PriceUnit;
        #    this.QuantityAmountFrom     = _priceDiscTable.QuantityAmountFrom;
        #    this.QuantityAmountTo       = _priceDiscTable.QuantityAmountTo;
        #    this.Relation               = _priceDiscTable.Relation;
        #    this.SearchAgain            = _priceDiscTable.SearchAgain;
        #    this.ToDate                 = _priceDiscTable.ToDate;
        #    this.UnitId                 = _priceDiscTable.UnitId;
        #    this.InventDimId            = _priceDiscTable.InventDimId;
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        this.AgreementHeaderExt_RU = _priceDiscTable.AgreementHeaderExt_RU;
        #    }
        #    // </GEERU>
        #
        #    // <GIN>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #    {
        #        this.MaximumRetailPrice_IN = _priceDiscTable.MaximumRetailPrice_IN;
        #    }
        #    // </GIN>
        #
        #}
      ENDSOURCE
      SOURCE #initMaximumRetailPrice_IN
        #/// <summary>
        #/// Initialize the "MaximumRetailPrice_IN" field based on item master if needed.
        #/// </summary>
        #/// <remarks>
        #/// The "MaximumRetailPrice_IN" field should be set to ZERO, if the "relation" field
        #/// is NOT set to any of the below values,
        #///  - Price (sales)
        #///  - Price (purch)
        #/// </remarks>
        #// <GIN>
        #private void initMaximumRetailPrice_IN()
        #{
        #    InventTableModule   inventTableModule;
        #
        #    if (this.relation == PriceType::PriceSales)
        #    {
        #        inventTableModule = InventTableModule::find(
        #            this.ItemRelation,
        #            ModuleInventPurchSales::Sales);
        #    }
        #    else if (this.relation == PriceType::PricePurch)
        #    {
        #        inventTableModule = InventTableModule::find(
        #            this.ItemRelation,
        #            ModuleInventPurchSales::Purch);
        #    }
        #
        #    this.MaximumRetailPrice_IN = inventTableModule.MaximumRetailPrice_IN;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #initValue
        #/// <summary>
        #///     Initializing the Price and Discount record.
        #/// </summary>
        #/// <remarks>
        #///     Price unit is set to 1 until the user changes it to something else.
        #///     Disregard sales lead time is set to Yes until the user changes it to something else.
        #/// </remarks>
        #public void initValue()
        #{
        #    super();
        #
        #    this.PriceUnit          = 1;
        #    this.DisregardLeadTime  = NoYes::Yes;
        #}
      ENDSOURCE
      SOURCE #insert
        #void  insert()
        #{
        #    // MP
        #    InventTableModule       inventTable;
        #
        #    select Price from inventTable
        #        where inventTable.ItemId == this.ItemRelation;
        #
        #    if (this.Amount < inventTable.Price)
        #    {
        #        this.UnderCost = NoYesCombo::Yes;
        #    }
        #
        #    else
        #    {
        #        this.UnderCost = NoYesCombo::No;
        #    }
        #
        #    //PriceDiscAdmTrans_ds.refresh();
        #    // MP
        #
        #    this.preWrite();
        #
        #    this.Module = this.module();
        #
        #    //Modifying this method be aware in \Classes\PriceDiscAdmCheckPost\postJournal execution is disabled by calling priceDiscTable.skipDataMethods(true).
        #    super();
        #}
      ENDSOURCE
      SOURCE #inventDim
        #InventDim inventDim(boolean  update = false)
        #{
        #    return InventDim::find(this.InventDimId, update);
        #}
        #
      ENDSOURCE
      SOURCE #isDiscAdmTransChanged
        #//BP Deviation Documented
        #display client Integer isDiscAdmTransChanged()
        #{
        #    #ResAppl
        #
        #    if (this.DifferentFromPosted || !this.PriceDiscTableRef)
        #    {
        #        return #ImageInfo;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #itemId
        #ItemId itemId()
        #{
        #    if (this.ItemCode == TableGroupAll::Table)
        #        return this.ItemRelation;
        #
        #    return '';
        #}
      ENDSOURCE
      SOURCE #jumpRefAgreement_RU
        #/// <summary>
        #/// Jump to the the agreements.
        #/// </summary>
        #public void jumpRefAgreement_RU()
        #{
        #    switch(this.Module)
        #    {
        #        case ModuleInventCustVend::Cust:
        #            SalesAgreementHeaderExt_RU::salesAgreementJumpRef(this.AgreementHeaderExt_RU);
        #            break;
        #        case ModuleInventCustVend::Vend:
        #            PurchAgreementHeaderExt_RU::purchAgreementJumpRef(this.AgreementHeaderExt_RU);
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #lookupAgreement_RU
        #/// <summary>
        #/// Creates the agreements lookup.
        #/// </summary>
        #/// <param name="_callingControl">
        #/// The control for which lookup will be created.
        #/// </param>
        #/// <returns>
        #///    The <c>AgreementHeaderExt_RU</c> record that is selected in the lookup.
        #/// </returns>
        #public AgreementHeaderExt_RU lookupAgreement_RU(FormReferenceControl _callingControl)
        #{
        #    AgreementHeaderExt_RU selectedRecord;
        #
        #    switch(this.Module)
        #    {
        #        case ModuleInventCustVend::Cust:
        #            selectedRecord = SalesAgreementHeaderExt_RU::salesAgreementReferenceLookup(_callingControl, this.AccountRelation);
        #            break;
        #        case ModuleInventCustVend::Vend:
        #            selectedRecord = PurchAgreementHeaderExt_RU::purchAgreementReferenceLookup(_callingControl, this.AccountRelation);
        #            break;
        #    }
        #
        #    return selectedRecord;
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #public void modifiedField(FieldId _fieldId)
        #{
        #    // <GIN>
        #    #ISOCountryRegionCodes
        #    // </GIN>
        #
        #    super(_fieldId);
        #
        #    this.DifferentFromPosted = NoYes::Yes;
        #
        #    switch (_fieldId)
        #    {
        #        case fieldNum(PriceDiscAdmTrans,ItemCode):
        #            if (this.ItemCode == TableGroupAll::All)
        #            {
        #                this.ItemRelation = '';
        #            }
        #            // <GIN>
        #            if (this.ItemCode != TableGroupAll::Table)
        #            {
        #                this.MaximumRetailPrice_IN = 0;
        #            }
        #            // </GIN>
        #            break;
        #
        #        case fieldNum(PriceDiscAdmTrans,AccountCode):
        #            if (this.AccountCode == TableGroupAll::All)
        #            {
        #                this.AccountRelation = '';
        #            }
        #            // <GEERU>
        #            this.AgreementHeaderExt_RU = 0;
        #            // </GEERU>
        #            break;
        #
        #        case fieldNum(PriceDiscAdmTrans,ItemRelation):
        #            this.initFromItemCode();
        #            // <GIN>
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #            {
        #                this.initMaximumRetailPrice_IN();
        #            }
        #            // </GIN>
        #            break;
        #
        #        case fieldNum(PriceDiscAdmTrans,AccountRelation):
        #            this.initFromAccountCode();
        #            break;
        #
        #        case fieldNum(PriceDiscAdmTrans,Relation):
        #            this.Module = this.Relation < PriceType::PriceSales ? ModuleInventCustVend::Vend : ModuleInventCustVend::Cust;
        #            this.resetPriceDiscValueFields();
        #            // <GIN>
        #            if (this.relation != PriceType::PricePurch &&
        #                this.relation != PriceType::PriceSales)
        #            {
        #                this.MaximumRetailPrice_IN = 0;
        #            }
        #            // </GIN>
        #            break;
        #        case fieldNum(PriceDiscAdmTrans, QuantityAmountFrom):
        #        case fieldNum(PriceDiscAdmTrans, QuantityAmountTo):
        #            this.roundQty(_fieldId);
        #            break;
        #
        #        case fieldNum(PriceDiscAdmTrans, UnitId):
        #            this.roundQty(fieldNum(PriceDiscAdmTrans, QuantityAmountFrom));
        #            this.roundQty(fieldNum(PriceDiscAdmTrans, QuantityAmountTo));
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #module
        #ModuleInventCustVend  module()
        #{
        #    return this.Relation < PriceType::PriceSales ? ModuleInventCustVend::Vend
        #                                                 : ModuleInventCustVend::Cust;
        #}
      ENDSOURCE
      SOURCE #preWrite
        #/// <summary>
        #/// Update some fields based on AccountCode and ItemCode, pre-write.
        #/// </summary>
        #void preWrite()
        #{
        #    if (this.AccountCode == TableGroupAll::All)
        #    {
        #        this.AccountRelation = '';
        #    }
        #
        #    if (this.ItemCode == TableGroupAll::All)
        #    {
        #        this.ItemRelation   = '';
        #        this.UnitId         = '';
        #        this.InventDimId    = InventDim::inventDimIdBlank();
        #    }
        #
        #    if (this.ItemCode != TableGroupAll::Table)
        #    {
        #        this.UnitId         = '';
        #        this.InventDimId    = InventDim::inventDimIdBlank();
        #    }
        #
        #    //Modifying this method be aware in \Classes\PriceDiscAdmCheckPost\postJournal execution is disabled by calling priceDiscTable.skipDataMethods(true).
        #}
        #
      ENDSOURCE
      SOURCE #priceGroupType
        #// D20970
        #PriceGroupType priceGroupType()
        #{
        #    PriceGroupType  priceGroupType;
        #
        #    switch (this.relation)
        #    {
        #        case PriceType::PricePurch:
        #        case PriceType::PriceSales:
        #            PriceGroupType = PriceGroupType::PriceGroup;
        #            break;
        #
        #        case PriceType::LineDiscPurch:
        #        case PriceType::LineDiscSales:
        #            priceGroupType = PriceGroupType::LineDiscGroup;
        #            break;
        #
        #        case PriceType::MultiLineDiscPurch:
        #        case PriceType::MultiLineDiscSales:
        #            priceGroupType = PriceGroupType::MultiLineDiscGroup;
        #            break;
        #
        #        case PriceType::EndDiscPurch:
        #        case PriceType::EndDiscSales:
        #            priceGroupType = PriceGroupType::EndDiscGroup;
        #            break;
        #
        #        case PriceType::MCRPostageDisc:
        #            priceGroupType = PriceGroupType::MCRPostageDisc;
        #            break;
        #    }
        #
        #    return(priceGroupType);
        #}
      ENDSOURCE
      SOURCE #resetPriceDiscValueFields
        #/// <summary>
        #/// Resets the trade agreement value-related fields, depending on the current ability to modify each
        #/// field.
        #/// </summary>
        #public void resetPriceDiscValueFields()
        #{
        #    this.Percent1       = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Percent1))     ? this.Percent1        : 0;
        #    this.Percent2       = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Percent2))     ? this.Percent2        : 0;
        #    this.Markup         = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Markup))       ? this.Markup          : 0;
        #    this.PriceUnit      = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, PriceUnit))    ? this.PriceUnit       : 1;
        #    this.DeliveryTime   = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, DeliveryTime)) ? this.DeliveryTime    : 0;
        #    this.CalendarDays   = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, DeliveryTime)) ? this.CalendarDays    : NoYes::No;
        #}
      ENDSOURCE
      SOURCE #roundQty
        #/// <summary>
        #/// Rounds the passed field according to Unit of Measure decimal precision of the trade agreement,
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field to be rounded.
        #/// </param>
        #private void roundQty(FieldId _fieldId)
        #{
        #    if (this.UnitId && !(this.relation == PriceType::EndDiscPurch || this.relation == PriceType::EndDiscSales))
        #    {
        #        this.(_fieldId) = decRound(this.(_fieldId), UnitOfMeasure::unitOfMeasureDecimalPrecision(UnitOfMeasure::unitOfMeasureIdBySymbol(this.UnitId)));
        #    }
        #}
      ENDSOURCE
      SOURCE #update
        #void  update()
        #{
        #    // MP
        #    InventTableModule       inventTable;
        #
        #    select Price from inventTable
        #        where inventTable.ItemId == this.ItemRelation;
        #
        #    if (this.Amount < inventTable.Price)
        #    {
        #        this.UnderCost = NoYesCombo::Yes;
        #    }
        #
        #    else
        #    {
        #        this.UnderCost = NoYesCombo::No;
        #    }
        #
        #    //PriceDiscAdmTrans_ds.refresh();
        #    // MP
        #
        #    this.preWrite();
        #
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #
        #    if((this.orig().UnitId != this.UnitId ||
        #        this.orig().Currency != this.Currency ||
        #        this.orig().PriceUnit != this.PriceUnit) &&
        #        SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) &&
        #        RetailPriceDiscAdmTrans::findByPriceDiscAdmTrans(this.RecId))
        #    {
        #        RetailPriceDiscAddDataSaver::convertPrice(this.orig(), this);
        #    }
        #    // </GEERU>
        #
        #    //Modifying this method be aware in \Classes\PriceDiscAdmCheckPost\postJournal execution is disabled by calling priceDiscTable.skipDataMethods(true).
        #    super();
        #}
        #
      ENDSOURCE
      SOURCE #validateField
        #boolean  validateField(FieldId  fieldId)
        #{
        #    boolean  ok = true;
        #    ;
        #
        #    ok = super(fieldId);
        #
        #    switch(fieldId)
        #    {
        #        case(fieldNum(PriceDiscAdmTrans, FromDate))        :   ok = this.checkDate();
        #                                                                  break;
        #        case(fieldNum(PriceDiscAdmTrans, ToDate))          :   ok = this.checkDate();
        #                                                                  break;
        #        case(fieldNum(PriceDiscAdmTrans, ItemRelation))    :   ok = this.checkItemRelation();
        #                                                                  break;
        #        case(fieldNum(PriceDiscAdmTrans, AccountRelation)) :   ok = this.checkAccountRelation();
        #                                                                  break;
        #        // <GEERU>
        #        case(fieldNum(PriceDiscAdmTrans, AgreementHeaderExt_RU))  :   ok = this.checkAgreement_RU();
        #                                                                  break;
        #        // </GEERU>
        #        case(fieldNum(PriceDiscAdmTrans, PDSCalculationId)) :
        #            ok = ok && PDSAdvancedPricing_Validator::validateCalculationElementId(this.PDSCalculationId);
        #            break;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #boolean  validateWrite()
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #    boolean  ok = true;
        #
        #    ok = super();
        #
        #    if (! this.checkDate())
        #        ok = false;
        #
        #    if (! this.checkAmountQuantity())
        #        ok = false;
        #
        #    if (! this.checkItemRelation())
        #        ok = false;
        #
        #    if (! this.checkProductDimensions())
        #        ok = false;
        #
        #    if (! this.checkAccountRelation())
        #        ok = false;
        #
        #    if (! this.checkItemCode())
        #        ok = false;
        #
        #    if (! this.checkAccountCode())
        #        ok = false;
        #
        #    if (! this.checkPriceDiscRelation())
        #        ok = false;
        #
        #    if (! this.checkCurrency())
        #        ok = false;
        #
        #    if (! this.checkUnitId())
        #        ok = false;
        #
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        if (! this.checkAgreement_RU())
        #            ok = false;
        #    }
        #    // </GEERU>
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #createFromTmpProductAndVariants
        #/// <summary>
        #/// Create multiple journal lines.
        #/// </summary>
        #/// <param name="_journalNum">
        #/// Journal num.
        #/// </param>
        #/// <param name="_tmpProductTable">
        #/// Products and variants to add to the journal lines.
        #/// </param>
        #public static void createFromTmpProductAndVariants(PriceDiscJournalNum _journalNum, TmpRetailProductsToAdd _tmpProductTable)
        #{
        #    PriceDiscAdmTable admTable;
        #    container productsPacked;
        #
        #    admTable = PriceDiscAdmTable::find(_journalNum);
        #
        #    if (!admTable)
        #    {
        #        warning(strFmt("@SYS21496", _journalNum));
        #    }
        #    else if (admTable.canUpdateLines(true))
        #    {
        #        productsPacked = TmpRetailProductsToAdd::pack(_tmpProductTable);
        #
        #        PriceDiscAdmTrans::createFromTmpProductAndVariantsOnServer(_journalNum, productsPacked);
        #    }
        #}
      ENDSOURCE
      SOURCE #createFromTmpProductAndVariantsOnServer
        #/// <summary>
        #/// Create multiple product/variant journal lines on server
        #/// </summary>
        #/// <param name="_journalNum">
        #/// Journal number.
        #/// </param>
        #/// <param name="_products">
        #/// <c>TmpRetailProductsToAdd</c> in a container.
        #/// </param>
        #public server static void createFromTmpProductAndVariantsOnServer(PriceDiscJournalNum _journalNum, container _products)
        #{
        #    PriceDiscAdmTable admTable;
        #    PriceDiscAdmTrans admTrans;
        #    CurrencyCode currencyCode;
        #    TmpRetailProductsToAdd productsToAdd;
        #
        #    admTable = PriceDiscAdmTable::find(_journalNum);
        #
        #    if (!admTable)
        #    {
        #        warning(strFmt("@SYS21496", _journalNum));
        #    }
        #    else if (admTable.canUpdateLines(true))
        #    {
        #        productsToAdd = TmpRetailProductsToAdd::unpack(_products);
        #        currencyCode = CompanyInfo::standardCurrency();
        #
        #        while select productsToAdd
        #        {
        #            admTrans.clear();
        #            admTrans.initValue();
        #            admTrans.JournalNum = _journalNum;
        #            admTrans.relation = admTable.DefaultRelation;
        #            admTrans.AccountCode = TableGroupAll::All;
        #            admTrans.ItemCode = TableGroupAll::Table;
        #            admTrans.ItemRelation = productsToAdd.ItemId;
        #            admTrans.InventDimId = productsToAdd.InventDim;
        #            admTrans.initFromItemCode();
        #            admTrans.Currency = currencyCode;
        #
        #            admTrans.insert();
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #existDeleteMarked
        #/// <summary>
        #/// Determines whether any delete marked lines exist for the journal.
        #/// </summary>
        #/// <param name="_journalNum">
        #/// The journal number to check for delete marked lines.
        #/// </param>
        #/// <returns>
        #/// true if a delete marked line exists for the journal; otherwise, false.
        #/// </returns>
        #
        #public static boolean  existDeleteMarked(PriceDiscJournalNum _journalNum)
        #{
        #    if (!_journalNum)
        #    {
        #        return false;
        #    }
        #
        #    return (select firstonly RecId from priceDiscAdmTrans
        #                where priceDiscAdmTrans.JournalNum      == _journalNum &&
        #                      priceDiscAdmTrans.MustBeDeleted   == NoYes::Yes).RecId != 0;
        #}
        #
      ENDSOURCE
      SOURCE #existErrorsOrWarnings
        #/// <summary>
        #///     Determines whether any lines with errors or warnings exist in the journal.
        #/// </summary>
        #/// <param name="_journalNum">
        #///     The journal number to check for lines with errors or warnings.
        #/// </param>
        #/// <returns>
        #///     true if a line with warnings or errors exists in the journal; otherwise, false.
        #/// </returns>
        #public static server boolean existErrorsOrWarnings(PriceDiscJournalNum _journalNum)
        #{
        #    if (!_journalNum)
        #    {
        #        return false;
        #    }
        #
        #    return (select firstonly RecId from priceDiscAdmTrans
        #                where priceDiscAdmTrans.JournalNum == _journalNum &&
        #                      priceDiscAdmTrans.Log).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #findRefRecId
        #static PriceDiscAdmTrans findRefRecId(RecId                  recId,
        #                                      PriceDiscJournalNum    _journalNum,
        #                                      boolean                update = false)
        #{
        #    PriceDiscAdmTrans priceDiscAdmTrans;
        #    ;
        #
        #    priceDiscAdmTrans.selectForUpdate(update);
        #
        #    select firstonly priceDiscAdmTrans
        #        where priceDiscAdmTrans.PriceDiscTableRef   == recId &&
        #              priceDiscAdmTrans.JournalNum          == _journalNum;
        #
        #    return priceDiscAdmTrans;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : InventTableModule unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #InventTableModule
    EnforceFKRelation 0
    PROPERTIES
      Name                #InventTableModule
      Label               #@SYS27987
      FormRef             #EcoResProductDetailsExtended
      TitleField1         #ItemId
      TitleField2         #ModuleType
      ConfigurationKey    #LogisticsBasic
      SecurityKey         #InventTables
      CacheLookup         #Found
      CreateRecIdIndex    #Yes
      TableGroup          #Main
      PrimaryIndex        #ItemModuleIdx
      ClusterIndex        #ItemModuleIdx
      ModifiedDateTime    #Yes
      DEL_modifiedTime    #Yes
      ModifiedBy          #Yes
      CreatedDateTime     #Yes
      DEL_createdTime     #Yes
      CreatedBy           #Yes
      DeveloperDocumentation  #@SYS123848
      Origin              #{2C1100B0-0000-1000-4638-BB02F60003B4}
      LegacyId            #176
    ENDPROPERTIES
    
    FIELDS
      FIELD #AllocateMarkup
        ENUM
        PROPERTIES
          Name                #AllocateMarkup
          Table               #InventTableModule
          Origin              #{DB035F97-F5EF-4010-9823-99CDD3F6D1D0}
          LegacyId            #23
          ExtendedDataType    #PriceAllocateMarkup
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #EndDisc
        ENUM
        PROPERTIES
          Name                #EndDisc
          Label               #@Sys6465
          HelpText            #@SYS17091
          ConfigurationKey    #PriceDisc
          Table               #InventTableModule
          Origin              #{D378A266-737D-423D-A114-F54BC2BE71B7}
          LegacyId            #9
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyBlocked
        ENUM
        PROPERTIES
          Name                #InterCompanyBlocked
          Table               #InventTableModule
          Origin              #{5EB6BD79-602B-45B8-8315-BD66897158FF}
          LegacyId            #28
          ExtendedDataType    #InterCompanyBlocked
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ItemId
        STRING
        PROPERTIES
          Name                #ItemId
          HelpText            #@SYS20817
          Mandatory           #Yes
          AllowEdit           #No
          Table               #InventTableModule
          IgnoreEDTRelation   #Yes
          Origin              #{6BB9C850-EA01-4BAA-BA94-D065573785E1}
          LegacyId            #1
          ExtendedDataType    #ItemId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #LineDisc
        STRING
        PROPERTIES
          Name                #LineDisc
          HelpText            #@SYS7838
          Table               #InventTableModule
          Origin              #{010BFDE8-7CB8-4183-B36E-3DCA70F04E49}
          LegacyId            #7
          ExtendedDataType    #InventLineDiscCode
        ENDPROPERTIES
        
      FIELD #Markup
        REAL
        PROPERTIES
          Name                #Markup
          Table               #InventTableModule
          Origin              #{EF83118E-D5C4-4ED6-A7D4-979A2937A135}
          LegacyId            #6
          ExtendedDataType    #InventPriceMarkup
        ENDPROPERTIES
        
      FIELD #MarkupGroupId
        STRING
        PROPERTIES
          Name                #MarkupGroupId
          HelpText            #@SYS16610
          Table               #InventTableModule
          Origin              #{2A9BACE1-AB00-437C-9BB4-0A74E3924D98}
          LegacyId            #19
          ExtendedDataType    #InventMarkupGroupId
        ENDPROPERTIES
        
      FIELD #MarkupSecCur_RU
        REAL
        PROPERTIES
          Name                #MarkupSecCur_RU
          Table               #InventTableModule
          Origin              #{2A0F3E82-00B0-1000-BE91-145BF6AADF6D}
          LegacyId            #16002
          ExtendedDataType    #InventPriceMarkupSecCur_RU
        ENDPROPERTIES
        
      FIELD #MaximumRetailPrice_IN
        REAL
        PROPERTIES
          Name                #MaximumRetailPrice_IN
          HelpText            #@GLS5544
          Table               #InventTableModule
          Origin              #{2A151F42-00B0-1000-65D1-FCA4596AC8DB}
          LegacyId            #8002
          ExtendedDataType    #MaximumRetailPrice_IN
        ENDPROPERTIES
        
      FIELD #ModuleType
        ENUM
        PROPERTIES
          Name                #ModuleType
          HelpText            #@SYS10404
          AllowEdit           #No
          Table               #InventTableModule
          Origin              #{A682650E-00BF-49EE-B6F1-168C4CEB98BB}
          LegacyId            #2
          EnumType            #ModuleInventPurchSales
        ENDPROPERTIES
        
      FIELD #MultiLineDisc
        STRING
        PROPERTIES
          Name                #MultiLineDisc
          Label               #@Sys11440
          HelpText            #@SYS8307
          Table               #InventTableModule
          Origin              #{CA045528-DA89-4C15-85B3-2A0364774EF7}
          LegacyId            #8
          ExtendedDataType    #InventMultiLineDiscCode
        ENDPROPERTIES
        
      FIELD #OverDeliveryPct
        REAL
        PROPERTIES
          Name                #OverDeliveryPct
          Table               #InventTableModule
          Origin              #{5B2B6F18-F4C6-4E65-8D3F-0CBE7E276D52}
          LegacyId            #24
          ExtendedDataType    #OverDeliveryPct
        ENDPROPERTIES
        
      FIELD #PDSPricingPrecision
        INT
        PROPERTIES
          Name                #PDSPricingPrecision
          Table               #InventTableModule
          Origin              #{163C6F06-9BD9-4645-839D-B12F6A446285}
          ExtendedDataType    #PDSPricingPrecision
        ENDPROPERTIES
        
      FIELD #Price
        REAL
        PROPERTIES
          Name                #Price
          HelpText            #@SYS25618
          Table               #InventTableModule
          Origin              #{769544F7-AECA-4372-B2DF-05BC45A2E575}
          LegacyId            #4
          ExtendedDataType    #Price
        ENDPROPERTIES
        
      FIELD #PriceDate
        DATE
        PROPERTIES
          Name                #PriceDate
          HelpText            #@SYS7357
          Table               #InventTableModule
          Origin              #{4C395D49-E93B-42B5-A63E-5667B5B0BF76}
          LegacyId            #20
          ExtendedDataType    #PriceDate
        ENDPROPERTIES
        
      FIELD #PriceQty
        REAL
        PROPERTIES
          Name                #PriceQty
          HelpText            #@SYS25619
          Table               #InventTableModule
          Origin              #{C9E4453D-8770-4EBD-A750-B94AFBA8EAFA}
          LegacyId            #22
          ExtendedDataType    #PriceQty
        ENDPROPERTIES
        
      FIELD #PriceSecCur_RU
        REAL
        PROPERTIES
          Name                #PriceSecCur_RU
          Table               #InventTableModule
          Origin              #{2A0E3E81-00B0-1000-6105-59E49FDF6D70}
          LegacyId            #16001
          ExtendedDataType    #CostPriceSecCur_RU
        ENDPROPERTIES
        
      FIELD #PriceUnit
        REAL
        PROPERTIES
          Name                #PriceUnit
          Table               #InventTableModule
          Origin              #{AB0BB49D-FB4F-4586-BEBE-5B865239201F}
          LegacyId            #5
          ExtendedDataType    #PriceUnit
        ENDPROPERTIES
        
      FIELD #SuppItemGroupId
        STRING
        PROPERTIES
          Name                #SuppItemGroupId
          Table               #InventTableModule
          Origin              #{1848FBFE-7C37-4C1A-BABE-3E7202FA0069}
          LegacyId            #26
          ExtendedDataType    #InventSuppItemGroupId
        ENDPROPERTIES
        
      FIELD #TaxGSTReliefCategory_MY
        INT64
        PROPERTIES
          Name                #TaxGSTReliefCategory_MY
          Table               #InventTableModule
          Origin              #{8DCF5D71-589C-4960-A53C-A62AF3DE0C59}
          ExtendedDataType    #TaxGSTReliefCategoryRecId_MY
        ENDPROPERTIES
        
      FIELD #TaxItemGroupId
        STRING
        PROPERTIES
          Name                #TaxItemGroupId
          HelpText            #@SYS17342
          Table               #InventTableModule
          IgnoreEDTRelation   #Yes
          Origin              #{F41F7CDC-2195-4971-A7A1-B126175C85AE}
          LegacyId            #13
          ExtendedDataType    #TaxItemGroup
        ENDPROPERTIES
        
      FIELD #TaxWithholdCalculate_TH
        ENUM
        PROPERTIES
          Name                #TaxWithholdCalculate_TH
          Table               #InventTableModule
          Origin              #{D7E0254D-75E4-427C-9F50-F0340C346F5C}
          LegacyId            #8000
          ExtendedDataType    #TaxWithholdCalculate_TH
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #TaxWithholdItemGroupHeading_TH
        INT64
        PROPERTIES
          Name                #TaxWithholdItemGroupHeading_TH
          Table               #InventTableModule
          Origin              #{A3EC9A76-2A03-4826-8900-B08A6616BB19}
          LegacyId            #29
          ExtendedDataType    #TaxWithholdItemGroupId_TH
        ENDPROPERTIES
        
      FIELD #UnderDeliveryPct
        REAL
        PROPERTIES
          Name                #UnderDeliveryPct
          Table               #InventTableModule
          Origin              #{06EA69B2-AC81-42B3-9A6D-FE2482764524}
          LegacyId            #25
          ExtendedDataType    #UnderDeliveryPct
        ENDPROPERTIES
        
      FIELD #UnitId
        STRING
        PROPERTIES
          Name                #UnitId
          HelpText            #@SYS14532
          Table               #InventTableModule
          Origin              #{6221ADB5-FD01-45E5-83FC-30782B6EB7A8}
          LegacyId            #3
          ExtendedDataType    #UnitOfMeasureSymbol
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoSummary
        PROPERTIES
          Name                #AutoSummary
        ENDPROPERTIES
        
        GROUPFIELDS
          #UnitId
          #Price
          #TaxItemGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemId
          #ModuleType
          #UnitId
          #Price
          #PriceUnit
          #LineDisc
          #Markup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BasePrice
        PROPERTIES
          Name                #BasePrice
          Label               #@SYS12983
        ENDPROPERTIES
        
        GROUPFIELDS
          #Price
          #PriceUnit
          #PriceQty
          #MaximumRetailPrice_IN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CostBasePrice
        PROPERTIES
          Name                #CostBasePrice
          Label               #@SYS12983
        ENDPROPERTIES
        
        GROUPFIELDS
          #UnitId
          #Price
          #MaximumRetailPrice_IN
          #PriceUnit
          #PriceQty
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeliveryPercent
        PROPERTIES
          Name                #DeliveryPercent
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #OverDeliveryPct
          #UnderDeliveryPct
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Discount
        PROPERTIES
          Name                #Discount
          Label               #@SYS115268
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineDisc
          #MultiLineDisc
          #EndDisc
          #SuppItemGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemId
          #ModuleType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompany
        PROPERTIES
          Name                #InterCompany
          Label               #@SYS74106
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyBlocked
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #MCRItemCancellation
        PROPERTIES
          Name                #MCRItemCancellation
          Label               #@MCR22947
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #MiscCharges
        PROPERTIES
          Name                #MiscCharges
          Label               #@SYS8371
        ENDPROPERTIES
        
        GROUPFIELDS
          #MarkupGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #MiscellaneousCharges
        PROPERTIES
          Name                #MiscellaneousCharges
          Label               #@SYS116804
        ENDPROPERTIES
        
        GROUPFIELDS
          #MarkupGroupId
          #Markup
          #AllocateMarkup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #MiscellaneousChargesInvent
        PROPERTIES
          Name                #MiscellaneousChargesInvent
          Label               #@SYS116804
        ENDPROPERTIES
        
        GROUPFIELDS
          #Markup
          #AllocateMarkup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Module
        PROPERTIES
          Name                #Module
          Label               #@SYS9941
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PDSPotency
        PROPERTIES
          Name                #PDSPotency
          Label               #@PSC61
        ENDPROPERTIES
        
        GROUPFIELDS
          #PDSPricingPrecision
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Prices
        PROPERTIES
          Name                #Prices
          Label               #@SYS12983
        ENDPROPERTIES
        
        GROUPFIELDS
          #Price
          #MaximumRetailPrice_IN
          #PriceUnit
          #Markup
          #PriceQty
          #PriceDate
          #AllocateMarkup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PriceUpdate
        PROPERTIES
          Name                #PriceUpdate
          Label               #@SYS25118
        ENDPROPERTIES
        
        GROUPFIELDS
          #PriceDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Quantity
        PROPERTIES
          Name                #Quantity
          Label               #@SYS14578
        ENDPROPERTIES
        
        GROUPFIELDS
          #UnitId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesTax
        PROPERTIES
          Name                #SalesTax
          Label               #@SYS5878
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxItemGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SecondaryCost_RU
        PROPERTIES
          Name                #SecondaryCost_RU
          Label               #@GLS102435
        ENDPROPERTIES
        
        GROUPFIELDS
          #PriceSecCur_RU
          #MarkupSecCur_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Setup
        PROPERTIES
          Name                #Setup
          Label               #@SYS2186
        ENDPROPERTIES
        
        GROUPFIELDS
          #UnitId
          #MarkupGroupId
          #TaxItemGroupId
          #OverDeliveryPct
          #UnderDeliveryPct
          #InterCompanyBlocked
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SetupModule
        PROPERTIES
          Name                #SetupModule
          Label               #@SYS2186
        ENDPROPERTIES
        
        GROUPFIELDS
          #UnitId
          #OverDeliveryPct
          #UnderDeliveryPct
          #InterCompanyBlocked
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SupplementaryItem
        PROPERTIES
          Name                #SupplementaryItem
          Label               #@SYS58240
        ENDPROPERTIES
        
        GROUPFIELDS
          #SuppItemGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Taxation
        PROPERTIES
          Name                #Taxation
          Label               #@SYS300191
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxItemGroupId
          #TaxWithholdCalculate_TH
          #TaxWithholdItemGroupHeading_TH
          #TaxGSTReliefCategory_MY
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #ItemModuleIdx
      PROPERTIES
        Name                #ItemModuleIdx
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{2B0D0001-00B0-1000-AD9A-962F47D37675}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #ItemId
        #ModuleType
      ENDINDEXFIELDS
      
      #TaxWithholdItemGroupHeading_THIdx
      PROPERTIES
        Name                #TaxWithholdItemGroupHeading_THIdx
        Origin              #{C16824DC-986A-445C-A577-2E4CC47E515C}
        LegacyId            #2
      ENDPROPERTIES
      
      INDEXFIELDS
        #TaxWithholdItemGroupHeading_TH
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #InventLineDiscountGroup
        PROPERTIES
          Name                #InventLineDiscountGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InventLineDiscountGroup
          Role                #InventTableModule
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #LineDisc
            RelatedField        #GroupId
            SourceEDT           #InventLineDiscCode
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #PriceDiscGroup
            RelatedField        #Type
            SourceEDT           #InventLineDiscCode
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Module
            SourceEDT           #InventLineDiscCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventMarkupGroup
        PROPERTIES
          Name                #InventMarkupGroup
          Table               #MarkupGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InventMarkupGroup
          Role                #InventTableModule
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MarkupGroupId
            RelatedField        #GroupId
            SourceEDT           #InventMarkupGroupId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #MarkupGroup
            RelatedField        #Module
            SourceEDT           #InventMarkupGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventMultiLineDiscountGroup
        PROPERTIES
          Name                #InventMultiLineDiscountGroup
          Table               #PriceDiscGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InventMultiLineDiscountGroup
          Role                #InventTableModule
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MultiLineDisc
            RelatedField        #GroupId
            SourceEDT           #InventMultiLineDiscCode
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #2
            Table               #PriceDiscGroup
            RelatedField        #Type
            SourceEDT           #InventMultiLineDiscCode
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #PriceDiscGroup
            RelatedField        #Module
            SourceEDT           #InventMultiLineDiscCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventSuppItemGroup
        PROPERTIES
          Name                #InventSuppItemGroup
          Table               #SuppItemGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #InventSuppItemGroup
          Role                #InventTableModule
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #SuppItemGroupId
            RelatedField        #GroupId
            SourceEDT           #InventSuppItemGroupId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #SuppItemGroup
            RelatedField        #Module
            SourceEDT           #InventSuppItemGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventTable
        PROPERTIES
          Name                #InventTable
          Table               #InventTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Composition
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemId
            RelatedField        #ItemId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventTableModule
        PROPERTIES
          Name                #InventTableModule
          Table               #InventTableModule
          EntityRelationshipRole  #@SYS123849
          RelationshipType    #Link
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemId
            RelatedField        #ItemId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ModuleType
            RelatedField        #ModuleType
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProdParmReportFinished
        PROPERTIES
          Name                #ProdParmReportFinished
          Table               #ProdParmReportFinished
          RelatedTableCardinality   #ZeroOne
          Cardinality         #OneMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemId
            RelatedField        #ItemId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxGSTReliefCategory_MY
        PROPERTIES
          Name                #TaxGSTReliefCategory_MY
          Table               #TaxGSTReliefCategory_MY
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxGSTReliefCategory_MY
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxItemGroupHeading
        PROPERTIES
          Name                #TaxItemGroupHeading
          Table               #TaxItemGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxItemGroupId
            RelatedField        #TaxItemGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxWithholdItemGroupHeading_TH
        PROPERTIES
          Name                #TaxWithholdItemGroupHeading_TH
          Table               #TaxWithholdItemGroupHeading_TH
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxWithholdItemGroupHeading_TH
          Role                #TaxWithholdItemGroupHeading_TH_InventTableModule
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxWithholdItemGroupHeading_TH
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #UnitOfMeasure
        PROPERTIES
          Name                #UnitOfMeasure
          Table               #UnitOfMeasure
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #UnitId
            RelatedField        #Symbol
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #MCRPriceHistory(InventTableModule)
      PROPERTIES
        Table               #MCRPriceHistory
        DeleteAction        #Restricted
        Relation            #InventTableModule
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #calcPriceExclVAT
        #/// <summary>
        #/// Calculates the exclusive VAT value.
        #/// </summary>
        #/// <returns>
        #/// The calculated VAT value.
        #/// </returns>
        #/// <remarks>
        #/// The <c>calcPriceExclVAT</c> method uses <c>baseAmountExclTax</c> method to calculate the tax value.
        #/// </remarks>
        #[SysObsoleteAttribute('Unused method deprecated in AX 2012 R3', true)]
        #RetailPriceExclVAT calcPriceExclVAT()
        #{
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #calcPriceIncVAT
        #/// <summary>
        #/// Calculates the inclusive VAT value.
        #/// </summary>
        #/// <returns>
        #/// The calculated VAT value.
        #/// </returns>
        #/// <remarks>
        #/// The <c>calcPriceIncVAT</c> method uses <c>taxCalcWithoutSource</c> method to calculate the tax value.
        #/// </remarks>
        #RetailPriceInclVAT calcPriceIncVAT()
        #{
        #    Tax                 tax;
        #    AmountMST           taxTotal;
        #    InventTable         tInventTable    = InventTable::find(this.ItemId);
        #
        #    tax = new Tax();
        #
        #    taxTotal = tax.taxCalcWithoutSource(
        #                        RetailStoreTable::find(RetailSharedParameters::find().LocalStoreId).TaxGroup,
        #                        this.TaxItemGroupId,
        #                        systemDateGet(),
        #                        CompanyInfo::standardCurrency(),
        #                        this.Price,
        #                        TaxModuleType::Sales);
        #
        #    return this.Price + taxTotal;
        #}
      ENDSOURCE
      SOURCE #calcSalesPrice
        #public void calcSalesPrice(
        #    InventTable             _inventTable,
        #    InventAutoSalesPriceMap _basePrice)
        #{
        #    this.InventAutoSalesPriceMap::calcSalesPrice(_inventTable, _basePrice);
        #}
      ENDSOURCE
      SOURCE #checkValid
        #public boolean  checkValid()
        #{
        #    if (! this)
        #    {
        #        return checkFailed(strFmt("@SYS5700",this.ItemId,this.ModuleType));
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #getMarkup
        #/// <summary>
        #/// Retrieves a markup amount.
        #/// </summary>
        #/// <returns>
        #/// A markup amount.
        #/// </returns>
        #//BP Deviation documented
        #display public MarkupAmount  getMarkup()
        #{
        #    return this.InventPriceMap::markup();
        #}
      ENDSOURCE
      SOURCE #getPriceQty
        #/// <summary>
        #/// Retrieves a price quantity.
        #/// </summary>
        #/// <returns>
        #/// A price quantity.
        #/// </returns>
        #//BP Deviation documented
        #display public PriceQty getPriceQty()
        #{
        #    return this.InventPriceMap::priceQty();
        #}
      ENDSOURCE
      SOURCE #getPriceUnit
        #/// <summary>
        #/// Retrieves a price unit.
        #/// </summary>
        #/// <returns>
        #/// A price unit.
        #/// </returns>
        #//BP Deviation documented
        #display public PriceUnit  getPriceUnit()
        #{
        #    return this.InventPriceMap::priceUnit();
        #}
      ENDSOURCE
      SOURCE #highestQty
        #/// <summary>
        #///    Retrieves a maximum allowed order quantity, either for sales or inventory or purchase order.
        #/// </summary>
        #/// <returns>
        #///    A maximum allowed order quantity.
        #/// </returns>
        #//BP Deviation documented
        #display QtyHighest highestQty()
        #{
        #    return this.inventItemOrderSetup().highestQty();
        #}
      ENDSOURCE
      SOURCE #initFromInventItemPriceSim
        #public void initFromInventItemPriceSim(InventItemPriceSim _inventItemPriceSim)
        #{
        #    PriceConvertFactory priceConvertFactory;
        #    PriceConvert        priceConvert;
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    boolean             countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        #
        #    if (countryRegion_RU)
        #    {
        #        priceConvertFactory = PriceConvertFactory::newItemPrice(_inventItemPriceSim.ItemId,
        #                                                                _inventItemPriceSim.UnitID,
        #                                                                _inventItemPriceSim.Price,
        #                                                                _inventItemPriceSim.PriceUnit,
        #                                                                 _inventItemPriceSim.Markup,
        #                                                                _inventItemPriceSim.PriceQty,
        #                                                                '',
        #                                                                _inventItemPriceSim.PriceSecCur_RU,
        #                                                                _inventItemPriceSim.MarkupSecCur_RU
        #                                                                );
        #    }
        #    else
        #    {
        #    // </GEERU>
        #        priceConvertFactory = PriceConvertFactory::newItemPrice(_inventItemPriceSim.ItemId, _inventItemPriceSim.UnitID, _inventItemPriceSim.Price, _inventItemPriceSim.PriceUnit, _inventItemPriceSim.Markup, _inventItemPriceSim.PriceQty, '');
        #    // <GEERU>
        #    }
        #    // </GEERU>
        #    priceConvertFactory.parmNewUnitId(this.UnitId);
        #    priceConvertFactory.parmRounding(true);
        #    priceConvert = priceConvertFactory.priceConvert();
        #
        #    this.Price          = priceConvert.parmPrice();
        #    this.PriceUnit      = priceConvert.parmPriceUnit();
        #    this.Markup         = priceConvert.parmMarkup();
        #    this.PriceQty       = priceConvert.parmPriceQty();
        #    this.PriceDate      = _inventItemPriceSim.FromDate;
        #    this.AllocateMarkup = _inventItemPriceSim.PriceAllocateMarkup;
        #    // <GEERU>
        #    if (countryRegion_RU)
        #    {
        #        this.PriceSecCur_RU  = priceConvert.parmPriceSecCur_RU();
        #        this.MarkupSecCur_RU = priceConvert.parmMarkupSecCur_RU();
        #    }
        #    // </GEERU>
        #}
      ENDSOURCE
      SOURCE #initTaxItemGroupFromItemGrp
        #/// <summary>
        #///    Assigns the default tax item group based on settings of an item group.
        #/// </summary>
        #/// <param name="_inventItemGroup">
        #///    The <c>InventItemGroup</c> table buffer.
        #/// </param>
        #/// <param name="_overrideSet">
        #///    Determines if the <c>TaxItemGroupId</c> field value should be overriden if already set to non-empty value.
        #/// </param>
        #public void initTaxItemGroupFromItemGrp(InventItemGroup _inventItemGroup, boolean _overrideSet = true)
        #{
        #    if (!_overrideSet && this.TaxItemGroupId)
        #    {
        #        return;
        #    }
        #    switch(this.ModuleType)
        #    {
        #        case ModuleInventPurchSales::Purch:
        #
        #            if (_inventItemGroup.TaxItemGroupIdPurch)
        #            {
        #                this.TaxItemGroupId = _inventItemGroup.TaxItemGroupIdPurch;
        #            }
        #            break;
        #
        #        case ModuleInventPurchSales::Sales:
        #
        #            if (_inventItemGroup.TaxItemGroupIdSales)
        #            {
        #                this.TaxItemGroupId = _inventItemGroup.TaxItemGroupIdSales;
        #            }
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #initValue
        #public void initValue()
        #{
        #    this.PriceUnit = 1;
        #
        #    this.UnitId             = InventParameters::find().DefaultUnitId;
        #    this.EndDisc            = NoYes::Yes;
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #insert
        #public void insert()
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #
        #    // <GEERU>
        #    if (this.Price || this.Markup
        #        || (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
        #            && ( this.PriceSecCur_RU
        #                || this.MarkupSecCur_RU )))
        #    // </GEERU>
        #    {
        #        this.PriceDate= systemDateGet();
        #    }
        #
        #
        #    ttsbegin;
        #
        #    super();
        #
        #    ttscommit;
        #}
        #
        #
      ENDSOURCE
      SOURCE #insertNewPrimary
        #/// <summary>
        #/// Maintains a price group for items for a specified <c>PriceGroupId</c> value.
        #/// </summary>
        #/// <param name="_priceGroupType">
        #/// A specified <c>_priceGroupType</c> value.
        #/// </param>
        #/// <param name="_priceGroupId">
        #/// A specified <c>PriceGroupId</c> value.
        #/// </param>
        #void insertNewPrimary(PriceGroupType    _priceGroupType,
        #                      PriceGroupId      _priceGroupId)
        #{
        #    MCRPriceDiscGroupItem  priceDiscGroupItems;
        #    ttsbegin;
        #    priceDiscGroupItems = MCRPriceDiscGroupItem::findGroupItem(ModuleInventCustVend::Invent,
        #                                        _priceGroupType,
        #                                        _priceGroupId,
        #                                        this.ItemId,
        #                                        InventDim::inventDimIdBlank(),
        #                                        true);
        #
        #    //If the item group already exists, change the primary flags based on which module
        #    // is being assigned.
        #    if (priceDiscGroupItems)
        #    {
        #        if(this.ModuleType == ModuleInventPurchSales::Sales)
        #        {
        #            priceDiscGroupItems.PrimarySalesGroup = true;
        #        }
        #        if (this.ModuleType == ModuleInventPurchSales::Purch)
        #        {
        #            priceDiscGroupItems.PrimaryPurchGroup = true;
        #        }
        #        priceDiscGroupItems.update();
        #    }
        #    else  //Insert a new item record to the group.
        #    {
        #        if(this.ModuleType == ModuleInventPurchSales::Sales)
        #        {
        #            priceDiscGroupItems.PrimarySalesGroup = true;
        #        }
        #        if (this.ModuleType == ModuleInventPurchSales::Purch)
        #        {
        #            priceDiscGroupItems.PrimaryPurchGroup = true;
        #        }
        #        priceDiscGroupItems.GroupId        = _priceGroupId;
        #        priceDiscGroupItems.Module         = ModuleInventCustVend::Invent;
        #        priceDiscGroupItems.Type           = _priceGroupType;
        #        priceDiscGroupItems.ItemId         = this.ItemId;
        #        priceDiscGroupItems.InventDimId    = InventDim::inventDimIdBlank();
        #        priceDiscGroupItems.insert();
        #    }
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #inventItemOrderSetup
        #/// <summary>
        #///    Retrieves either the sales or purchase or inventory order settings based on the module type.
        #/// </summary>
        #/// <returns>
        #///    This matches data from the <c>InventItemPurchSetup</c>, <c>InventItemSalesSetup</c>, or
        #///    <c>InventItemInventSetup</c> tables.
        #/// </returns>
        #//BP Deviation documented
        #public InventItemOrderSetupMap inventItemOrderSetup()
        #{
        #    InventItemOrderSetupMap inventItemOrderSetupMap;
        #    inventItemOrderSetupMap = InventItemOrderSetupMap::findDefault(this.ItemId,
        #                            InventItemOrderSetupMap::module2SetupType(this.ModuleType));
        #    return inventItemOrderSetupMap;
        #}
      ENDSOURCE
      SOURCE #inventLocationId
        #/// <summary>
        #///    Retrieves a warehouse ID, either for sales or inventory or purchase order.
        #/// </summary>
        #/// <param name="selectDropShip">
        #/// A <c>Boolean</c> value defining whether to search for the drop shipment warehouse or not.
        #/// </param>
        #/// <returns>
        #///    A warehouse ID.
        #/// </returns>
        #//BP Deviation documented
        #display InventLocationId inventLocationId(
        #    boolean selectDropShip = true
        #    )
        #{
        #    MCRInventTable mcrInventTable;
        #
        #    if (selectDropShip)
        #    {
        #        mcrInventTable = this.inventTable().mcrInventTable();
        #    }
        #
        #    // If this item is flagged as drop shipment, always use the default drop ship warehouse.
        #    if(selectDropShip
        #        && mcrInventTable.DropShipment
        #        && mcrInventTable.DefaultDropShipmentWarehouse)
        #{
        #        return mcrInventTable.DefaultDropShipmentWarehouse;
        #    }
        #    return this.inventItemOrderSetup().inventLocationId();
        #}
      ENDSOURCE
      SOURCE #inventSiteId
        #/// <summary>
        #/// Selects a drop shipment site.
        #/// </summary>
        #/// <param name="inventSiteId">
        #/// A default drop shipment <c>InventSiteId</c> value.
        #/// </param>
        #/// <param name="selectDropShip">
        #/// A <c>boolean</c> value indicates, if the default drop ship warehouse should be returned.
        #/// </param>
        #/// <returns>
        #/// A drop shipment site.
        #/// </returns>
        #public InventSiteId inventSiteId(InventSiteId inventSiteId = '', boolean selectDropShip = true)
        #{
        #    MCRInventTable mcrInventTable = this.inventTable().mcrInventTable();
        #    //If this item is flagged as drop shipment, always use the default drop ship warehouse.
        #    if( mcrInventTable.DropShipment
        #        && mcrInventTable.DefaultDropShipmentWarehouse
        #        && !inventSiteId
        #        && selectDropShip)
        #        return InventLocation::find(mcrInventTable.DefaultDropShipmentWarehouse).InventSiteId;
        #
        #    return inventSiteId;
        #}
        #
      ENDSOURCE
      SOURCE #inventTable
        #public InventTable inventTable()
        #{
        #    InventTable     inventTable;
        #
        #    if (this.isFormDataSource())
        #    {
        #        inventTable = this.joinedTable(inventTable) as InventTable;
        #        if (inventTable && inventTable.ItemId == this.ItemId)
        #        {
        #            return inventTable;
        #        }
        #    }
        #
        #    return InventTable::find(this.ItemId);
        #}
      ENDSOURCE
      SOURCE #joinedTable
        #public Common joinedTable(Common   _buffer)
        #{
        #    Common      joinBuffer;
        #
        #    joinBuffer = this.joinParent();
        #    do
        #    {
        #        if (joinBuffer.TableId == _buffer.TableId)
        #        {
        #            return joinBuffer;
        #        }
        #        joinBuffer = joinBuffer.joinParent();
        #    }
        #    while (joinBuffer);
        #
        #    return null;
        #}
      ENDSOURCE
      SOURCE #leadTime
        #/// <summary>
        #///    Retrieves a lead time either for sales, inventory, or purchase in days.
        #/// </summary>
        #/// <returns>
        #///    A lead time in days.
        #/// </returns>
        #//BP Deviation documented
        #display LeadTimeDelivery leadTime()
        #{
        #    return this.inventItemOrderSetup().leadTime();
        #}
      ENDSOURCE
      SOURCE #lowestQty
        #/// <summary>
        #///    Retrieves a minimum allowed order quantity, either for sales or inventory or purchase order.
        #/// </summary>
        #/// <returns>
        #///    A minimum allowed order quantity.
        #/// </returns>
        #//BP Deviation documented
        #display QtyLowest lowestQty()
        #{
        #    return this.inventItemOrderSetup().lowestQty();
        #}
      ENDSOURCE
      SOURCE #mandatoryInventLocation
        #/// <summary>
        #///    Indicates whether a mandatory warehouse exists  for either sales, inventory, or a purchase order.
        #/// </summary>
        #/// <returns>
        #///    true if the mandatory warehouse exists; otherwise, false.
        #/// </returns>
        #//BP Deviation documented
        #display boolean mandatoryInventLocation()
        #{
        #    return this.inventItemOrderSetup().MandatoryInventLocation;
        #}
      ENDSOURCE
      SOURCE #markup
        #public MarkupAmount  markup()
        #{
        #    return this.InventPriceMap::markup();
        #}
      ENDSOURCE
      SOURCE #markupSecCur_RU
        #public MarkupAmount markupSecCur_RU()
        #{
        #    return this.InventPriceMap::markupSecCur_RU();
        #}
      ENDSOURCE
      SOURCE #maxRetailPrice_IN
        #/// <summary>
        #/// Gets max retail price.
        #/// </summary>
        #/// <returns>
        #/// The instance of the <c>Price</c> class.
        #/// </returns>
        #// <GIN>
        #public Price maxRetailPrice_IN()
        #{
        #    return this.MaximumRetailPrice_IN;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #mcrDeletePurchLineGrp
        #/// <summary>
        #/// Deletes the <c>MCRPriceDiscGroupItem</c> record retrieved based on the passed
        #/// <c>PriceGroupType</c> and this record.
        #/// </summary>
        #/// <param name="_priceGroupType">
        #/// The <c>PriceGroupType</c> of the purchase line used to find the appropriate
        #/// <c>MCRPriceDiscGroupItem</c> record.
        #/// </param>
        #public void mcrDeletePurchLineGrp(PriceGroupType    _priceGroupType)
        #{
        #    MCRPriceDiscGroupItem  mcrPriceDiscGroupItemSales;
        #    MCRPriceDiscGroupItem  mcrPriceDiscGroupItemPurch;
        #
        #    mcrPriceDiscGroupItemSales = MCRPriceDiscGroupItem::findPrimarySales(ModuleInventCustVend::Invent,
        #                                                                        _priceGroupType,
        #                                                                        this.ItemId);
        #    ttsbegin;
        #    mcrPriceDiscGroupItemPurch = MCRPriceDiscGroupItem::findPrimaryPurch(ModuleInventCustVend::Invent,
        #                                                                        _priceGroupType,
        #                                                                        this.ItemId,
        #                                                                        InventDim::inventDimIdBlank(),
        #                                                                        true);
        #
        #
        #    // If the primary purch group is also the primary sales group, change the
        #    // primary purch flag to false.
        #    if (mcrPriceDiscGroupItemSales.GroupId == mcrPriceDiscGroupItemPurch.GroupId
        #        && mcrPriceDiscGroupItemSales.GroupId != '')
        #    {
        #        mcrPriceDiscGroupItemPurch.PrimaryPurchGroup = false;
        #        mcrPriceDiscGroupItemPurch.update();
        #    }
        #    //If the primary purch group is not the primary sales group, delete the item
        #    // from the group list.
        #    else
        #    {
        #        if (mcrPriceDiscGroupItemPurch.validateDelete())
        #        {
        #            mcrPriceDiscGroupItemPurch.delete();
        #        }
        #        else
        #        {
        #            throw error("@SYS104318");
        #        }
        #    }
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #mcrDeleteSalesLineGrp
        #private void mcrDeleteSalesLineGrp(PriceGroupType    _priceGroupType)
        #{
        #    MCRPriceDiscGroupItem  mcrPriceDiscGroupItemPurch;
        #    MCRPriceDiscGroupItem  mcrPriceDiscGroupItemSales;
        #
        #    mcrPriceDiscGroupItemPurch = MCRPriceDiscGroupItem::findPrimaryPurch(ModuleInventCustVend::Invent,
        #                                                                        _priceGroupType,
        #                                                                        this.ItemId);
        #    ttsbegin;
        #    mcrPriceDiscGroupItemSales = MCRPriceDiscGroupItem::findPrimarySales(ModuleInventCustVend::Invent,
        #                                                                        _priceGroupType,
        #                                                                        this.ItemId,
        #                                                                        InventDim::inventDimIdBlank(),
        #                                                                        true);
        #
        #    //If the primary sales group is also the primary purchase group, change the
        #    // primary sales flag to false.
        #    if (mcrPriceDiscGroupItemPurch.GroupId == mcrPriceDiscGroupItemSales.GroupId
        #        && mcrPriceDiscGroupItemPurch.GroupId != '')
        #    {
        #        mcrPriceDiscGroupItemSales.PrimarySalesGroup = false;
        #
        #        if (mcrPriceDiscGroupItemSales.validateWrite())
        #        {
        #            mcrPriceDiscGroupItemSales.update();
        #        }
        #        else
        #        {
        #            throw error("@SYS104318");
        #        }
        #    }
        #    //If the primary sales group is not the primary Purchase group, delete the item
        #    // from the group list.
        #    else
        #    {
        #        if (mcrPriceDiscGroupItemSales.validateDelete())
        #        {
        #            mcrPriceDiscGroupItemSales.delete();
        #        }
        #        else
        #        {
        #            throw error("@SYS104318");
        #        }
        #    }
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #mcrInventLocationId
        #/// <summary>
        #/// Retrieves the inventory location ID of the current record.
        #/// </summary>
        #/// <param name="_inventLocation">
        #/// The inventory location ID to return if specified; optional.
        #/// </param>
        #/// <param name="_selectDropShip">
        #/// A boolean that determines whether to select drop ship records.
        #/// </param>
        #/// <returns>
        #/// The devault drop shipment warehouse if the inventory location parameter is null;
        #/// otherwise, the <c>inventoryLocationID</c> passed in.
        #/// </returns>
        #public InventLocationId mcrInventLocationId(InventLocationId _inventLocation = '', boolean _selectDropShip = true)
        #{
        #    MCRInventTable mcrInventTable = this.inventTable().mcrInventTable();
        #
        #    //If this item is flagged as drop shipment, always use the default drop ship warehouse.
        #    if( mcrInventTable.DropShipment
        #        && mcrInventTable.DefaultDropShipmentWarehouse
        #        && !_inventLocation
        #        && _selectDropShip)
        #    {
        #        return mcrInventTable.DefaultDropShipmentWarehouse;
        #    }
        #
        #    return _inventLocation;
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #/// <summary>
        #/// Calculates the tax value if the <c>Price</c>, <c>PriceInclVAT</c> fields are modified.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field number of the modified field.
        #/// </param>
        #/// <remarks>
        #/// The <c>modifiedField</c> method uses <c>calcPriceIncVAT</c> or <c>calcPriceExclVAT</c> methods to calculate the tax value.
        #/// </remarks>
        #
        #public void modifiedField(FieldId _fieldId)
        #{
        #    super(_fieldId);
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        #    {
        #        if(_fieldId == fieldNum(InventTableModule, LineDisc))
        #        {
        #            //If the module is sales, delete or uncheck the old primary sales group.
        #            if (this.ModuleType == ModuleInventPurchSales::Sales)
        #            {
        #                this.mcrDeleteSalesLineGrp(PriceGroupType::LineDiscGroup);
        #            }
        #            //If the module is purch, delete or uncheck the old primary purch group.
        #            if (this.ModuleType == ModuleInventPurchSales::Purch)
        #            {
        #                this.mcrDeletePurchLineGrp(PriceGroupType::LineDiscGroup);
        #            }
        #
        #            //Select to see if item is already on the group.
        #            this.insertNewPrimary(PriceGroupType::LineDiscGroup,this.LineDisc);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #multipleQty
        #/// <summary>
        #///    Retrieves an order quantity multiplier, either for sales, inventory, or purchase order.
        #/// </summary>
        #/// <returns>
        #///    An order quantity multiplier.
        #/// </returns>
        #//BP Deviation documented
        #display Qty multipleQty()
        #{
        #    return this.inventItemOrderSetup().multipleQty();
        #}
      ENDSOURCE
      SOURCE #pcsPrice
        #public Price  pcsPrice()
        #{
        #    return this.InventPriceMap::pcsPrice();
        #}
      ENDSOURCE
      SOURCE #pcsPriceSecCur_RU
        #public Price pcsPriceSecCur_RU()
        #{
        #    return this.InventPriceMap::pcsPriceSecCur_RU();
        #}
      ENDSOURCE
      SOURCE #price
        #public Price price()
        #{
        #    return this.InventPriceMap::price();
        #}
      ENDSOURCE
      SOURCE #priceQty
        #public PriceQty priceQty()
        #{
        #    return this.InventPriceMap::priceQty();
        #}
      ENDSOURCE
      SOURCE #priceSecCur_RU
        #public PriceSecCur_RU priceSecCur_RU()
        #{
        #    return this.InventPriceMap::priceSecCur_RU();
        #}
      ENDSOURCE
      SOURCE #priceUnit
        #public PriceUnit  priceUnit()
        #{
        #    return this.InventPriceMap::priceUnit();
        #}
      ENDSOURCE
      SOURCE #renamePrimaryKey
        #/// <summary>
        #/// Throws the error while renaming the record if the distribution type is other than <c>NoDistribution</c>.
        #/// </summary>
        #/// <remarks>
        #/// The <c>errorOnRename</c> method of <c>RetailConnActionManagement</c> is called.
        #/// </remarks>
        #public void renamePrimaryKey()
        #{
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #    {
        #        RetailConnActionManagement::errorOnRename(this);
        #    }
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #standardQty
        #/// <summary>
        #///    Retrieves a standard order quantity, either for sales or inventory or purchase order.
        #/// </summary>
        #/// <returns>
        #///    A standard order quantity.
        #/// </returns>
        #//BP Deviation documented
        #display QtyStandard standardQty()
        #{
        #    return this.inventItemOrderSetup().standardQty();
        #}
      ENDSOURCE
      SOURCE #stopped
        #/// <summary>
        #///    Indicates whether a sales, inventory, or purchase order type is on hold for transactions.
        #/// </summary>
        #/// <returns>
        #///    true if the item is on hold for transactions; otherwise, false.
        #/// </returns>
        #//BP Deviation documented
        #display boolean stopped()
        #{
        #    return this.inventItemOrderSetup().stopped();
        #}
      ENDSOURCE
      SOURCE #update
        #public void update(boolean _updatePriceDate = true, boolean _updatePrice = true)
        #{
        #    boolean         updPrice = false;
        #    FormRun         formRun;
        #    FormObjectSet   formObjSet;
        #    int             i;
        #    InventTable     inventTable;
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #
        #    boolean         countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        #    // </GEERU>
        #
        #
        #
        #    RetailLabelUtils               labelUtils = new RetailLabelUtils();
        #    boolean replicate = false;
        #
        #    if (   _updatePrice
        #        && (   this.orig().Price    != this.Price
        #           ||  this.orig().Markup   != this.Markup
        #            // <GEERU>
        #           ||  (countryRegion_RU
        #                && (this.orig().PriceSecCur_RU  != this.PriceSecCur_RU
        #                ||  this.orig().MarkupSecCur_RU != this.MarkupSecCur_RU))
        #            // </GEERU>
        #           ||  this.orig().PriceUnit   != this.PriceUnit
        #           ||  this.orig().UnitId      != this.UnitId)
        #        &&  !SysRecordTemplate::isTemplateEditFormRecord(this)) //Do not update prices when editing a template as it would update real records
        #    {
        #        updPrice = true;
        #
        #        if (_updatePriceDate)
        #        {
        #            this.PriceDate  = systemDateGet();
        #        }
        #    }
        #
        #    ttsbegin;
        #
        #    super();
        #
        #    if (updPrice)
        #    {
        #        if (this.ModuleType != ModuleInventPurchSales::Sales)
        #        {
        #            InventTable::updateAutoSalesPrice(this.ItemId, this.PriceDate);
        #        }
        #        else
        #        {
        #            if (this.isFormDataSource())
        #            {
        #                if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #                {
        #                    labelUtils.markLabelGeneration(this.ItemId);
        #                }
        #
        #                // refresh and reread inventTable datasource if exists in form
        #                formRun = this.dataSource().formRun();
        #                for (i=1; i<= formRun.dataSourceCount(); i++)
        #                {
        #                    if (formRun.dataSource(i).cursor() is InventTable)
        #                    {
        #                        formObjSet = formRun.dataSource(i);
        #                        inventTable = formObjSet.cursor() as InventTable;
        #                        break;
        #                    }
        #                }
        #                if (!inventTable)
        #                {
        #                    inventTable = InventTable::find(this.ItemId, true);
        #                }
        #                if (inventTable)
        #                {
        #                    if (inventTable.updateAutoSalesPercent() && formObjSet)
        #                    {
        #                        formObjSet.refresh();
        #                        formObjSet.reread();
        #                    }
        #                }
        #            }
        #        }
        #    }
        #    ttscommit;
        #
        #    SalesPurchLine::flushPriceDiscCache();
        #}
        #
        #
      ENDSOURCE
      SOURCE #updateSalesPrice
        #/// <summary>
        #/// Updates a sales unit price.
        #/// </summary>
        #/// <param name="_inventTable">
        #/// A specified <c>InventTable</c> buffer that contains the parameters for how to calculate the sales price.
        #/// </param>
        #/// <param name="_inventTableModule">
        #/// A specified <c>InventTable</c> buffer that contains the base price that is used as a basis for the calculation of the new sales price.
        #/// </param>
        #/// <param name="_unitPrice">
        #/// A specifeid unit price.
        #/// </param>
        #/// <returns>
        #/// Updated sales unit price.
        #/// </returns>
        #public Price updateSalesPrice(
        #    InventTable             _inventTable,
        #    InventAutoSalesPriceMap _inventTableModule,
        #    Price                   _unitPrice)
        #{
        #    return this.InventAutoSalesPriceMap::updateSalesPrice(_inventTable, _inventTableModule, _unitPrice);
        #}
        #
      ENDSOURCE
      SOURCE #validateFieldValue
        #public boolean validateFieldValue(
        #    FieldName   _fieldName,
        #    int         _arrayIndex = 1)
        #{
        #    #ISOCountryRegionCodes
        #
        #    boolean     ret = super(_fieldName, _arrayIndex);
        #
        #    //perform validation only if changing real record (not template)
        #    //we cannot validate when editing template because we need real InventTable record to do that
        #    if (!SysRecordTemplate::isTemplateEditFormRecord(this))
        #    {
        #        switch (_fieldName)
        #        {
        #            case fieldStr(InventTableModule,UnitId):
        #                if (   this.ModuleType == ModuleInventPurchSales::Invent
        #                    && this.UnitId != this.orig().UnitId)
        #                {
        #                    if (InventTrans::transactionsExist(this.ItemId))
        #                    {
        #                        return checkFailed(strFmt("@SYS120463",this.ItemId));
        #                    }
        #
        #                    if (InventItemPrice::costPricesExistForItem(this.ItemId))
        #                    {
        #                        return checkFailed(strFmt("@SYS126703",this.ItemId));
        #                    }
        #                }
        #                break;
        #
        #            case fieldStr(InventTableModule,TaxWithholdCalculate_TH):
        #                    // <GTH>
        #                    if (TaxThaiGovCertificationFeatureChecker::isCountryRegionTH())
        #                    {
        #                        return true;
        #                    }
        #                    // </GTH>
        #                    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoSA])
        #                        && this.TaxWithholdCalculate_TH == true
        #                        && InventTable::find(this.ItemId).ItemType != ItemType::Service)
        #                    {
        #                        return checkFailed("@SYS328665");
        #                    }
        #                    break;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateMaxPriceInclVAT
        #/// <summary>
        #/// Validates the maximum inclusive price tax value.
        #/// </summary>
        #/// <returns>
        #/// true, if the maximum price tax value is greater than the inclusive VAT value, otherwise error.
        #/// </returns>
        #[SysObsoleteAttribute('Unused method deprecated in AX 2012 R3', true)]
        #boolean validateMaxPriceInclVAT()
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #validateMinPriceInclVAT
        #/// <summary>
        #/// Validates the minimum inclusive price tax value.
        #/// </summary>
        #/// <returns>
        #/// true, if the minimum price tax value is lower than the inclusive VAT value, otherwise error.
        #/// </returns>
        #[SysObsoleteAttribute('Unused method deprecated in AX 2012 R3', true)]
        #boolean validateMinPriceInclVAT()
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #validatePrice
        #/// <summary>
        #/// Validates the price value.
        #/// </summary>
        #/// <returns>
        #/// true if the price is greater than minimum inclusive tax and lower than maximum inclusive tax value, otherwise error.
        #/// </returns>
        #[SysObsoleteAttribute('Unused method deprecated in AX 2012 R3', true)]
        #boolean validatePrice()
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #validatePriceInclVAT
        #/// <summary>
        #/// validates the minimum inclusive tax value.
        #/// </summary>
        #/// <returns>
        #/// ture if the tax value is valid.
        #/// </returns>
        #[SysObsoleteAttribute('Unused method deprecated in AX 2012 R3', true)]
        #boolean validatePriceInclVAT()
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #/// <summary>
        #///    Validates the table buffer before it is written.
        #/// </summary>
        #/// <returns>
        #///    false if the item sales tax group for purchase or sales order fields is not populated, meaning a
        #///    user requires mandatory item tax group; otherwise, true.
        #/// </returns>
        #public boolean validateWrite()
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #
        #    InventBaileeCalcSetup_RU inventBaileeCalcSetup;
        #    // </GEERU>
        #
        #    boolean ret = true;
        #
        #    if (pdsIsCWItem(this.ItemId)
        #        && this.ModuleType == ModuleInventPurchSales::Invent
        #        && !this.isTmp()  //do not do catch-weight check on template buffers, as PDSCatchWeightItem datasource is disabled for templates
        #        && this.orig()
        #        && this.orig().UnitId != this.UnitId
        #        && PdsCatchWeight::cwUnitId(this.ItemId))
        #    {
        #        ret = checkFailed("@PDS185");
        #    }
        #    ret = super() && ret;
        #
        #    if (ret)
        #    {
        #        if (!this.TaxItemGroupId
        #            && (this.ModuleType == ModuleInventPurchSales::Purch
        #            || this.ModuleType == ModuleInventPurchSales::Sales)
        #            && (InventParameters::find().MandatoryItemTaxGroup))
        #        {
        #            ret = checkFailed("@SYS113293");
        #        }
        #
        #        if (this.TaxWithholdCalculate_TH && this.TaxWithholdItemGroupHeading_TH == 0)
        #        {
        #            ret = checkFailed("@SYS328931");
        #        }
        #    }
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        if (this.ModuleType == ModuleInventPurchSales::Invent &&
        #            this.orig() &&
        #            this.orig().UnitId != this.UnitId)
        #        {
        #            select firstonly inventBaileeCalcSetup
        #                where inventBaileeCalcSetup.CalcItemId == this.ItemId;
        #            if (inventBaileeCalcSetup)
        #            {
        #                ret = checkFailed("@GLS115700");
        #            }
        #        }
        #    }
        #    // </GEERU>
        #
        #    return ret;
        #}
        #
        #
      ENDSOURCE
      SOURCE #exist
        #public static boolean exist(
        #    ItemId                  _itemId,
        #    ModuleInventPurchSales  _moduleType)
        #{
        #    return _itemId && (select inventTableModule
        #                index hint ItemModuleIdx
        #                where inventTableModule.ItemId      == _itemId
        #                   && inventTableModule.ModuleType  == _moduleType
        #           ).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #find
        #public static InventTableModule find(
        #    ItemId                      _itemId,
        #    ModuleInventPurchSales      _moduleType,
        #    boolean                     _forUpdate = false)
        #{
        #    InventTableModule  inventTableModule;
        #
        #    if (_forUpdate)
        #    {
        #        inventTableModule.selectForUpdate(_forUpdate);
        #        inventTableModule.selectLocked(_forUpdate);
        #    }
        #
        #    if (_itemId)
        #    {
        #        select firstonly inventTableModule
        #            where inventTableModule.ItemId      == _itemId
        #               && inventTableModule.ModuleType  == _moduleType;
        #    }
        #
        #    return inventTableModule;
        #}
      ENDSOURCE
      SOURCE #pdsUpdFromTradeAgreement
        #/// <summary>
        #///     Updates <c>InventTableModule</c> precision value.
        #/// </summary>
        #/// <param name="_itemId">
        #///     The <c>ItemId</c> for which to update the precision value.
        #/// </param>
        #/// <param name="_module">
        #///     The module for which to update the precision value; optional.
        #/// </param>
        #public static void pdsUpdFromTradeAgreement(
        #    ItemId                  _itemId,
        #    ModuleInventPurchSales  _module = ModuleInventPurchSales::Purch)
        #{
        #    InventTableModule   inventTableModule;
        #    #define.maximumPrecision(5)
        #
        #    if (_itemId)
        #    {
        #        ttsbegin;
        #        update_recordSet inventTableModule
        #            setting PDSPricingPrecision                     =  #maximumPrecision
        #            where   inventTableModule.ItemId                == _itemId
        #                &&  inventTableModule.ModuleType            == _module
        #                &&  inventTableModule.PDSPricingPrecision   == 0;
        #        ttscommit;
        #    }
        #}
      ENDSOURCE
      SOURCE #unitConvert
        #public static Qty  unitConvert(
        #    ItemId                  _itemId,
        #    ModuleInventPurchSales  _module,
        #    UnitOfMeasureSymbol     _unitFrom,
        #    Qty                     _valueFrom = 1,
        #    InventDimId             _inventDimId = '')
        #{
        #    UnitOfMeasureSymbol unitInvent;
        #    UnitOfMeasureSymbol unitTo;
        #
        #    unitTo = InventTableModule::find(_itemId, _module).UnitId;
        #
        #    if (_unitFrom != unitTo)
        #    {
        #        unitInvent  = InventTableModule::find(_itemId, ModuleInventPurchSales::Invent).UnitId;
        #        return InventTable::unitConvert(_itemId, _unitFrom, unitTo, unitInvent, _valueFrom, _inventDimId);
        #    }
        #    return _valueFrom;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBE

; Microsoft Dynamics AX Enumtype : NoYesCombo unloaded
; --------------------------------------------------------------------------------
  ENUMTYPEVERSION 1
  
  ENUMTYPE #NoYesCombo
    PROPERTIES
      Name                #NoYesCombo
      UseEnumValue        #Yes
      Origin              #{280A02DC-0000-1000-A41C-5D7673436F6D}
      LegacyId            #732
    ENDPROPERTIES
    
    TYPEELEMENTS
      #No
      PROPERTIES
        Name                #No
        Label               #@SYS2048
        EnumValue           #0
      ENDPROPERTIES
      
      #Yes
      PROPERTIES
        Name                #Yes
        Label               #@SYS5461
        EnumValue           #1
      ENDPROPERTIES
      
    ENDTYPEELEMENTS
  ENDENUMTYPE
  

***Element: CLS

; Microsoft Dynamics AX Class: PriceDiscAdmCheckPost unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #PriceDiscAdmCheckPost
    PROPERTIES
      Name                #PriceDiscAdmCheckPost
      Extends             #RunBaseBatch
      Origin              #{2D150A5E-0000-1000-0A35-F0540A530F62}
      LegacyId            #2654
    ENDPROPERTIES
    
    METHODS
      SOURCE #checkForOverlapsAndGaps
        #/// <summary>
        #///     Determines whether there are overlaps or gaps between the trade agreement lines
        #/// in the priceDiscAdmTransArrayBuffer and flushes the priceDiscAdmTransArrayBuffer
        #/// when <paramref name="_priceDiscAdmTrans"/> is not in the same group (does not have
        #/// the same value on all the fields exist in the JournalRelationIdx index) as the
        #/// PriceDiscAdmTrans records in the priceDiscAdmTransArrayBuffer. Then, inserts
        #/// <paramref name="_priceDiscAdmTrans"/> into the priceDiscAdmTransArrayBuffer.
        #/// </summary>
        #/// <param name="_priceDiscAdmTrans">
        #///     The record that will be put into the priceDiscAdmTransArrayBuffer.
        #/// </param>
        #/// <remarks>
        #///     In a single journal validation, all the <paramref name="_priceDiscAdmTrans"/> passed
        #/// as a parameter of this method should have already been sorted by the ascending order of
        #/// the index JournalRelationIdx, the field AgreementHeaderExt_RU and QuantityAmountFrom.
        #///     Besides, this method should be called with an empty PriceDiscAdmTrans record as the
        #/// parameter at the end of the journal validation in order to check the remaining records
        #/// in the priceDiscAdmTransArrayBuffer.
        #/// </remarks>
        #protected void checkForOverlapsAndGaps(PriceDiscAdmTrans _priceDiscAdmTrans)
        #{
        #    PriceDiscAdmTrans   priceDiscAdmTrans;
        #    PriceDiscAdmTrans   tempPriceDiscAdmTrans;
        #
        #    int                 priceDiscAdmTransArrayBufferLastIndex = priceDiscAdmTransArrayBuffer.lastIndex();
        #
        #    boolean             firstDateOverlap;
        #
        #    boolean             hasGaps[];
        #    boolean             hasOverlaps[];
        #
        #    int i;
        #    int j;
        #
        #    if (priceDiscAdmTransArrayBufferLastIndex)
        #    {
        #
        #        tempPriceDiscAdmTrans = priceDiscAdmTransArrayBuffer.value(1);
        #        if (tempPriceDiscAdmTrans.JournalNum != _priceDiscAdmTrans.JournalNum
        #            // <GEERU>
        #            || (countryRegion_RU && tempPriceDiscAdmTrans.AgreementHeaderExt_RU != _priceDiscAdmTrans.AgreementHeaderExt_RU)
        #            // </GEERU>
        #            || tempPriceDiscAdmTrans.Currency != _priceDiscAdmTrans.Currency
        #            || tempPriceDiscAdmTrans.UnitId != _priceDiscAdmTrans.UnitId
        #            || tempPriceDiscAdmTrans.InventDimId != _priceDiscAdmTrans.InventDimId
        #            || tempPriceDiscAdmTrans.Relation != _priceDiscAdmTrans.Relation
        #            || tempPriceDiscAdmTrans.AccountRelation != _priceDiscAdmTrans.AccountRelation
        #            || tempPriceDiscAdmTrans.AccountCode != _priceDiscAdmTrans.AccountCode
        #            || tempPriceDiscAdmTrans.ItemRelation != _priceDiscAdmTrans.ItemRelation
        #            || tempPriceDiscAdmTrans.ItemCode != _priceDiscAdmTrans.ItemCode)
        #        {
        #            for (i = 1; i <= priceDiscAdmTransArrayBufferLastIndex; i++)
        #            {
        #                firstDateOverlap = true;
        #                priceDiscAdmTrans = priceDiscAdmTransArrayBuffer.value(i);
        #                priceDiscAdmTrans.Log = '';
        #                for (j = i + 1; j <= priceDiscAdmTransArrayBufferLastIndex; j++)
        #                {
        #                    tempPriceDiscAdmTrans = priceDiscAdmTransArrayBuffer.value(j);
        #                    if (priceDiscAdmTrans.dateRangesOverlap(tempPriceDiscAdmTrans))
        #                    {
        #                        if (priceDiscAdmTrans.amountQuantitiesOverlap(tempPriceDiscAdmTrans))
        #                        {
        #                            hasOverlaps[i] = true;
        #                            hasOverlaps[j] = true;
        #                            overlapsFound = true;
        #                        }
        #                        else if (firstDateOverlap && tempPriceDiscAdmTrans.QuantityAmountFrom != priceDiscAdmTrans.QuantityAmountTo)
        #                        {
        #                            hasGaps[i] = true;
        #                            hasGaps[j] = true;
        #                            gapsFound = true;
        #                        }
        #                        if (firstDateOverlap)
        #                        {
        #                            firstDateOverlap = false;
        #                        }
        #                    }
        #                }
        #                if (hasOverlaps[i])
        #                {
        #                    priceDiscAdmTrans.Log = "@SYS134950";
        #                }
        #                if (hasGaps[i])
        #                {
        #                    priceDiscAdmTrans.Log += "@SYS134952";
        #                }
        #                if (priceDiscAdmTrans.Log != priceDiscAdmTrans.orig().Log)
        #                {
        #                    priceDiscAdmTrans.update();
        #                }
        #            }
        #            priceDiscAdmTransArrayBuffer = new Array(Types::Record);
        #            priceDiscAdmTransArrayBufferLastIndex = 0;
        #        }
        #    }
        #    priceDiscAdmTransArrayBuffer.value(priceDiscAdmTransArrayBufferLastIndex + 1, _priceDiscAdmTrans);
        #}
        #
      ENDSOURCE
      SOURCE #checkIfUnderCost
        #protected boolean checkIfUnderCost(PriceDiscAdmTrans priceDiscAdmTrans)
        #{
        #    PriceDiscAdmTrans       transBuffer;
        #    boolean                 check = true;
        #
        #    while select transBuffer
        #        where transBuffer.JournalNum == priceDiscAdmTrans.JournalNum
        #    {
        #        if (transBuffer.UnderCost == NoYesCombo::Yes)
        #        {
        #            check = false;
        #        }
        #    }
        #
        #    return check;
        #
        #}
      ENDSOURCE
      SOURCE #checkJournal
        #/// <summary>
        #///    Determines whether the price and discount agreement journal contains warnings.
        #/// </summary>
        #/// <param name="_acceptWarnings">
        #///    A Boolean value that specifies whether warnings are accepted; optional.
        #/// </param>
        #/// <returns>
        #///    true if only warnings are found; otherwise, false.
        #/// </returns>
        #public boolean checkJournal(boolean _acceptWarnings = true)
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #
        #    SetEnumerator                   recIdTempSetEnumerator;
        #    PriceDiscAdmTransRecIdTemp      recIdTemp;
        #
        #    PriceDiscAdmTrans               priceDiscAdmTrans;
        #
        #    overlapsFound = false;
        #    gapsFound = false;
        #    priceDiscAdmTransArrayBuffer = new Array(Types::Record);
        #
        #    // <GEERU>
        #    countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        #    // </GEERU>
        #
        #    // Validate the trade agreement lines.
        #    switch (checkActionType)
        #    {
        #        // Check the selected records only.
        #        case PriceDiscAdmCheckActionType::ValidateSelected :
        #            recIdTempSetEnumerator = priceDiscAdmTransSetSelected.getEnumerator();
        #            while (recIdTempSetEnumerator.moveNext())
        #            {
        #                recIdTemp.TransRecId = recIdTempSetEnumerator.current();
        #                recIdTemp.insert();
        #            }
        #            #WhileSelectForCheckJournal
        #                exists join recIdTemp
        #                    where priceDiscAdmTrans.RecId == recIdTemp.TransRecId
        #            {
        #                this.checkForOverlapsAndGaps(priceDiscAdmTrans);
        #            }
        #            break;
        #
        #        // Check the records with a non-empty log only.
        #        case PriceDiscAdmCheckActionType::ValidateErrorsOrWarnings :
        #            #WhileSelectForCheckJournal
        #                && priceDiscAdmTrans.Log
        #            {
        #                this.checkForOverlapsAndGaps(priceDiscAdmTrans);
        #            }
        #            break;
        #
        #        case PriceDiscAdmCheckActionType::ValidateAll :
        #        default :
        #            // Check all the records in the journal.
        #            #WhileSelectForCheckJournal
        #            {
        #                this.checkForOverlapsAndGaps(priceDiscAdmTrans);
        #            }
        #            break;
        #    }
        #
        #    // Check the remaining records in the priceDiscAdmTransArrayBuffer.
        #    priceDiscAdmTrans.clear();
        #    this.checkForOverlapsAndGaps(priceDiscAdmTrans);
        #
        #    if (overlapsFound)
        #    {
        #        switch (checkActionType)
        #        {
        #            case PriceDiscAdmCheckActionType::ValidateSelected :
        #                checkFailed("@SYS4004590");
        #                break;
        #
        #            case PriceDiscAdmCheckActionType::ValidateErrorsOrWarnings :
        #                checkFailed("@SYS4004591");
        #                break;
        #
        #            case PriceDiscAdmCheckActionType::ValidateAll :
        #            default :
        #                checkFailed("@SYS4004586");
        #                break;
        #        }
        #    }
        #    if (gapsFound)
        #    {
        #        switch (checkActionType)
        #        {
        #            case PriceDiscAdmCheckActionType::ValidateSelected :
        #                checkFailed("@SYS4004587");
        #                break;
        #
        #            case PriceDiscAdmCheckActionType::ValidateErrorsOrWarnings :
        #                checkFailed("@SYS4004588");
        #                break;
        #
        #            case PriceDiscAdmCheckActionType::ValidateAll :
        #            default :
        #                checkFailed("@SYS4004589");
        #                break;
        #        }
        #    }
        #
        #    return overlapsFound || gapsFound;
        #}
      ENDSOURCE
      SOURCE #checkJournalCheckForGaps
        #/// <summary>
        #///    Determines whether the record has warnings because of gaps.
        #/// </summary>
        #/// <param name="_priceDiscAdmTrans">
        #///     The record that will be checked.
        #/// </param>
        #/// <param name="_acceptWarnings">
        #///    A Boolean value that specifies whether warnings are accepted.
        #/// </param>
        #/// <returns>
        #///    true if warnings are found; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #///    The functionality done by this method has been reconstructed and included in the newly introduced checkForOverlapsAndGaps method.
        #/// </remarks>
        #protected boolean checkJournalCheckForGaps(PriceDiscAdmTrans _priceDiscAdmTrans, boolean _acceptWarnings)
        #{
        #    return false;
        #}
      ENDSOURCE
      SOURCE #checkJournalCheckForOverlaps
        #/// <summary>
        #///    Determines whether the record has warnings because of overlaps.
        #/// </summary>
        #/// <param name="_priceDiscAdmTrans">
        #///     The record that will be checked.
        #/// </param>
        #/// <param name="_acceptWarnings">
        #///    A Boolean value that specifies whether warnings are accepted.
        #/// </param>
        #/// <returns>
        #///    true if warnings are found; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// The functionality done by this method has been reconstructed and included in the newly introduced checkForOverlapsAndGaps method.
        #/// </remarks>
        #protected boolean checkJournalCheckForOverlaps(PriceDiscAdmTrans _priceDiscAdmTrans, boolean _acceptWarnings)
        #{
        #    return false;
        #}
      ENDSOURCE
      SOURCE #checkValidateWrite
        #/// <summary>
        #///    Determines whether the record has errors because of the execution
        #/// of <c>PriceDiscAdmTrans.validateWrite</c> method.
        #/// </summary>
        #/// <param name="_priceDiscAdmTrans">
        #///     The record that will be checked.
        #/// </param>
        #/// <returns>
        #///    The <c>Log</c> which is empty if no errors are found;
        #/// otherwise, the information about the errors.
        #/// </returns>
        #/// <remarks>
        #/// The functionality done by this method has been removed from the journal validation scenario.
        #/// </remarks>
        #protected str checkValidateWrite(PriceDiscAdmTrans _priceDiscAdmTrans)
        #{
        #    return '';
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #public class    PriceDiscAdmCheckPost
        #extends         RunBaseBatch
        #{
        #    #DEFINE.CurrentVersion(2)
        #    PriceDiscJournalNum             journalNum;
        #    PriceDiscAdmCheckActionType     checkActionType;
        #    Set                             priceDiscAdmTransSetSelected;
        #    boolean                         checkOnly;
        #    boolean                         isPosted;
        #    Array                           priceDiscAdmTransArrayBuffer;
        #    boolean                         overlapsFound;
        #    boolean                         gapsFound;
        #    // <GEERU>
        #    boolean                         countryRegion_RU;
        #    // </GEERU>
        #
        #    container                       packedSet;
        #    #localmacro.CurrentList
        #        journalNum,
        #        checkActionType,
        #        checkOnly,
        #        packedSet
        #    #EndMacro
        #
        #    #LocalMacro.FieldList
        #        Agreement,
        #        ItemCode,
        #        AccountCode,
        #        ItemRelation,
        #        AccountRelation,
        #        UnitId,
        #        QuantityAmountFrom,
        #        QuantityAmountTo,
        #        GenericCurrency,
        #        FromDate,
        #        ToDate,
        #        Amount,
        #        Currency,
        #        Percent1,
        #        Percent2,
        #        DisregardLeadTime,
        #        DeliveryTime,
        #        SearchAgain,
        #        PriceUnit,
        #        Relation,
        #        Markup,
        #        AllocateMarkup,
        #        Module,
        #        CalendarDays,
        #        InventDimId,
        #        AgreementHeaderExt_RU,
        #        InventBaileeFreeDays_RU
        #        // <GIN>
        #        , MaximumRetailPrice_IN
        #        // </GIN>
        #        , PDSCalculationId
        #    #EndMacro
        #
        #    #LocalMacro.WhileSelectForCheckJournal
        #    while select forupdate
        #            JournalNum,
        #            Currency,
        #            UnitId,
        #            InventDimId,
        #            Relation,
        #            AccountRelation,
        #            AccountCode,
        #            ItemRelation,
        #            ItemCode
        #            // <GEERU>
        #            , AgreementHeaderExt_RU
        #            // </GEERU>
        #            , FromDate,
        #            ToDate,
        #            QuantityAmountFrom,
        #            QuantityAmountTo,
        #            Log
        #        from priceDiscAdmTrans
        #        order by JournalNum,
        #            Currency,
        #            UnitId,
        #            InventDimId,
        #            Relation,
        #            AccountRelation,
        #            AccountCode,
        #            ItemRelation,
        #            ItemCode
        #            // <GEERU>
        #            , AgreementHeaderExt_RU
        #            // </GEERU>
        #             , QuantityAmountFrom
        #         where priceDiscAdmTrans.JournalNum == journalNum
        #    #EndMacro
        #
        #}
      ENDSOURCE
      SOURCE #displayProgress
        #[SysObsoleteAttribute('Execution has been refactored to run in IL hence the progress bar can no longer be used.', true)]
        #void displayProgress(PriceDiscType relation)
        #{
        #}
      ENDSOURCE
      SOURCE #initCheckActionType
        #/// <summary>
        #///   Initializes the action type.
        #/// </summary>
        #/// <param name="_checkActionType">
        #///   An action type.
        #/// </param>
        #protected void initCheckActionType(PriceDiscAdmCheckActionType _checkActionType)
        #{
        #    checkActionType = _checkActionType;
        #}
      ENDSOURCE
      SOURCE #initJournalNum
        #void initJournalNum(PriceDiscJournalNum _journalNum)
        #{
        #    ;
        #    journalNum = _journalNum;
        #}
      ENDSOURCE
      SOURCE #initPriceDiscAdmTransSetSelected
        #/// <summary>
        #///   Initializes a set of selected records.
        #/// </summary>
        #/// <param name="_priceDiscAdmTransSetSelected">
        #///   A <c>Set</c> of selected records.
        #/// </param>
        #protected void initPriceDiscAdmTransSetSelected(Set _priceDiscAdmTransSetSelected)
        #{
        #    priceDiscAdmTransSetSelected = _priceDiscAdmTransSetSelected;
        #}
      ENDSOURCE
      SOURCE #isPosted
        #boolean isPosted()
        #{
        #    return isPosted;
        #}
      ENDSOURCE
      SOURCE #new
        #void new(boolean _checkOnly = false)
        #{
        #    super();
        #
        #    checkOnly = _checkOnly;
        #}
      ENDSOURCE
      SOURCE #pack
        #public container  pack()
        #{
        #    packedSet = priceDiscAdmTransSetSelected.pack();
        #
        #    return [#CurrentVersion ,#CurrentList];
        #}
      ENDSOURCE
      SOURCE #postJournal
        #void postJournal()
        #{
        #    PriceDiscAdmTable               priceDiscAdmTable;
        #    PriceDiscAdmTrans               priceDiscAdmTrans;
        #    PriceDiscTable                  priceDiscTable;
        #
        #    PriceDiscAdmTable::deleteMarked(journalNum);
        #    priceDiscTable.skipDataMethods(true);
        #    priceDiscTable.skipEvents(true);
        #    priceDiscTable.skipDatabaseLog(true);
        #
        #    update_recordset priceDiscTable setting
        #            Agreement               = priceDiscAdmTrans.Agreement,
        #            ItemCode                = priceDiscAdmTrans.ItemCode,
        #            AccountCode             = priceDiscAdmTrans.AccountCode,
        #            ItemRelation            = priceDiscAdmTrans.ItemRelation,
        #            AccountRelation         = priceDiscAdmTrans.AccountRelation,
        #            UnitId                  = priceDiscAdmTrans.UnitId,
        #            QuantityAmountFrom      = priceDiscAdmTrans.QuantityAmountFrom,
        #            QuantityAmountTo        = priceDiscAdmTrans.QuantityAmountTo,
        #            GenericCurrency         = priceDiscAdmTrans.GenericCurrency,
        #            FromDate                = priceDiscAdmTrans.FromDate,
        #            ToDate                  = priceDiscAdmTrans.ToDate,
        #            Amount                  = priceDiscAdmTrans.Amount,
        #            Currency                = priceDiscAdmTrans.Currency,
        #            Percent1                = priceDiscAdmTrans.Percent1,
        #            Percent2                = priceDiscAdmTrans.Percent2,
        #            DeliveryTime            = priceDiscAdmTrans.DeliveryTime,
        #            SearchAgain             = priceDiscAdmTrans.SearchAgain,
        #            PriceUnit               = priceDiscAdmTrans.PriceUnit,
        #            Relation                = priceDiscAdmTrans.Relation,
        #            Markup                  = priceDiscAdmTrans.Markup,
        #            AllocateMarkup          = priceDiscAdmTrans.AllocateMarkup,
        #            Module                  = priceDiscAdmTrans.Module,
        #            CalendarDays            = priceDiscAdmTrans.CalendarDays,
        #            InventDimId             = priceDiscAdmTrans.InventDimId,
        #            DisregardLeadTime       = priceDiscAdmTrans.DisregardLeadTime,
        #            AgreementHeaderExt_RU   = priceDiscAdmTrans.AgreementHeaderExt_RU,
        #            InventBaileeFreeDays_RU = priceDiscAdmTrans.InventBaileeFreeDays_RU
        #            // <GIN>
        #            ,MaximumRetailPrice_IN   = priceDiscAdmTrans.MaximumRetailPrice_IN
        #            // </GIN>
        #    join priceDiscAdmTrans
        #            where priceDiscAdmTrans.JournalNum          == journalNum
        #                && priceDiscAdmTrans.MustBeDeleted      == NoYes::No
        #                && priceDiscAdmTrans.PriceDiscTableRef  == priceDiscTable.RecId;
        #
        #    insert_recordset priceDiscTable
        #        (#FieldList, OriginalPriceDiscAdmTransRecId)
        #    select #FieldList, RecId from priceDiscAdmTrans
        #        where priceDiscAdmTrans.JournalNum          == journalNum
        #            && priceDiscAdmTrans.MustBeDeleted      == NoYes::No
        #            && priceDiscAdmTrans.PriceDiscTableRef  == 0;
        #
        #    PriceDisc::flushPriceDiscCache();
        #
        #    priceDiscAdmTable               = PriceDiscAdmTable::find(journalNum, true);
        #    priceDiscAdmTable.Posted        = NoYes::Yes;
        #    priceDiscAdmTable.PostedDate    = systemDateGet();
        #    priceDiscAdmTable.update();
        #
        #    isPosted = true;
        #}
      ENDSOURCE
      SOURCE #progressUpdate
        #[SysObsoleteAttribute('Execution has been refactored to run in IL hence the progress bar can no longer be used.', true)]
        #void progressUpdate(str text)
        #{
        #}
      ENDSOURCE
      SOURCE #run
        #/// <summary>
        #///    Checks and posts the price and discount agreement journal.
        #/// </summary>
        #/// <param name="_acceptWarnings">
        #///    A Boolean value that specifies whether warnings are accepted.
        #/// </param>
        #/// <exception cref="M:Exception::Error">
        #///    The journal cannot be posted because it contains errors.
        #/// </exception>
        #public void run(boolean _acceptWarnings = false)
        #{
        #    boolean         warningsFound;
        #    boolean         postJournal;
        #    DialogButton    dialogButton;
        #    PriceDiscAdmCheckPostOutputContract priceDiscAdmCheckPostOutputContract;
        #
        #    startLengthyOperation();
        #    priceDiscAdmCheckPostOutputContract = PriceDiscAdmCheckPostOutputContract::create(PriceDiscAdmCheckPost::runOnServer(journalNum, checkActionType, priceDiscAdmTransSetSelected, checkOnly, _acceptWarnings));
        #    warningsFound = priceDiscAdmCheckPostOutputContract.parmWarningsFound();
        #    postJournal   = priceDiscAdmCheckPostOutputContract.parmPostJournal();
        #    isPosted      = priceDiscAdmCheckPostOutputContract.parmIsPosted();
        #    endLengthyOperation();
        #
        #    if (postJournal)
        #    {
        #        if (checkOnly)
        #        {
        #            switch (checkActionType)
        #            {
        #                case PriceDiscAdmCheckActionType::ValidateAll:
        #                    info("@SYS17146");
        #                    break;
        #                case PriceDiscAdmCheckActionType::ValidateSelected:
        #                    info("@SYS4000085");
        #                    break;
        #                case PriceDiscAdmCheckActionType::ValidateErrorsOrWarnings:
        #                    info("@SYS4000086");
        #                    break;
        #            }
        #        }
        #        else
        #        {
        #            info("@SYS5815");
        #        }
        #    }
        #    else
        #    {
        #        if (!checkOnly)
        #        {
        #            if (warningsFound
        #            && !this.isInBatch())
        #            {
        #                infolog.viewUpdate();
        #                dialogButton = Box::okCancel("@SYS138612", DialogButton::Ok);
        #                if (dialogButton == DialogButton::Ok)
        #                {
        #                    infolog.clear(0);
        #                    this.run(true);
        #                }
        #                else
        #                {
        #                    throw error("@SYS24802");
        #                }
        #            }
        #            else
        #            {
        #                throw error("@SYS24802");
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #runsImpersonated
        #public boolean runsImpersonated()
        #{
        #    return true;
        #}
        #
      ENDSOURCE
      SOURCE #unpack
        #public boolean  unpack(container  packedClass)
        #{
        #    Version     version = RunBase::getVersion(packedClass);
        #
        #    switch (version)
        #    {
        #        case #CurrentVersion:
        #            [version,#CurrentList] = packedClass;
        #            priceDiscAdmTransSetSelected = Set::create(packedSet);
        #            break;
        #        default:
        #            return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #description
        #private static ClassDescription  description()
        #{
        #    return "@SYS4004676";
        #}
        #
      ENDSOURCE
      SOURCE #main
        #static void main(Args args)
        #{
        #    Object                      callerForm;
        #    FormDataSource              dataSource;
        #    PriceDiscAdmCheckActionType checkActionType;
        #    Set                         priceDiscAdmTransSetSelected;
        #    PriceDiscAdmTrans           priceDiscAdmTrans;
        #    PriceDiscAdmTable           priceDiscAdmTable;
        #    PriceDiscAdmCheckPost       priceDiscAdmCheck;
        #    //MP
        #    boolean check;
        #    //MP
        #
        #    // If the enumeration type is PriceDiscAdmCheckActionType, only checking will be done on the records
        #    if(args.parmEnumType() == enumNum(PriceDiscAdmCheckActionType))
        #    {
        #        priceDiscAdmCheck = new PriceDiscAdmCheckPost(true);
        #        checkActionType = args.parmEnum();
        #    }
        #    else
        #    {
        #        priceDiscAdmCheck = new PriceDiscAdmCheckPost(args.parmEnum());
        #        // The default action type is validate all
        #        checkActionType = PriceDiscAdmCheckActionType::ValidateAll;
        #    }
        #
        #    if (!(args.dataset() == tableNum(PriceDiscAdmTrans)))
        #    {
        #        throw error("@SYS18626");
        #    }
        #
        #    priceDiscAdmTrans = args.record();
        #    if (!priceDiscAdmTrans.JournalNum)
        #    {
        #        throw error("@SYS59010");
        #    }
        #
        #    // MP
        #    check = priceDiscAdmCheck.checkIfUnderCost(priceDiscAdmTrans);
        #    if (check == false)
        #    {
        #        throw error(strFmt("%1 journal cannot be posted. Sales prices lower than cost!", priceDiscAdmTrans.JournalNum));
        #    }
        #    // MP
        #
        #    if (!priceDiscAdmTrans.RecId)
        #    {
        #        throw info("@SYS27671");
        #    }
        #
        #    if (args.parmEnumType() != enumNum(PriceDiscAdmCheckActionType) && !args.parmEnum())
        #    {
        #        priceDiscAdmTable = PriceDiscAdmTable::find(priceDiscAdmTrans.JournalNum);
        #        if (priceDiscAdmTable.Posted)
        #        {
        #            throw error("@SYS21497");
        #        }
        #
        #    }
        #
        #    priceDiscAdmCheck.initJournalNum(priceDiscAdmTrans.JournalNum);
        #
        #
        #    priceDiscAdmTransSetSelected = new Set(typeName2Type(extendedTypeStr(RecId)));
        #    if(checkActionType == PriceDiscAdmCheckActionType::ValidateSelected)
        #    {
        #        dataSource = args.record().dataSource();
        #        // If the user selects all the records in the journal, the check action type will be switched to ValidateAll.
        #        if (dataSource.recordsMarked().lastIndex() == dataSource.totalNumberOfRows())
        #        {
        #            checkActionType = PriceDiscAdmCheckActionType::ValidateAll;
        #        }
        #        else
        #        {
        #            // Generate the priceDiscAdmTransSetSelected by using the selected records from the Form PriceDiscAdm.
        #            for (priceDiscAdmTrans = getFirstSelection(dataSource); priceDiscAdmTrans; priceDiscAdmTrans = dataSource.getNext())
        #            {
        #                priceDiscAdmTransSetSelected.add(priceDiscAdmTrans.RecId);
        #            }
        #        }
        #    }
        #    priceDiscAdmCheck.initPriceDiscAdmTransSetSelected(priceDiscAdmTransSetSelected);
        #    priceDiscAdmCheck.initCheckActionType(checkActionType);
        #    priceDiscAdmCheck.saveLast();
        #    if (priceDiscAdmCheck.prompt())
        #    {
        #        priceDiscAdmCheck.run();
        #
        #        callerForm  = args.caller();
        #        if (callerForm)
        #        {
        #            if (priceDiscAdmCheck.isPosted())
        #                callerForm.bookResearch();
        #            else
        #                callerForm.bookRefresh();
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #runIL
        #/// <summary>
        #///     Executes CIL code validating and posting the journal.
        #/// </summary>
        #/// <param name="_packedPriceDiscAdmCheckPostInputContract">
        #/// A packed <c>PriceDiscAdmCheckPostInputContract</c> class.
        #/// </param>
        #/// <returns>
        #/// A packed <c>PriceDiscAdmCheckPostOutputContract</c> class.
        #/// </returns>
        #protected server static container runIL(container _packedPriceDiscAdmCheckPostInputContract)
        #{
        #    PriceDiscAdmCheckPost               priceDiscAdmCheck;
        #    PriceDiscAdmCheckPostOutputContract priceDiscAdmCheckPostOutputContract = PriceDiscAdmCheckPostOutputContract::construct();
        #    PriceDiscAdmCheckPostInputContract  priceDiscAdmCheckPostInputContract  = PriceDiscAdmCheckPostInputContract::create(_packedPriceDiscAdmCheckPostInputContract);
        #    PriceDiscJournalNum                 journalNum                          = priceDiscAdmCheckPostInputContract.parmJournalNum();
        #    PriceDiscAdmCheckActionType         checkActionType                     = priceDiscAdmCheckPostInputContract.parmCheckActionType();
        #    Set                                 priceDiscAdmTransSetSelected        = priceDiscAdmCheckPostInputContract.parmPriceDiscAdmTransSetSelected();
        #    boolean                             checkOnly                           = priceDiscAdmCheckPostInputContract.parmCheckOnly();
        #    boolean                             acceptWarnings                      = priceDiscAdmCheckPostInputContract.parmAcceptWarnings();
        #    boolean                             warningsFound;
        #    boolean                             postJournal;
        #
        #    priceDiscAdmCheck = new PriceDiscAdmCheckPost(checkOnly);
        #    priceDiscAdmCheck.initJournalNum(journalNum);
        #    priceDiscAdmCheck.initCheckActionType(checkActionType);
        #    priceDiscAdmCheck.initPriceDiscAdmTransSetSelected(priceDiscAdmTransSetSelected);
        #
        #    ttsbegin;
        #    if (checkOnly)
        #    {
        #        warningsFound   = priceDiscAdmCheck.checkJournal();
        #    }
        #
        #    postJournal = !warningsFound || acceptWarnings;
        #
        #    if (postJournal && !checkOnly)
        #    {
        #        priceDiscAdmCheck.postJournal();
        #    }
        #    ttscommit;
        #
        #    priceDiscAdmCheckPostOutputContract.parmWarningsFound(warningsFound);
        #    priceDiscAdmCheckPostOutputContract.parmPostJournal(postJournal);
        #    priceDiscAdmCheckPostOutputContract.parmIsPosted(priceDiscAdmCheck.isPosted());
        #
        #    return priceDiscAdmCheckPostOutputContract.pack();
        #}
      ENDSOURCE
      SOURCE #runOnServer
        #/// <summary>
        #///     Transitions to server side execution.
        #/// </summary>
        #/// <param name="_journalNum">
        #///     A PriceDiscJournalNum type indidating the journal number to be validated and posted.
        #/// </param>
        #/// <param name="_checkActionType">
        #///     An enumeration indicating which records will be checked.
        #/// </param>
        #/// <param name="_priceDiscAdmTransSetSelected">
        #///     A <c>Set</c> containing all the selected records.
        #/// </param>
        #/// <param name="_checkOnly">
        #///     A boolean indicating whether only validation should be executed.
        #/// </param>
        #/// <param name="_acceptWarnings">
        #///     A boolean indicating whether warnings should be ignored.
        #/// </param>
        #/// <returns>
        #///     A packed <c>PriceDiscAdmCheckPostOutputContract</c> class.
        #/// </returns>
        #server public static container runOnServer(
        #    PriceDiscJournalNum         _journalNum,
        #    PriceDiscAdmCheckActionType _checkActionType,
        #    Set                         _priceDiscAdmTransSetSelected,
        #    boolean                     _checkOnly,
        #    boolean                     _acceptWarnings)
        #{
        #    XppILExecutePermission              xppILExecutePermission;
        #    container                           packedPriceDiscAdmCheckPostOutputContract;
        #    PriceDiscAdmCheckPostInputContract  priceDiscAdmCheckPostInputContract = PriceDiscAdmCheckPostInputContract::construct();
        #
        #    priceDiscAdmCheckPostInputContract.parmJournalNum(_journalNum);
        #    priceDiscAdmCheckPostInputContract.parmCheckActionType(_checkActionType);
        #    priceDiscAdmCheckPostInputContract.parmPriceDiscAdmTransSetSelected(_priceDiscAdmTransSetSelected);
        #    priceDiscAdmCheckPostInputContract.parmCheckOnly(_checkOnly);
        #    priceDiscAdmCheckPostInputContract.parmAcceptWarnings(_acceptWarnings);
        #
        #    // Transition to IL to validate and post the journal.
        #    xppILExecutePermission = new XppILExecutePermission();
        #    xppILExecutePermission.assert();
        #    packedPriceDiscAdmCheckPostOutputContract = runClassMethodIL(classStr(PriceDiscAdmCheckPost),
        #                                                                 staticMethodStr(PriceDiscAdmCheckPost, runIL),
        #                                                                 priceDiscAdmCheckPostInputContract.pack());
        #    CodeAccessPermission::revertAssert();
        #
        #    return packedPriceDiscAdmCheckPostOutputContract;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #PriceDiscAdm
  PROPERTIES
    Name                #PriceDiscAdm
    Origin              #{493F7E38-5BE8-4439-9A01-85B148093157}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #class FormRun extends ObjectRun
      #{
      #    PriceDiscAdmTable   callerpriceDiscAdmTable;
      #    FormRun             callerForm;
      #
      #    #MACROLIB.Resource
      #    #ResAppl
      #
      #    InventDimParm           inventDimParmPriceSetup;
      #    InventDimCtrl_Frm       inventDimFormSetup;
      #
      #    Map                     lineMessage;
      #    TableGroupAll           itemCode;
      #
      #    ImageListAppl_Infolog   imageList;
      #
      #    InventDimParm           inventDimParmPriceWarning;
      #
      #    boolean                 initFromPriceDiscAdmTrans;
      #
      #    // <GEERU>
      #    #ISOCountryRegionCodes
      #    boolean countryRegion_RU;
      #    EcoResCategoryTreeDatasource        mHierarchyTree;
      #    boolean                             selectedHierachyIsSpecial;
      #    boolean                             retailComparePriceMode;
      #    SysFormSplitter_X                   mFormSplitter;
      #    RetailPriceDiscResearchCalc         retailPriceDiscResearchCalc;
      #    PriceDiscJournalNum                 lastUsedPriceDiscJournalNum;
      #    RetailPriceDiscAdmTable             retailPriceDiscAdmTable;
      #    // </GEERU>
      #
      #    // <GIN>
      #    boolean countryRegion_IN;
      #    // </GIN>
      #}
    ENDSOURCE
    SOURCE #bookRefresh
      #void bookRefresh()
      #{
      #    ;
      #    priceDiscAdmTrans_ds.research();
      #}
    ENDSOURCE
    SOURCE #bookResearch
      #void bookResearch()
      #{
      #    ;
      #    element.close();
      #
      #    if (callerpriceDiscAdmTable.dataSource())
      #    {
      #        callerForm.bookResearch();
      #    }
      #}
    ENDSOURCE
    SOURCE #checkLines
      #int checkLines(PriceDiscAdmTrans _priceDiscAdmTrans)
      #{
      #    InventDimParm       inventDimParmAll,
      #                        inventDimParmItem,
      #                        inventDimParmInventDim;
      #
      #    InventDim           inventDimLocal,
      #                        inventDimAll,
      #                        inventDimItem,
      #                        inventDimBlank;
      #
      #    InventTable                         inventTable;
      #    InventDimGroupSetup                 inventDimGroupSetup;
      #
      #    if (_priceDiscAdmTrans.ItemCode == TableGroupAll::Table && _priceDiscAdmTrans.ItemRelation)
      #    {
      #        inventDimLocal    = InventDim::find(_priceDiscAdmTrans.InventDimId);
      #
      #        if (InventDim::isInventDimEqual(inventDimBlank,inventDimLocal))
      #        {
      #            return -1;
      #        }
      #
      #        inventTable = InventTable::find(_priceDiscAdmTrans.ItemRelation);
      #        inventDimGroupSetup = InventDimGroupSetup::newInventTable(inventTable);
      #
      #        switch(_priceDiscAdmTrans.Module)
      #        {
      #            case ModuleInventCustVend::Cust :
      #                inventDimGroupSetup.inventDimParmActiveSalesPrice(inventDimParmAll);
      #                inventDimGroupSetup.inventDimParmActiveSalesPriceProductDim(inventDimParmItem);
      #                break;
      #
      #            case ModuleInventCustVend::Vend :
      #                inventDimGroupSetup.inventDimParmActivePurchPrice(inventDimParmAll);
      #                inventDimGroupSetup.inventDimParmActivePurchPriceProductDim(inventDimParmItem);
      #                break;
      #
      #            case ModuleInventCustVend::Invent :
      #                if (element.salesPrice(_priceDiscAdmTrans.Module, _priceDiscAdmTrans.Relation))
      #                {
      #                    inventDimGroupSetup.inventDimParmActiveSalesPrice(inventDimParmAll);
      #                    inventDimGroupSetup.inventDimParmActiveSalesPriceProductDim(inventDimParmItem);
      #                }
      #                else
      #                {
      #                    inventDimGroupSetup.inventDimParmActivePurchPrice(inventDimParmAll);
      #                    inventDimGroupSetup.inventDimParmActivePurchPriceProductDim(inventDimParmItem);
      #                }
      #                break;
      #        }
      #
      #        inventDimAll.copyDimParmDim(inventDimGroupSetup,inventDimLocal,inventDimParmAll);
      #        inventDimItem.copyDimParmDim(inventDimGroupSetup,inventDimLocal,inventDimParmItem);
      #
      #        if  (!inventDimParmAll.isInventDimEqualInventDimParm(inventDimAll) ||
      #             !inventDimParmItem.isInventDimEqualInventDimParm(inventDimItem))
      #            return imageList.image(#ImageError);
      #
      #        inventDimParmInventDim.initFromInventDim(inventDimLocal);
      #        if (!InventDimParm::isInventDimParmEqual(inventDimParmInventDim, inventDimParmAll) &&
      #            !InventDimParm::isInventDimParmEqual(inventDimParmInventDim, inventDimParmItem))
      #        {
      #            return imageList.image(#ImageWarning);
      #        }
      #    }
      #
      #    return -1;
      #}
    ENDSOURCE
    SOURCE #doActiveButtons
      #/// <summary>
      #/// Activates or deactivates buttons depending on the form state.
      #/// </summary>
      #/// <param name="_enableDeleteButton">
      #/// A boolean that indicates if the delete button should be enabled; optional.
      #/// </param>
      #public void doActiveButtons(boolean _enableDeleteButton = priceDiscAdmTrans.RecId)
      #{
      #    boolean canUpdateLines = callerpriceDiscAdmTable.canUpdateLines()
      #    ;
      #    if (callerpriceDiscAdmTable.Posted)
      #    {
      #        priceDiscAdmCheck.enabled(false);
      #        priceDiscAdmPost.enabled(false);
      #        priceDiscAdmSearch.enabled(false);
      #        priceDiscAdmAdjust.enabled(false);
      #        priceDiscAdmCopy.enabled(false);
      #        priceDiscAdmDelete.enabled(false);
      #        deleteTradeAgreements.enabled(false);
      #
      #        priceDiscAdmTrans_DS.allowEdit(false);
      #        priceDiscAdmTrans_DS.allowCreate(false);
      #        priceDiscAdmTrans_DS.allowDelete(false);
      #
      #        PDSCalculationTable.enabled(false);
      #    }
      #    else
      #    {
      #        priceDiscAdmCheck.enabled(true);
      #        priceDiscAdmPost.enabled(true);
      #
      #        if (PriceDiscAdmTable::find(priceDiscAdmTrans.JournalNum).LockedForDeletion)
      #        {
      #            priceDiscAdmSearch.enabled(false);
      #            priceDiscAdmAdjust.enabled(false);
      #            priceDiscAdmCopy.enabled(false);
      #            priceDiscAdmDelete.enabled(false);
      #            deleteTradeAgreements.enabled(true);
      #
      #            priceDiscAdmTrans_DS.allowEdit(false);
      #            priceDiscAdmTrans_DS.allowCreate(false);
      #            priceDiscAdmTrans_DS.allowDelete(false);
      #
      #            priceDiscAdmDelete.enabled(false);
      #        }
      #        else
      #        {
      #            priceDiscAdmSearch.enabled(true);
      #            priceDiscAdmAdjust.enabled(true);
      #            priceDiscAdmCopy.enabled(true);
      #            priceDiscAdmDelete.enabled(true);
      #            deleteTradeAgreements.enabled(true);
      #
      #            priceDiscAdmTrans_DS.allowEdit(true);
      #            // <GEERU>
      #            if (!retailComparePriceMode)
      #            {
      #            // </GEERU>
      #                priceDiscAdmTrans_DS.allowCreate(true);
      #            // <GEERU>
      #            }
      #            // </GEERU>
      #            priceDiscAdmTrans_DS.allowDelete(true);
      #
      #            priceDiscAdmDelete.enabled(_enableDeleteButton);
      #        }
      #
      #        priceDiscAdmDelete.skip(!priceDiscAdmDelete.enabled());
      #
      #        PDSCalculationTable.enabled(true);
      #    }
      #
      #    excelExportButton.enabled(canUpdateLines);
      #    addProductsButton.enabled(canUpdateLines);
      #}
    ENDSOURCE
    SOURCE #enableActiveField_IN
      #/// <summary>
      #/// Enable/disable India fields.
      #/// </summary>
      #// <GIN>
      #void enableActiveField_IN()
      #{
      #    boolean canEdit;
      #
      #    // MRP is not allowed to be edited unless below conditions are all matched
      #    // - Relation is set to "Price (purch)" or "Price (sales)"
      #    // - Item code is set to "Table"
      #    // - Item relation is set to a valid item ID
      #    canEdit = (priceDiscAdmTrans.Relation == PriceType::PricePurch ||
      #                priceDiscAdmTrans.Relation == PriceType::PriceSales)
      #                && priceDiscAdmTrans.ItemCode == TableGroupAll::Table
      #                && priceDiscAdmTrans.ItemRelation != "";
      #
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, MaximumRetailPrice_IN)).skip(!canEdit);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, MaximumRetailPrice_IN)).allowEdit(canEdit);
      #}
      #// </GIN>
    ENDSOURCE
    SOURCE #getCategoryHierarchy
      #private EcoResCategoryHierarchy getCategoryHierarchy()
      #{
      #    return EcoResCategoryHierarchy::find(categoryHierarchyReferenceGroup.value());
      #}
    ENDSOURCE
    SOURCE #init
      #void init()
      #{
      #    super();
      #
      #    if (! element.args().caller() || ! element.args().dataset() || !element.args().record().RecId)
      #    {
      #        throw error(strFmt("@SYS22678",element.name()));
      #    }
      #
      #    callerForm = element.args().caller();
      #
      #    imageList = new ImageListAppl_Infolog();
      #    priceDiscIcon.imageList(imageList.imageList());
      #
      #    lineMessage = new Map(typeName2Type(extendedTypeStr(RecId)), Types::Integer);
      #
      #    reference.text("@SYS70185");
      #    warningText.text("");
      #
      #    element.updateDesign(InventDimFormDesignUpdate::Init);
      #    element.doActiveButtons();
      #    // <GEERU>
      #    countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
      #    // </GEERU>
      #
      #    // <GIN>
      #    countryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
      #    // </GIN>
      #
      #    switch (element.args().record().TableId)
      #    {
      #        case (tableNum(PriceDiscAdmTable)) :
      #            callerpriceDiscAdmTable = element.args().record();
      #            element.doActiveButtons();
      #            break;
      #    }
      #
      #    if (RetailSMB::IsRetailSMBEnabled())
      #    {
      #        RetailSMB::SetVisible(element);
      #    }
      #
      #    // <GEERU>
      #    if (element.args().menuItemName() == menuitemDisplayStr(RetailPriceDiscResearch))
      #    {
      #        this.initRetailComparePriceMode();
      #    }
      #    else
      #    {
      #        TmpRetailPriceDiscAdmTrans_ds.queryBuildDataSource().enabled(false);
      #        TmpRetailPriceDiscAdmTrans_ds.joinSource(null);
      #        TmpRetailPriceDiscAdmTrans_ds.linkType(FormLinkType::Delayed);
      #    }
      #    // </GEERU>
      #}
    ENDSOURCE
    SOURCE #initCategoryHierarchy
      #private void initCategoryHierarchy()
      #{
      #    mFormSplitter = new SysFormSplitter_X(verticalSplitter, categoryTree, element);
      #    this.initializeCategoryHierarchy();
      #    this.initializeCategoryTree();
      #}
    ENDSOURCE
    SOURCE #initializeCategoryHierarchy
      #private void initializeCategoryHierarchy()
      #{
      #    if (retailPriceDiscAdmTable.EcoResCategoryHierarchyId)
      #    {
      #        categoryHierarchyReferenceGroup.value(retailPriceDiscAdmTable.EcoResCategoryHierarchyId);
      #    }
      #    else
      #    {
      #        categoryHierarchyReferenceGroup.value(EcoResCategoryHierarchy::findDefaultFormHierarchyRecId());
      #    }
      #}
    ENDSOURCE
    SOURCE #initializeCategoryTree
      #/// <summary>
      #/// Initializes variables for the category tree control.
      #/// </summary>
      #public void initializeCategoryTree()
      #{
      #    EcoResCategoryLookupParameters lookupParameters = new EcoResCategoryLookupParameters(false, false, false);
      #    EcoResCategoryHierarchy retailCategoryHierarchy = this.getCategoryHierarchy();
      #    EcoResCategory root = EcoResCategory::getRoot(retailCategoryHierarchy.RecId);
      #
      #    selectedHierachyIsSpecial = EcoResCategoryHierarchyRole::existRoleHierarchyPair(EcoResCategoryNamedHierarchyRole::RetailSpecialGroup, retailCategoryHierarchy.RecId);
      #
      #    mHierarchyTree = new EcoResCategoryTreeDatasource( ecoResCategory_ds,
      #                                                       hierarchyTreeCtrl,
      #                                                       fieldNum(EcoResCategory, RecId),
      #                                                       fieldNum(EcoResCategory, ParentCategory),
      #                                                       fieldNum(EcoResCategory, Name),
      #                                                       false /* No ID in description */,
      #                                                       true,
      #                                                       fieldNum(EcoResCategory, Code),
      #                                                       retailCategoryHierarchy,
      #                                                       null,
      #                                                       lookupParameters,
      #                                                       fieldNum(EcoResCategory, NestedSetLeft) /* for tree sort order */
      #                                                       );
      #
      #    mHierarchyTree.initRoot(root.Name, root.RecId, mHierarchyTree.image(root) );
      #}
    ENDSOURCE
    SOURCE #initRecord
      #void  initRecord()
      #{
      #    boolean canEdit;
      #
      #    priceDiscAdmTrans.initFromItemCode();
      #
      #    if (priceDiscAdmTrans.PriceDiscTableRef)
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Relation)).skip(true);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Relation)).allowEdit(false);
      #    }
      #    else
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Relation)).skip(false);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Relation)).allowEdit(true);
      #    }
      #
      #    if (priceDiscAdmTrans.Relation == PriceType::EndDiscPurch ||
      #        priceDiscAdmTrans.Relation == PriceType::EndDiscSales)
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemCode)).skip(true);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemCode)).allowEdit(false);
      #        priceDiscAdmTrans.ItemCode     = TableGroupAll::All;
      #        priceDiscAdmTrans.ItemRelation = '';
      #    }
      #    else
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemCode)).skip(false);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemCode)).allowEdit(true);
      #    }
      #
      #    if (priceDiscAdmTrans.Relation == PriceType::PricePurch)
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, CalendarDays)).skip(false);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, CalendarDays)).allowEdit(true);
      #    }
      #    else
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, CalendarDays)).skip(true);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, CalendarDays)).allowEdit(false);
      #    }
      #
      #    priceDiscAdmTrans_ds.modifiedCurrency();
      #    priceDiscAdmTrans_ds.modifiedGenericCurrency();
      #
      #    if (priceDiscAdmTrans.ItemCode == TableGroupAll::All)
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemRelation)).skip(true);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemRelation)).allowEdit(false);
      #    }
      #    else
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemRelation)).skip(false);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemRelation)).allowEdit(true);
      #    }
      #
      #    if (priceDiscAdmTrans.AccountCode == TableGroupAll::All)
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AccountRelation)).skip(true);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AccountRelation)).allowEdit(false);
      #    }
      #    else
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AccountRelation)).skip(false);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AccountRelation)).allowEdit(true);
      #    }
      #
      #    canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Percent1));
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent1)).skip(!canEdit);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent1)).allowEdit(canEdit);
      #
      #    canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Percent2));
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent2)).skip(!canEdit);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent2)).allowEdit(canEdit);
      #
      #    canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Markup));
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Markup)).skip(!canEdit);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Markup)).allowEdit(canEdit);
      #
      #    canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, PriceUnit));
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PriceUnit)).skip(!canEdit);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PriceUnit)).allowEdit(canEdit);
      #
      #    canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, DeliveryTime));
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, DeliveryTime)).skip(!canEdit);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, DeliveryTime)).allowEdit(canEdit);
      #
      #    canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, DisregardLeadTime));
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, DisregardLeadTime)).skip(!canEdit);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, DisregardLeadTime)).allowEdit(canEdit);
      #
      #    if (    priceDiscAdmTrans.relation == PriceType::PricePurch
      #        ||  priceDiscAdmTrans.relation == PriceType::PriceSales)
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PDSCalculationId)).allowEdit(true);
      #    }
      #    else
      #    {
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PDSCalculationId)).allowEdit(false);
      #    }
      #
      #    // <GEERU>
      #    if (countryRegion_RU)
      #    {
      #        canEdit =  (   (   priceDiscAdmTrans.Module == ModuleInventCustVend::Cust
      #                        || priceDiscAdmTrans.Module == ModuleInventCustVend::Vend)
      #                    && priceDiscAdmTrans.AccountCode == TableGroupAll::Table
      #                    && priceDiscAdmTrans.AccountRelation);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AgreementHeaderExt_RU)).skip(!canEdit);
      #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AgreementHeaderExt_RU)).allowEdit(canEdit);
      #
      #        switch (priceDiscAdmTrans.Relation)
      #        {
      #            case PriceType::PricePurch,
      #                 PriceType::LineDiscPurch,
      #                 PriceType::MultiLineDiscPurch,
      #                 PriceType::EndDiscPurch :
      #
      #                inventBailee_RU.visible(false);
      #                break;
      #
      #            case PriceType::PriceSales,
      #                 PriceType::LineDiscSales,
      #                 PriceType::MultiLineDiscSales,
      #                 PriceType::EndDiscSales :
      #
      #                inventBailee_RU.visible(true);
      #                break;
      #        }
      #    }
      #    // </GEERU>
      #
      #    // <GIN>
      #    if (countryRegion_IN)
      #    {
      #        this.enableActiveField_IN();
      #    }
      #    // </GIN>
      #}
    ENDSOURCE
    SOURCE #initRetailComparePriceMode
      #private void initRetailComparePriceMode()
      #{
      #    retailComparePriceMode = true;
      #
      #    retailPriceDiscResearchCalc = RetailPriceDiscResearchCalc::construct();
      #    TmpRetailPriceDiscAdmTrans.linkPhysicalTableInstance(retailPriceDiscResearchCalc.getTmpRetailPriceDiscAdmTrans());
      #
      #    this.updateTmpRetailPriceDiscAdmTrans();
      #
      #    element.initCategoryHierarchy();
      #
      #    PriceDiscAdmTrans_ds.insertIfEmpty(false);
      #    PriceDiscAdmTrans_ds.allowCreate(false);
      #
      #    PriceDiscAdmSearch.visible(false);
      #    PriceDiscAdmCopy.visible(false);
      #    PriceDiscAdmCopyLine.visible(false);
      #    AddProductsButton.visible(false);
      #    PDSCalculationTable.visible(false);
      #
      #    RetailAdditionalDataStatus.visible(true);
      #
      #    InventDim_ds.allowEdit(false);
      #
      #    CategoryTree.visible(true);
      #    VerticalSplitter.visible(true);
      #
      #    RetailCategoryPriceRule.visible(true);
      #}
      #
    ENDSOURCE
    SOURCE #inventDimSetupObject
      #Object inventDimSetupObject()
      #{
      #    return inventDimFormSetup;
      #}
    ENDSOURCE
    SOURCE #itemId
      #ItemId itemId()
      #{
      #    ;
      #
      #    return priceDiscAdmTrans.itemId();
      #}
    ENDSOURCE
    SOURCE #refreshPriceDiscAdmTrans
      #void refreshPriceDiscAdmTrans()
      #{
      #    PriceDiscAdmTrans_ds.executeQuery();
      #    PriceDiscAdmTrans_ds.refresh();
      #}
    ENDSOURCE
    SOURCE #refreshTmpRetailPriceDiscAdmTrans
      #/// <summary>
      #/// Recreates records in the <c>TmpRetailPriceDiscAdmTrans</c> table .
      #/// </summary>
      #public void refreshTmpRetailPriceDiscAdmTrans()
      #{
      #    if (retailComparePriceMode)
      #    {
      #        retailPriceDiscResearchCalc.refreshTable();
      #        TmpRetailPriceDiscAdmTrans_ds.refresh();
      #    }
      #}
    ENDSOURCE
    SOURCE #salesPrice
      #boolean salesPrice(PriceDiscModule _module, PriceType _relationType)
      #{
      #    switch (_module)
      #    {
      #        case ModuleInventCustVend::Cust :   return true;
      #        case ModuleInventCustVend::Invent:
      #            if (_relationType == PriceType::EndDiscSales ||
      #                _relationType == PriceType::LineDiscSales ||
      #                _relationType == PriceType::MultiLineDiscSales ||
      #                _relationType == PriceType::PriceSales)
      #                return true;
      #    }
      #
      #    return false;
      #}
    ENDSOURCE
    SOURCE #setDeletionSwitch
      #public void setDeletionSwitch()
      #{
      #    boolean deleteRestoreSwitch;
      #
      #    deleteRestoreSwitch    = !PriceDiscAdmTable::find(priceDiscAdmTrans.JournalNum).LockedForDeletion;
      #
      #    // Disable grid and fields
      #    element.lock();
      #    grid.highlightActive(deleteRestoreSwitch);
      #    grid.allowEdit(deleteRestoreSwitch);
      #
      #    priceDiscAdmTrans_ds.allowDelete(deleteRestoreSwitch);
      #    // <GEERU>
      #    if (!retailComparePriceMode)
      #    {
      #    // </GEERU>
      #        priceDiscAdmTrans_ds.allowCreate(deleteRestoreSwitch);
      #    // <GEERU>
      #    }
      #    // </GEERU>
      #    priceDiscAdmTrans_ds.allowEdit(deleteRestoreSwitch);
      #
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, FromDate)).skip(!deleteRestoreSwitch);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ToDate)).skip(!deleteRestoreSwitch);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Markup)).skip(!deleteRestoreSwitch);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PriceUnit)).skip(!deleteRestoreSwitch);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent1)).skip(!deleteRestoreSwitch);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent2)).skip(!deleteRestoreSwitch);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, DeliveryTime)).skip(!deleteRestoreSwitch);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, CalendarDays)).skip(!deleteRestoreSwitch);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).skip(!deleteRestoreSwitch);
      #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, SearchAgain)).skip(!deleteRestoreSwitch);
      #
      #    // Disable buttons
      #    priceDiscAdmSearch.enabled(deleteRestoreSwitch);
      #    priceDiscAdmSearch.skip(!deleteRestoreSwitch);
      #    priceDiscAdmAdjust.enabled(deleteRestoreSwitch);
      #    priceDiscAdmAdjust.skip(!deleteRestoreSwitch);
      #    priceDiscAdmCopy.enabled(deleteRestoreSwitch);
      #    priceDiscAdmCopy.skip(!deleteRestoreSwitch);
      #
      #    priceDiscAdmDelete.enabled(priceDiscAdmTrans.RecId && deleteRestoreSwitch);
      #    priceDiscAdmDelete.skip(!priceDiscAdmDelete.enabled());
      #
      #    if (!deleteRestoreSwitch)
      #    {
      #        deleteTradeAgreements.text("@SYS303901");
      #    }
      #    else
      #    {
      #        deleteTradeAgreements.text("@SYS138894");
      #    }
      #
      #    priceDiscAdmTrans_ds.executeQuery();
      #    element.unLock();
      #    element.redraw();
      #}
    ENDSOURCE
    SOURCE #setReferenceText
      #void setReferenceText()
      #{;
      #    if (inventDimParmPriceSetup.toString())
      #        reference.text(strFmt("@SYS70184",inventDimParmPriceSetup.toString()));
      #    else
      #        reference.text(strFmt("@SYS70185",inventDimParmPriceSetup.toString()));
      #
      #    warningText.text("");
      #
      #    if (!lineMessage.exists(priceDiscAdmTrans.RecId))
      #        lineMessage.insert(priceDiscAdmTrans.RecId,element.checkLines(priceDiscAdmTrans));
      #
      #    if (lineMessage.lookup(priceDiscAdmTrans.RecId) != -1 && inventDimParmPriceWarning.toString())
      #        warningText.text(strFmt("@SYS70190",inventDimParmPriceWarning.toString()));
      #
      #}
    ENDSOURCE
    SOURCE #updateDesign
      #void updateDesign(InventDimFormDesignUpdate mode)
      #{
      #    InventDimParm           inventDimParmVisible;
      #    InventDimParm           inventDimParmEnabled;
      #    InventDimGroupSetup     inventDimGroupSetup;
      #    InventTable             localInventTable;
      #
      #    switch (mode)
      #    {
      #        case InventDimFormDesignUpdate::Init          :
      #        case InventDimFormDesignUpdate::LinkActive    :
      #            if (!inventDimFormSetup)
      #            {
      #                inventDimFormSetup  = InventDimCtrl::newFromForm(element);
      #            }
      #
      #            inventDimFormSetup.parmSkipOnHandLookUp(true);
      #
      #            if (priceDiscAdmTrans.ItemCode == TableGroupAll::Table)
      #            {
      #                inventDimParmVisible.initPriceDiscDimAllGrp();
      #            }
      #            else
      #            {
      #                inventDimParmVisible.clear();
      #            }
      #
      #            inventDimFormSetup.parmDimParmVisibleGrid(inventDimParmVisible);
      #
      #        case InventDimFormDesignUpdate::Active        :
      #
      #            inventDimFormSetup.formActiveSetup();
      #
      #            if (priceDiscAdmTrans.ItemCode == TableGroupAll::Table && priceDiscAdmTrans.ItemRelation)
      #            {
      #
      #                localInventTable    = InventTable::find(priceDiscAdmTrans.ItemRelation);
      #                //Diviating from the common pattern using InventDimGroupSetup::newItemId(....) to allow the form to load with incomplete dimension settings on the product.
      #                inventDimGroupSetup = InventDimGroupSetup::newDimensionGroups(localInventTable.productDimensionGroup(),
      #                                                                              localInventTable.storageDimensionGroup(),
      #                                                                              localInventTable.trackingDimensionGroup());
      #                inventDimGroupSetup.inventDimParmActive(inventDimParmEnabled);
      #                switch (priceDiscAdmTrans.Module)
      #                {
      #                    case ModuleInventCustVend::Cust :
      #                        inventDimGroupSetup.inventDimParmActiveSalesPrice(inventDimParmPriceSetup);
      #                        break;
      #                    case ModuleInventCustVend::Vend :
      #                        inventDimGroupSetup.inventDimParmActivePurchPrice(inventDimParmPriceSetup);
      #                        break;
      #                }
      #            }
      #            else
      #            {
      #                inventDimParmEnabled.clear();
      #                inventDimParmPriceSetup.clear();
      #            }
      #
      #            inventDimFormSetup.parmDimParmEnabled(inventDimParmEnabled);
      #            inventDimFormSetup.formSetControls(true);
      #
      #            inventDimParmPriceWarning.initFromInventDim(inventDim);
      #            inventDimParmPriceWarning = InventDimParm::xorParms(inventDimParmPriceWarning, inventDimParmPriceSetup);
      #            this.setReferenceText();
      #
      #            priceDiscAdmSmartRound.enabled(priceDiscAdmTrans.Relation == PriceType::PriceSales);
      #
      #            priceDiscAdmCopyLine.enabled(priceDiscAdmTrans.RecId);
      #
      #            break;
      #
      #        case InventDimFormDesignUpdate::FieldChange   :
      #            inventDimFormSetup.formActiveSetup();
      #
      #            if (priceDiscAdmTrans.ItemCode == TableGroupAll::Table && priceDiscAdmTrans.ItemRelation)
      #            {
      #                localInventTable    = InventTable::find(priceDiscAdmTrans.ItemRelation);
      #                //Diviating from the common pattern using InventDimGroupSetup::newItemId(....) to allow the form to load with incomplete dimension settings on the product.
      #                inventDimGroupSetup = InventDimGroupSetup::newDimensionGroups(localInventTable.productDimensionGroup(),
      #                                                                              localInventTable.storageDimensionGroup(),
      #                                                                              localInventTable.trackingDimensionGroup());
      #                inventDimGroupSetup.inventDimParmActive(inventDimParmEnabled);
      #            }
      #            else
      #            {
      #                inventDimParmEnabled.clear();
      #            }
      #
      #            inventDimFormSetup.parmDimParmEnabled(inventDimParmEnabled);
      #            inventDimFormSetup.formSetControls(false);
      #            break;
      #
      #        default : throw error(strFmt("@SYS54195",funcName()));
      #    }
      #}
    ENDSOURCE
    SOURCE #updateTmpRetailPriceDiscAdmTrans
      #/// <summary>
      #/// Creates records in the <c>TmpRetailPriceDiscAdmTrans</c> table.
      #/// </summary>
      #public void updateTmpRetailPriceDiscAdmTrans()
      #{
      #    if (retailComparePriceMode)
      #    {
      #        if (lastUsedPriceDiscJournalNum != callerpriceDiscAdmTable.JournalNum)
      #        {
      #            retailPriceDiscAdmTable = RetailPriceDiscAdmTable::findByPriceDiscAdmTable(callerpriceDiscAdmTable.RecId);
      #
      #            retailPriceDiscResearchCalc.updateTable(callerpriceDiscAdmTable.JournalNum);
      #            RetailBasePrice.visible(retailPriceDiscAdmTable.SaveBasePrice);
      #            RetailSalesPrice.visible(retailPriceDiscAdmTable.SaveSalesPrice);
      #            RetailOtherGroup.visible(retailPriceDiscAdmTable.SaveOtherGroupPrice);
      #            RetailInventCost.visible(retailPriceDiscAdmTable.SaveInventCost);
      #            lastUsedPriceDiscJournalNum = callerpriceDiscAdmTable.JournalNum;
      #        }
      #    }
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PriceDiscAdmTrans
          Table               #PriceDiscAdmTrans
          CounterField        #LineNum
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD ItemCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    super();
                #
                #    element.initRecord();
                #
                #    element.updateDesign(InventDimFormDesignUpdate::FieldChange);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AccountCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #
                #    element.initRecord();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ItemRelation
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    InventDim   inventDimBlank;
                #
                #    super();
                #
                #    inventDimBlank = InventDim::find(InventDim::inventDimIdBlank());
                #    priceDiscAdmTrans.InventDimId = inventDimBlank.InventDimId;
                #    inventDim.data(inventDimBlank);
                #
                #    element.updateDesign(InventDimFormDesignUpdate::FieldChange);
                #
                #    // <GIN>
                #    if (countryRegion_IN)
                #    {
                #        element.enableActiveField_IN();
                #    }
                #    // </GIN>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AccountRelation
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #    priceDiscAdmTrans.initFromAccountCode();
                #    // <GEERU>
                #    if (countryRegion_RU)
                #    {
                #        element.initRecord();
                #    }
                #    // </GEERU>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Currency
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    priceDiscAdmTrans_ds.modifiedCurrency();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD relation
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #
                #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PDSCalculationId)).allowEdit(priceDiscAdmTrans.relation == PriceType::PricePurch);
                #    element.initRecord();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD GenericCurrency
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    priceDiscAdmTrans_ds.modifiedGenericCurrency();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD AgreementHeaderExt_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    priceDiscAdmTrans.jumpRefAgreement_RU();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    ret = priceDiscAdmTrans.lookupAgreement_RU(_formReferenceControl);
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    PriceDiscAdmTrans localPriceDiscAdmTrans;
          #
          #    localPriceDiscAdmTrans.data(priceDiscAdmTrans);
          #
          #    super(_append);
          #
          #    if (initFromPriceDiscAdmTrans)
          #    {
          #        priceDiscAdmTrans.initFromPriceDiscAdmTrans(localPriceDiscAdmTrans);
          #        initFromPriceDiscAdmTrans = false;
          #    }
          #
          #    element.doActiveButtons(true);
          #
          #    relation.setFocus();
          #}
        ENDSOURCE
        SOURCE #delete
          #/// <summary>
          #///     Deletes the current price journal line record and sets active buttons.
          #/// </summary>
          #public void delete()
          #{
          #    super();
          #
          #    element.doActiveButtons();
          #}
        ENDSOURCE
        SOURCE #modifiedCurrency
          #void modifiedCurrency()
          #{
          #    SalesParameters salesParameters;
          #
          #    if (priceDiscAdmTrans.Relation == PriceType::PriceSales)
          #    {
          #        salesParameters = SalesParameters::find();
          #
          #        if (salesParameters.GenericCurrency == priceDiscAdmTrans.Currency)
          #        {
          #            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).skip(false);
          #            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).allowEdit(true);
          #        }
          #        else
          #        {
          #            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).skip(true);
          #            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).allowEdit(false);
          #        }
          #    }
          #    else
          #    {
          #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).skip(true);
          #        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).allowEdit(false);
          #    }
          #
          #
          #}
        ENDSOURCE
        SOURCE #modifiedGenericCurrency
          #void modifiedGenericCurrency()
          #{
          #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans,Currency)).allowEdit(!priceDiscAdmTrans.GenericCurrency);
          #    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans,Currency)).skip(priceDiscAdmTrans.GenericCurrency);
          #}
          #
        ENDSOURCE
        SOURCE #checkIfLines
          #//BP Deviation documented
          #display ImageRes checkIfLines(PriceDiscAdmTrans _priceDiscAdmTrans)
          #{
          #    if (!lineMessage.exists(_priceDiscAdmTrans.RecId))
          #        lineMessage.insert(_priceDiscAdmTrans.RecId,element.checkLines(_priceDiscAdmTrans));
          #
          #    return lineMessage.lookup(_priceDiscAdmTrans.RecId);
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret;
          #    ;
          #
          #    priceDiscAdmTrans.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
          #
          #    ret = super();
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    priceDiscAdmTrans.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
          #
          #    super();
          #
          #    if (lineMessage.exists(priceDiscAdmTrans.RecId))
          #    {
          #        lineMessage.remove(priceDiscAdmTrans.RecId);
          #    }
          #
          #    if (priceDiscAdmTrans.InventDimId != inventDim.InventDimId)
          #    {
          #        inventDim.data(InventDim::find(priceDiscAdmTrans.InventDimId));
          #        inventDim_ds.setCurrent();
          #    }
          #
          #    // <GEERU>
          #    if (retailComparePriceMode)
          #    {
          #        retailPriceDiscResearchCalc.recalcRecord(PriceDiscAdmTrans);
          #        PriceDiscAdmTrans_ds.reread();
          #        PriceDiscAdmTrans_ds.reread();
          #        TmpRetailPriceDiscAdmTrans_ds.reread();
          #        TmpRetailPriceDiscAdmTrans_ds.refresh();
          #    }
          #    // </GEERU>
          #}
        ENDSOURCE
        SOURCE #linkActive
          #void linkActive()
          #{
          #    switch (element.args().record().TableId)
          #    {
          #        case (tableNum(PriceDiscAdmTable)) :
          #            callerpriceDiscAdmTable = element.args().record();
          #            element.doActiveButtons();
          #            // <GEERU>
          #            if (retailComparePriceMode)
          #            {
          #                element.lockWindowUpdate(true);
          #                element.updateTmpRetailPriceDiscAdmTrans();
          #                TmpRetailPriceDiscAdmTrans_ds.reread();
          #                TmpRetailPriceDiscAdmTrans_ds.refresh();
          #                element.lockWindowUpdate(false);
          #            }
          #            // </GEERU>
          #            break;
          #    }
          #
          #    super();
          #
          #    element.updateDesign(InventDimFormDesignUpdate::LinkActive);
          #
          #    if (callerpriceDiscAdmTable && !callerpriceDiscAdmTable.Posted)
          #    {
          #        element.setDeletionSwitch();
          #    }
          #}
        ENDSOURCE
        SOURCE #initValue
          #void initValue()
          #{
          #    super();
          #
          #    priceDiscAdmTrans.Currency       = Ledger::accountingCurrency(CompanyInfo::find().RecId);
          #    priceDiscAdmTrans.AccountCode    = TableGroupAll::All;
          #    priceDiscAdmTrans.ItemCode       = TableGroupAll::Table;
          #
          #    priceDiscAdmTrans.relation = callerpriceDiscAdmTable.DefaultRelation;
          #
          #    priceDiscAdmTrans.Module = priceDiscAdmTrans.module();
          #}
        ENDSOURCE
        SOURCE #active
          #int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    element.lock();
          #    element.initRecord();
          #    element.updateDesign(InventDimFormDesignUpdate::Active);
          #    element.doActiveButtons();
          #    element.unLock();
          #
          #    return ret;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #InventDim
          Table               #InventDim
          JoinSource          #PriceDiscAdmTrans
          LinkType            #InnerJoin
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #public void write()
          #{
          #//    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EcoResCategory
          Table               #EcoResCategory
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #selectionChanged
          #public void selectionChanged()
          #{
          #    super();
          #
          #    // clear the ranges on EcoResCategoryDescendents data source
          #    if (retailComparePriceMode)
          #    {
          #        RetailCategoryHelper::categorySelectionChanged(
          #            ecoResCategory,
          #            ecoResCategoryDescendents_ds,
          #            retailCategoryContainmentLookup_ds,
          #            selectedHierachyIsSpecial);
          #
          #        PriceDiscAdmTrans_ds.executeQuery();
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DERIVEDDATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EcoResCategory_PCClass
          Table               #PCClass
          Extends             #EcoResCategory
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDERIVEDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EcoResCategoryDescendents
          Table               #EcoResCategory
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #EcoResProductCategory
          LinkType            #ExistJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DERIVEDDATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EcoResCategoryDescendents_PCClass
          Table               #PCClass
          Extends             #EcoResCategoryDescendents
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDERIVEDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TmpRetailPriceDiscAdmTrans
          Table               #TmpRetailPriceDiscAdmTrans
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PriceDiscAdmTrans
          LinkType            #InnerJoin
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD AdditionalDataStatus
            PROPERTIES
              Visible             #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #RetailCategoryContainmentLookup
          Table               #RetailCategoryContainmentLookup
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #EcoResProductCategory
          LinkType            #ExistJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EcoResProductCategory
          Table               #EcoResProductCategory
          Index               #ProductCategory
          JoinSource          #TmpRetailPriceDiscAdmTrans
          LinkType            #ExistJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
    InventDim PriceDiscAdmTrans
    EcoResCategoryDescendents EcoResProductCategory
    TmpRetailPriceDiscAdmTrans PriceDiscAdmTrans
    RetailCategoryContainmentLookup EcoResProductCategory
    EcoResProductCategory TmpRetailPriceDiscAdmTrans
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS59019
      TitleDatasource     #PriceDiscAdmTrans
      Mode                #Edit
      HideIfEmpty         #No
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #715827882
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1073741823
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #Overview
          DataSource          #PriceDiscAdmTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CategoryHierarchyLookup
          AutoDeclaration     #Yes
          ElementPosition     #1033973606
          HierarchyParent     #CategoryTree
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CategoryTree
          AutoDeclaration     #Yes
          Visible             #No
          Height              #Column height
          ElementPosition     #858993458
          HierarchyParent     #DiscAgreement
          RightMargin         #0
          ViewEditMode        #Edit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Dates
          ElementPosition     #636291450
          HierarchyParent     #Details
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Delivery
          ElementPosition     #1431655764
          HierarchyParent     #Details
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Details
          Width               #Column width
          ElementPosition     #1431655764
          HierarchyParent     #GroupFooter
          FrameType           #None
          TopMargin           #5
          Columns             #6
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DiscAgreement
          Width               #Column width
          Height              #Column height
          ElementPosition     #1476395006
          HierarchyParent     #PriceDiscGroup
          Columns             #3
          Columnspace         #0
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupFooter
          Width               #Column width
          ElementPosition     #1879048190
          HierarchyParent     #PriceDiscGroup
          FrameType           #None
          DataSource          #PriceDiscAdmTrans
          LeftMargin          #5
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupHelp
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #Header
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupReference
          Width               #Column width
          ElementPosition     #1610612734
          HierarchyParent     #GroupHelp
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupWindow
          Width               #Column width
          ElementPosition     #1073741823
          HierarchyParent     #GroupHelp
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Header
          Width               #Column width
          ElementPosition     #1073741823
          HierarchyParent     #PriceDiscGroup
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InventBailee_RU
          AutoDeclaration     #Yes
          ElementPosition     #1908874352
          HierarchyParent     #Details
          FrameType           #None
          DataSource          #PriceDiscAdmTrans
          DataGroup           #InventBailee_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InventoryDimension
          ElementPosition     #1499624996
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #InventDim
          DataGroup           #InventoryDimensions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Misc
          ElementPosition     #1670265058
          HierarchyParent     #Details
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Percent
          ElementPosition     #1193046470
          HierarchyParent     #Details
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PriceDiscGroup
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Prices
          ElementPosition     #954437176
          HierarchyParent     #Details
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RetailBasePrice
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1650799409
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataGroup           #BasePrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RetailInventCost
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2023017674
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataGroup           #InventCost
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RetailOtherGroup
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1898944919
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataGroup           #OtherGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RetailSalesPrice
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1774872164
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataGroup           #SalesPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VerticalSplitter
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1288490187
          HierarchyParent     #DiscAgreement
          BackgroundColor     #Window background
          Style               #SplitterVerticalContainer
          LeftMargin          #0
          RightMargin         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #ButtonLineInventory
          HelpText            #@SYS69645
          ElementPosition     #2130706430
          HierarchyParent     #ButtonGroup
          Text                #@SYS981
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #PriceDiscAdmAdjust
          AutoDeclaration     #Yes
          HelpText            #@SYS134965
          ElementPosition     #2013265918
          HierarchyParent     #ButtonGroup
          Text                #@SYS16104
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #PriceDiscAdmCheck
          AutoDeclaration     #Yes
          HelpText            #@SYS23471
          ElementPosition     #1476395006
          HierarchyParent     #ButtonGroup
          Text                #@SYS2076
          MultiSelect         #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    // The button ValidateLinesWithErrorsOrWarnings will be disabled if there are no errors or warnings among the records
            #    PriceDiscAdmTrans tmpPriceDiscAdmTrans;
            #
            #    super();
            #    tmpPriceDiscAdmTrans = priceDiscAdmTrans_ds.getFirst();
            #    if (PriceDiscAdmTrans::existErrorsOrWarnings(tmpPriceDiscAdmTrans.JournalNum))
            #    {
            #        validateLinesWithErrorsOrWarnings.enabled(true);
            #    }
            #    else
            #    {
            #        validateLinesWithErrorsOrWarnings.enabled(false);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #CategoryHierarchyReferenceGroup
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #CategoryHierarchyLookup
          ReplacementFieldGroup #Name
          ExtendedDataType    #EcoResCategoryHierarchyId
          ViewEditMode        #Edit
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    EcoResCategoryHierarchy::lookupProductHierarchies(this);
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    if (mHierarchyTree)
            #    {
            #        element.initializeCategoryTree();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PriceDiscAdmTrans_AgreementHeaderExt_RU
          ElementPosition     #1495753331
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          ReferenceField      #AgreementHeaderExt_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          Width               #Column width
          Height              #Column height
          ElementPosition     #1717986916
          HierarchyParent     #DiscAgreement
          Tabs                #2
          DataSource          #PriceDiscAdmTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #ErrorLog
          ElementPosition     #1610612734
          HierarchyParent     #Tab
          Caption             #@SYS15457
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Overview
          ElementPosition     #1073741823
          HierarchyParent     #Tab
          Caption             #@SYS9039
          DataSource          #PriceDiscAdmTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #AddProductsButton
          AutoDeclaration     #Yes
          HelpText            #@REX1312
          ConfigurationKey    #Retail
          ElementPosition     #2118123518
          HierarchyParent     #ButtonGroup
          Text                #@SYS132109
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    MenuFunction menuFunction;
            #    Args args;
            #
            #    super();
            #
            #    menuFunction = new MenuFunction(menuitemDisplayStr(RetailPriceDiscAddItems), MenuItemType::Display);
            #    args = new Args();
            #    args.name(formStr(RetailAddItems));
            #    args.caller(element);
            #    args.record(callerpriceDiscAdmTable);
            #
            #    menuFunction.run(args);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #CalendarDays
          ElementPosition     #1431655764
          HierarchyParent     #Delivery
          DataSource          #PriceDiscAdmTrans
          DataField           #CalendarDays
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #DisregardLeadTime
          ElementPosition     #1789569705
          HierarchyParent     #Delivery
          DataSource          #PriceDiscAdmTrans
          DataField           #DisregardLeadTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #GenericCurrency
          ElementPosition     #1073741823
          HierarchyParent     #Misc
          BackgroundColor     #Window background
          DataSource          #PriceDiscAdmTrans
          DataField           #GenericCurrency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #SearchAgain
          ElementPosition     #1610612734
          HierarchyParent     #Misc
          DataSource          #PriceDiscAdmTrans
          DataField           #SearchAgain
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #AccountCode
          ElementPosition     #1480266671
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #AccountCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ItemCode
          ElementPosition     #1488010001
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #ItemCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PriceDiscAdmTrans_UnderCost
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1554841091
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #UnderCost
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #relation
          AutoDeclaration     #Yes
          ElementPosition     #1476395006
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #relation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #PriceDiscAdmCopyLine
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS340343
          ConfigurationKey    #PriceDisc
          ElementPosition     #2046820350
          HierarchyParent     #ButtonGroup
          Text                #@SYS183924
          MultiSelect         #No
          KeyTip              #@SYS340343
          Command             #260
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    initFromPriceDiscAdmTrans = true;
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #FromDate
          ElementPosition     #1073741822
          HierarchyParent     #Dates
          DataSource          #PriceDiscAdmTrans
          DataField           #FromDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #ToDate
          ElementPosition     #1610612733
          HierarchyParent     #Dates
          DataSource          #PriceDiscAdmTrans
          DataField           #ToDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #DeliveryTime
          ElementPosition     #1073741823
          HierarchyParent     #Delivery
          DataSource          #PriceDiscAdmTrans
          DataField           #DeliveryTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DeleteTradeAgreements
          AutoDeclaration     #Yes
          ElementPosition     #2139095038
          HierarchyParent     #ButtonGroup
          DataSource          #PriceDiscAdmTrans
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmDeleteTradeAgreements
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ExcelExportButton
          AutoDeclaration     #Yes
          ElementPosition     #2143289342
          HierarchyParent     #ButtonGroup
          DataSource          #PriceDiscAdmTrans
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmTransExcel
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventDimParmFixed
          ElementPosition     #1073741823
          HierarchyParent     #ButtonLineInventory
          SaveRecord          #No
          MenuItemName        #InventDimParmFixed
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PDSCalculationTable
          AutoDeclaration     #Yes
          ElementPosition     #2122317822
          HierarchyParent     #ButtonGroup
          DataSource          #PriceDiscAdmTrans
          MenuItemName        #PDSCalculationTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscAdmAdjustPrice
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #PriceDiscAdmAdjust
          DataSource          #PriceDiscAdmTrans
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmAdjust
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    //<GEERU>
            #    element.refreshTmpRetailPriceDiscAdmTrans();
            #    //</GEERU>
            #    priceDiscAdmTrans_ds.research();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscAdmCopy
          AutoDeclaration     #Yes
          ElementPosition     #2030043134
          HierarchyParent     #ButtonGroup
          DataSource          #PriceDiscAdmTrans
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmCopy
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    priceDiscAdmTrans_ds.research();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscAdmDelete
          AutoDeclaration     #Yes
          ElementPosition     #2113929214
          HierarchyParent     #ButtonGroup
          DataSource          #PriceDiscAdmTrans
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmDelete
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    priceDiscAdmTrans_ds.research();
            #    // The action would update PriceDiscAdmTable, so refresh it here.
            #    callerpriceDiscAdmTable = PriceDiscAdmTable::find(callerpriceDiscAdmTable.JournalNum, true);
            #    element.doActiveButtons();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscAdmPost
          AutoDeclaration     #Yes
          ElementPosition     #984263336
          HierarchyParent     #ButtonGroup
          DataSource          #PriceDiscAdmTrans
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmPost
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscAdmSearch
          AutoDeclaration     #Yes
          ElementPosition     #1744830462
          HierarchyParent     #ButtonGroup
          DataSource          #PriceDiscAdmTrans
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmSearch
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    priceDiscAdmTrans_ds.research();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscAdmSmartRound
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #PriceDiscAdmAdjust
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmSmartRound
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    //<GEERU>
            #    element.refreshTmpRetailPriceDiscAdmTrans();
            #    //</GEERU>
            #    priceDiscAdmTrans_ds.research();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscAdmSmartRoundRules
          ElementPosition     #1879048190
          HierarchyParent     #PriceDiscAdmAdjust
          Text                #@SYS134962
          MenuItemName        #PriceDiscSmartRounding
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailCategoryPriceRule
          AutoDeclaration     #Yes
          Visible             #No
          AllowEdit           #No
          HelpText            #@SYP4880889
          ElementPosition     #2141192190
          HierarchyParent     #ButtonGroup
          Text                #@SYP4880888
          SaveRecord          #No
          NeedsRecord         #Yes
          DataSource          #TmpRetailPriceDiscAdmTrans
          OpenMode            #View
          MenuItemName        #RetailCategoryPriceRule
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ValidateAll
          ElementPosition     #858993458
          HierarchyParent     #PriceDiscAdmCheck
          MultiSelect         #Yes
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmCheck
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ValidateLinesWithErrorsOrWarnings
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #PriceDiscAdmCheck
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmCheckErrorsOrWarningsLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ValidateSelectedLines
          ElementPosition     #1288490187
          HierarchyParent     #PriceDiscAdmCheck
          MultiSelect         #Yes
          MenuItemType        #Action
          MenuItemName        #PriceDiscAdmCheckSelectedLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Amount
          ElementPosition     #1515111656
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #Amount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #BasePrice_BasePrice
          ElementPosition     #1227133512
          HierarchyParent     #RetailBasePrice
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #BasePrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #BasePrice_BasePriceDeviation
          ElementPosition     #1533916890
          HierarchyParent     #RetailBasePrice
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #BasePriceDeviation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #BasePrice_BasePricePercent
          ElementPosition     #1840700268
          HierarchyParent     #RetailBasePrice
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #BasePricePercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #BasePrice_OrigCurBasePrice
          ElementPosition     #613566756
          HierarchyParent     #RetailBasePrice
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #OrigCurBasePrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #InventCost_InventCost
          ElementPosition     #858993458
          HierarchyParent     #RetailInventCost
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #InventCost
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #InventCost_InventCostDeviation
          ElementPosition     #1288490187
          HierarchyParent     #RetailInventCost
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #InventCostDeviation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #InventCost_InventCostPercent
          ElementPosition     #1717986916
          HierarchyParent     #RetailInventCost
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #InventCostPercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Markup
          ElementPosition     #1073741823
          HierarchyParent     #Prices
          DataSource          #PriceDiscAdmTrans
          DataField           #Markup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #MaximumRetailPrice_IN
          ElementPosition     #1518983321
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #MaximumRetailPrice_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #OtherGroup_OtherGroupPrice
          ElementPosition     #858993458
          HierarchyParent     #RetailOtherGroup
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #OtherGroupPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #OtherGroup_OtherGroupPriceDeviation
          ElementPosition     #1288490187
          HierarchyParent     #RetailOtherGroup
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #OtherGroupPriceDeviation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #OtherGroup_OtherGroupPricePercent
          ElementPosition     #1717986916
          HierarchyParent     #RetailOtherGroup
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #OtherGroupPricePercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Percent1
          ElementPosition     #1073741823
          HierarchyParent     #Percent
          DataSource          #PriceDiscAdmTrans
          DataField           #Percent1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Percent2
          ElementPosition     #1610612734
          HierarchyParent     #Percent
          DataSource          #PriceDiscAdmTrans
          DataField           #Percent2
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PriceDiscAdmTrans_QuantityAmountFrom
          ElementPosition     #1503496661
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #QuantityAmountFrom
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PriceDiscAdmTrans_QuantityAmountTo
          ElementPosition     #1507368326
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #QuantityAmountTo
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PriceUnit
          ElementPosition     #1610612734
          HierarchyParent     #Prices
          DataSource          #PriceDiscAdmTrans
          DataField           #PriceUnit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #SalesPrice_SalesPrice
          ElementPosition     #858993458
          HierarchyParent     #RetailSalesPrice
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #SalesPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #SalesPrice_SalesPriceDeviation
          ElementPosition     #1288490187
          HierarchyParent     #RetailSalesPrice
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #SalesPriceDeviation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #SalesPrice_SalesPricePercent
          ElementPosition     #1717986916
          HierarchyParent     #RetailSalesPrice
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #SalesPricePercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #Reference
          AutoDeclaration     #Yes
          Top                 #10
          VerticalSpacing     #0
          ElementPosition     #1073741823
          HierarchyParent     #GroupReference
          Text                #@SYS70185
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #WarningText
          AutoDeclaration     #Yes
          VerticalSpacing     #0
          ElementPosition     #1610612734
          HierarchyParent     #GroupReference
          Text                #
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AccountRelation
          ElementPosition     #1484138336
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #AccountRelation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BasePrice_BasePriceOrigCur
          ElementPosition     #920350134
          HierarchyParent     #RetailBasePrice
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataField           #BasePriceOrigCurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #INBPriceDiscAdmTrans_Log
          AllowEdit           #No
          Width               #Column width
          ElementPosition     #1073741823
          HierarchyParent     #ErrorLog
          MultiLine           #Yes
          DataSource          #PriceDiscAdmTrans
          DataField           #Log
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ItemRelation
          ElementPosition     #1491881666
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #ItemRelation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PriceDiscAdmTrans_Currency
          ElementPosition     #1522854986
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #Currency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PriceDiscAdmTrans_PDSCalculationId
          ElementPosition     #2147090430
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #PDSCalculationId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #UnitId
          ElementPosition     #1511239991
          HierarchyParent     #Grid
          DataSource          #PriceDiscAdmTrans
          DataField           #UnitId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TREE
        PROPERTIES
          Name                #HierarchyTreeCtrl
          Width               #Column width
          Height              #Column height
          ElementPosition     #1550960411
          HierarchyParent     #CategoryTree
        ENDPROPERTIES
        
        METHODS
          SOURCE #expanded
            #public void expanded(int _idx, FormTreeExpand _action, anytype _data)
            #{
            #    super(_idx, _action, _data);
            #
            #    if ((FormTreeExpand::Expand == _action) && mHierarchyTree)
            #    {
            #        mHierarchyTree.updateTree(_idx);
            #    }
            #}
          ENDSOURCE
          SOURCE #expanding
            #/// <summary>
            #/// Expands the node in the tree object.
            #/// </summary>
            #/// <param name="_idx">
            #/// The current index in the tree.
            #/// </param>
            #/// <param name="_action">
            #/// The action being taken.
            #/// </param>
            #/// <param name="_data">
            #/// The object being modified.
            #/// </param>
            #/// <returns>
            #/// true if the node is expands; otherwise, false.
            #/// </returns>
            #public boolean expanding(int _idx, FormTreeExpand _action, anytype _data)
            #{
            #    boolean ret;
            #
            #    ret = super(_idx, _action, _data);
            #
            #    if (mHierarchyTree)
            #    {
            #        mHierarchyTree.expanding(_idx, _action, _data);
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
          SOURCE #selectionChanged
            #/// <summary>
            #/// Sets the current selection to the currently selected item on the form tree control.
            #/// </summary>
            #/// <param name="_oldItem">
            #/// The item previously selected.
            #/// </param>
            #/// <param name="_newItem">
            #/// The new selected item.
            #/// </param>
            #/// <param name="_how">
            #/// The way the item was selected.
            #/// </param>
            #public void selectionChanged(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
            #{
            #    int root = this.getRoot();
            #
            #    super(_oldItem, _newItem, _how);
            #
            #    element.lockWindowUpdate(true);
            #    if (mHierarchyTree)
            #    {
            #        mHierarchyTree.selectionChanged(_oldItem, _newItem);
            #    }
            #
            #    element.lockWindowUpdate(false);
            #}
          ENDSOURCE
          SOURCE #selectionChanging
            #/// <summary>
            #///    Executes the form data source query whenever the current selection in the tree is changing.
            #/// </summary>
            #/// <param name="_oldItem">
            #///    The current selected item.
            #/// </param>
            #/// <param name="_newItem">
            #///    The item now being selected.
            #/// </param>
            #/// <param name="_how">
            #///    How the new item is being selected.
            #/// </param>
            #/// <returns>
            #///    true if the selection change should be vetoed; otherwise, false.
            #/// </returns>
            #public boolean selectionChanging(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
            #{
            #    boolean ret;
            #
            #    ret = super(_oldItem, _newItem, _how);
            #
            #    if (!ret && mHierarchyTree)
            #    {
            #        ret = mHierarchyTree.selectionChanging(_oldItem, _newItem, _how);
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #Changed
          AutoDeclaration     #Yes
          AllowEdit           #No
          Width               #15
          Height              #15
          AlignControl        #No
          HelpText            #@SYS138673
          ElementPosition     #1073741823
          HierarchyParent     #Grid
          BackStyle           #Transparent
          Label               #@SYS112136
          DataSource          #PriceDiscAdmTrans
          DataMethod          #isDiscAdmTransChanged
        ENDPROPERTIES
        
        METHODS
          SOURCE #toolTip
            #/// <summary>
            #///     Shows the explanation for the line change status graphical sign.
            #/// </summary>
            #/// <returns>
            #///     The explanation for the line change status graphical sign.
            #/// </returns>
            #public str toolTip()
            #{
            #    return priceDiscAdmTrans.isDiscAdmTransChanged()? "@SYS134963" : "";
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #ErrorExist
          AllowEdit           #No
          Width               #20
          Height              #14
          Skip                #Yes
          AlignControl        #No
          HelpText            #@SYS138677
          ElementPosition     #2147352574
          HierarchyParent     #Grid
          BackStyle           #Transparent
          Label               #@SYS138676
          DataSource          #PriceDiscAdmTrans
          DataMethod          #errorExist
        ENDPROPERTIES
        
        METHODS
          SOURCE #toolTip
            #/// <summary>
            #///     Shows the explanation for the validation error log graphical sign.
            #/// </summary>
            #/// <returns>
            #///     The explanation for the validation error log graphical sign.
            #/// </returns>
            #public str toolTip()
            #{
            #    return priceDiscAdmTrans.errorExist()? "@SYS134964" : "";
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #PriceDiscIcon
          AutoDeclaration     #Yes
          AllowEdit           #No
          Width               #15
          Height              #15
          Skip                #Yes
          AlignControl        #No
          HelpText            #@SYS138675
          ElementPosition     #2147221502
          HierarchyParent     #Grid
          BackStyle           #Transparent
          Label               #@SYS138674
          DataSource          #PriceDiscAdmTrans
          DataMethod          #CheckIfLines
        ENDPROPERTIES
        
        METHODS
          SOURCE #toolTip
            #/// <summary>
            #///     Shows the explanation for the line dimension status graphical sign.
            #/// </summary>
            #/// <returns>
            #///     The explanation for the line dimension status graphical sign.
            #/// </returns>
            #public str toolTip()
            #{
            #    str     ret;
            #
            #    switch (priceDiscAdmTrans_ds.checkIfLines(priceDiscAdmTrans))
            #    {
            #        case imageList.image(#ImageWarning) : ret = "@SYS70189"; break;
            #        case imageList.image(#ImageError)   : ret = "@SYS70186"; break;
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #RetailAdditionalDataStatus
          AutoDeclaration     #Yes
          Visible             #No
          AllowEdit           #No
          Width               #15
          Height              #15
          AlignControl        #No
          HelpText            #@SYP4880854
          ElementPosition     #1586827197
          HierarchyParent     #Grid
          BackStyle           #Transparent
          Label               #@SYP4880853
          DataSource          #TmpRetailPriceDiscAdmTrans
          DataMethod          #additionalDataStatusResImage
        ENDPROPERTIES
        
        METHODS
          SOURCE #toolTip
            #/// <summary>
            #///     Shows the explanation for the line change status graphical sign.
            #/// </summary>
            #/// <returns>
            #///     The explanation for the line change status graphical sign.
            #/// </returns>
            #public str toolTip()
            #{
            #    return TmpRetailPriceDiscAdmTrans.additionalDataStatusResImage() ? "@SYP4880855" : "";
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #Window
          Top                 #5
          AlignControl        #No
          ElementPosition     #1073741823
          HierarchyParent     #GroupWindow
          ImageResource       #930
          BackStyle           #Transparent
          BackgroundColor     #Button face (3D)
          ShowLabel           #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: PRN

; Microsoft Dynamics AX Project : MP_Novensys_VerificarePretImportat unloaded
; --------------------------------------------------------------------------------
  PROJECTVERSION 2
  
  PROJECT #MP_Novensys_VerificarePretImportat
  SHARED
  PROPERTIES
    Name                #MP_Novensys_VerificarePretImportat
    Origin              #{EFFDD468-6B6F-4040-AFE8-23339E28082A}
  ENDPROPERTIES
  
    PROJECTCLASS ProjectNode
    GROUP #Data Dictionary
      PROPERTIES
        Name                #Data Dictionary
        ProjectGroupType    #DataDictionary
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      GROUP #Tables
        PROPERTIES
          Name                #Tables
          ProjectGroupType    #Tables
          GroupMask           #
          PreventEditProperties #No
        ENDPROPERTIES
        
        BEGINNODE
          FILETYPE 0
          UTILTYPE 44
          UTILOBJECTID 972
          NODETYPE 204
          NAME #PriceDiscAdmTrans
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 44
          UTILOBJECTID 176
          NODETYPE 204
          NAME #InventTableModule
        ENDNODE
        ENDGROUP
        
      GROUP #Base Enums
        PROPERTIES
          Name                #Base Enums
          ProjectGroupType    #BaseEnums
          GroupMask           #
          PreventEditProperties #No
        ENDPROPERTIES
        
        BEGINNODE
          FILETYPE 0
          UTILTYPE 40
          UTILOBJECTID 732
          NODETYPE 209
          NAME #NoYesCombo
        ENDNODE
        ENDGROUP
        
      ENDGROUP
      
    GROUP #Classes
      PROPERTIES
        Name                #Classes
        ProjectGroupType    #Classes
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 2654
        NODETYPE 329
        NAME #PriceDiscAdmCheckPost
      ENDNODE
      ENDGROUP
      
    GROUP #Forms
      PROPERTIES
        Name                #Forms
        ProjectGroupType    #Forms
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #PriceDiscAdm
      ENDNODE
      ENDGROUP
      
  ENDPROJECT
  

***Element: END
